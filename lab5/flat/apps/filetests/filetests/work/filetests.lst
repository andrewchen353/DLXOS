 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 111
    4                      ; Text size: 4116
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
   10  00003000          	.align 2
   11  00003000          	LC0_LF0:
   12  00003000  74657374	.ascii "test.txt\000"
   12  00003004  2e747874	
   12  00003008  00      	
   13  00003009          	.align 2
   14  0000300c          	LC1_LF0:
   15  0000300c  7200    	.ascii "r\000"
   16  0000300e          	.align 2
   17  00003010          	LC2_LF0:
   18  00003010  4661696c	.ascii "Failed to open file \"test.txt\"\n\000"
   18  00003014  65642074	
   18  00003018  6f206f70	
   18  0000301c  656e2066	
   18  00003020  696c6520	
   18  00003024  22746573	
   18  00003028  742e7478	
   18  0000302c  74220a00	
   19  00003030          	.align 2
   20  00003030          	LC3_LF0:
   21  00003030  46696c65	.ascii "File successfully opened\n\000"
   21  00003034  20737563	
   21  00003038  63657373	
   21  0000303c  66756c6c	
   21  00003040  79206f70	
   21  00003044  656e6564	
   21  00003048  0a00    	
   22  0000304a          	.align 2
   23  0000304c          	LC4_LF0:
   24  0000304c  43686563	.ascii "Checking to see if the write works\000"
   24  00003050  6b696e67	
   24  00003054  20746f20	
   24  00003058  73656520	
   24  0000305c  69662074	
   24  00003060  68652077	
   24  00003064  72697465	
   24  00003068  20776f72	
   24  0000306c  6b7300  	
   25  0000306f          	.text
   26  00001000          	.align 2
   27  00001000          	.proc _main
   28  00001000          	.global _main
   29  00001000          	_main:
   30                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   31  00001000  afbefffc	sw	-4(r29),r30; push fp
   32  00001004  001df020	add	r30,r0,r29; fp = sp
   33  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   34  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   35  00001010  0c000ff8	jal	___main
   36  00001014  54000000	nop; not filled.
   37  00001018  23bdfff8	addi	r29,r29,#-8
   38  0000101c  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   39  00001020  24423000	addui	r2,r2,(LC0_LF0)&0xffff
   40  00001024  afa20000	sw	(r29),r2
   41  00001028  3c010000	lhi	r1,((LC1_LF0)>>16)&0xffff
   42  0000102c  2421300c	addui	r1,r1,(LC1_LF0)&0xffff
   43  00001030  afa10004	sw	4(r29),r1
   44  00001034  0c0001d8	jal	_file_open
   45  00001038  54000000	nop; not filled.
   46  0000103c  23bd0008	addi	r29,r29,#8
   47  00001040  6021ffff	seqi	r1,r1,#-1
   48  00001044  10200018	beqz	r1,L5_LF0
   49  00001048  54000000	nop; not filled.
   50  0000104c  23bdfff8	addi	r29,r29,#-8
   51  00001050  3c020000	lhi	r2,((LC2_LF0)>>16)&0xffff
   52  00001054  24423010	addui	r2,r2,(LC2_LF0)&0xffff
   53  00001058  08000010	j	L7_LF0
   54  0000105c  54000000	nop; not filled.
   55  00001060          	L5_LF0:
   56  00001060  23bdfff8	addi	r29,r29,#-8
   57  00001064  3c020000	lhi	r2,((LC3_LF0)>>16)&0xffff
   58  00001068  24423030	addui	r2,r2,(LC3_LF0)&0xffff
   59  0000106c          	L7_LF0:
   60  0000106c  afa20000	sw	(r29),r2
   61  00001070  0c000058	jal	_Printf
   62  00001074  54000000	nop; not filled.
   63  00001078  23bd0008	addi	r29,r29,#8
   64  0000107c  0c000f80	jal	_exit
   65  00001080  54000000	nop
   66  00001084          	.endproc _main
   67                      ;;;
   68                      ;;; Stub functions for DLX traps.
   69                      ;;;
   70                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
   71                      ;;;
   72                      ;;; The traps such as Open and Close
   73                      ;;; (note the capital letters) are for use by user programs.  The traps
   74                      ;;; with names such as open and close (lower case) are for use by the OS.
   75                      ;;;
   78  00001084          	.align 2
   80                      ;;; The following are the traps to be used by user-level programs
   81                      ;;;
   83  00001084          	.align 2
   84  00001084          	.proc _Open
   85  00001084          	.global _Open
   86  00001084          	_Open:
   87                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
   88                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
   89                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
   90  00001084  44000213	trap	#0x213
   91  00001088  4be00000	jr	r31
   92  0000108c  54000000	nop
   93  00001090          	.endproc _Open
   95  00001090          	.proc _Close
   96  00001090          	.global _Close
   97  00001090          	_Close:
   98  00001090  44000214	trap	#0x214
   99  00001094  4be00000	jr	r31
  100  00001098  54000000	nop
  101  0000109c          	.endproc _Close
  103  0000109c          	.proc _Read
  104  0000109c          	.global _Read
  105  0000109c          	_Read:
  106  0000109c  44000210	trap	#0x210
  107  000010a0  4be00000	jr	r31
  108  000010a4  54000000	nop
  109  000010a8          	.endproc _Read
  111  000010a8          	.proc _Write
  112  000010a8          	.global _Write
  113  000010a8          	_Write:
  114  000010a8  44000211	trap	#0x211
  115  000010ac  4be00000	jr	r31
  116  000010b0  54000000	nop
  117  000010b4          	.endproc _Write
  119  000010b4          	.proc _Lseek
  120  000010b4          	.global _Lseek
  121  000010b4          	_Lseek:
  122  000010b4  44000212	trap	#0x212
  123  000010b8  4be00000	jr	r31
  124  000010bc  54000000	nop
  125  000010c0          	.endproc _Lseek
  127  000010c0          	.proc _Putchar
  128  000010c0          	.global _Putchar
  129  000010c0          	_Putchar:
  130  000010c0  44000280	trap	#0x280
  131  000010c4  4be00000	jr	r31
  132  000010c8  54000000	nop
  133  000010cc          	.endproc _Putchar
  135  000010cc          	.proc _Printf
  136  000010cc          	.global _Printf
  137  000010cc          	_Printf:
  138  000010cc  44000201	trap	#0x201
  139  000010d0  4be00000	jr	r31
  140  000010d4  54000000	nop
  141  000010d8          	.endproc _Printf
  143  000010d8          	.proc _getpid
  144  000010d8          	.global _getpid
  145  000010d8          	_getpid:
  146  000010d8  44000431	trap	#0x431
  147  000010dc  4be00000	jr	r31
  148  000010e0  54000000	nop
  149  000010e4          	.endproc _getpid
  151  000010e4          	.proc _process_create
  152  000010e4          	.global _process_create
  153  000010e4          	_process_create:
  154  000010e4  44000432	trap	#0x432
  155  000010e8  4be00000	jr	r31
  156  000010ec  54000000	nop
  157  000010f0          	.endproc _process_create
  159  000010f0          	.proc _shmget
  160  000010f0          	.global _shmget
  161  000010f0          	_shmget:
  162  000010f0  44000440	trap	#0x440
  163  000010f4  4be00000	jr	r31
  164  000010f8  54000000	nop
  165  000010fc          	.endproc _shmget
  167  000010fc          	.proc _shmat
  168  000010fc          	.global _shmat
  169  000010fc          	_shmat:
  170  000010fc  44000441	trap	#0x441
  171  00001100  4be00000	jr	r31
  172  00001104  54000000	nop
  173  00001108          	.endproc _shmat
  175  00001108          	.proc _sem_create
  176  00001108          	.global _sem_create
  177  00001108          	_sem_create:
  178  00001108  44000450	trap	#0x450
  179  0000110c  4be00000	jr	r31
  180  00001110  54000000	nop
  181  00001114          	.endproc _sem_create
  183  00001114          	.proc _sem_wait
  184  00001114          	.global _sem_wait
  185  00001114          	_sem_wait:
  186  00001114  44000451	trap	#0x451
  187  00001118  4be00000	jr	r31
  188  0000111c  54000000	nop
  189  00001120          	.endproc _sem_wait
  191  00001120          	.proc _sem_signal
  192  00001120          	.global _sem_signal
  193  00001120          	_sem_signal:
  194  00001120  44000452	trap	#0x452
  195  00001124  4be00000	jr	r31
  196  00001128  54000000	nop
  197  0000112c          	.endproc _sem_signal
  199  0000112c          	.proc _lock_create
  200  0000112c          	.global _lock_create
  201  0000112c          	_lock_create:
  202  0000112c  44000453	trap	#0x453
  203  00001130  4be00000	jr	r31
  204  00001134  54000000	nop
  205  00001138          	.endproc _lock_create
  207  00001138          	.proc _lock_acquire
  208  00001138          	.global _lock_acquire
  209  00001138          	_lock_acquire:
  210  00001138  44000454	trap	#0x454
  211  0000113c  4be00000	jr	r31
  212  00001140  54000000	nop
  213  00001144          	.endproc _lock_acquire
  215  00001144          	.proc _lock_release
  216  00001144          	.global _lock_release
  217  00001144          	_lock_release:
  218  00001144  44000455	trap	#0x455
  219  00001148  4be00000	jr	r31
  220  0000114c  54000000	nop
  221  00001150          	.endproc _lock_release
  223  00001150          	.proc _cond_create
  224  00001150          	.global _cond_create
  225  00001150          	_cond_create:
  226  00001150  44000456	trap	#0x456
  227  00001154  4be00000	jr	r31
  228  00001158  54000000	nop
  229  0000115c          	.endproc _cond_create
  231  0000115c          	.proc _cond_wait
  232  0000115c          	.global _cond_wait
  233  0000115c          	_cond_wait:
  234  0000115c  44000457	trap	#0x457
  235  00001160  4be00000	jr	r31
  236  00001164  54000000	nop
  237  00001168          	.endproc _cond_wait
  239  00001168          	.proc _cond_signal
  240  00001168          	.global _cond_signal
  241  00001168          	_cond_signal:
  242  00001168  44000458	trap	#0x458
  243  0000116c  4be00000	jr	r31
  244  00001170  54000000	nop
  245  00001174          	.endproc _cond_signal
  247  00001174          	.proc _cond_broadcast
  248  00001174          	.global _cond_broadcast
  249  00001174          	_cond_broadcast:
  250  00001174  44000459	trap	#0x459
  251  00001178  4be00000	jr	r31
  252  0000117c  54000000	nop
  253  00001180          	.endproc _cond_broadcast
  255  00001180          	.proc _mbox_create
  256  00001180          	.global _mbox_create
  257  00001180          	_mbox_create:
  258  00001180  44000460	trap	#0x460
  259  00001184  4be00000	jr	r31
  260  00001188  54000000	nop
  261  0000118c          	.endproc _mbox_create
  263  0000118c          	.proc _mbox_open
  264  0000118c          	.global _mbox_open
  265  0000118c          	_mbox_open:
  266  0000118c  44000461	trap	#0x461
  267  00001190  4be00000	jr	r31
  268  00001194  54000000	nop
  269  00001198          	.endproc _mbox_open
  271  00001198          	.proc _mbox_close
  272  00001198          	.global _mbox_close
  273  00001198          	_mbox_close:
  274  00001198  44000462	trap	#0x462
  275  0000119c  4be00000	jr	r31
  276  000011a0  54000000	nop
  277  000011a4          	.endproc _mbox_close
  279  000011a4          	.proc _mbox_send
  280  000011a4          	.global _mbox_send
  281  000011a4          	_mbox_send:
  282  000011a4  44000463	trap	#0x463
  283  000011a8  4be00000	jr	r31
  284  000011ac  54000000	nop
  285  000011b0          	.endproc _mbox_send
  287  000011b0          	.proc _mbox_recv
  288  000011b0          	.global _mbox_recv
  289  000011b0          	_mbox_recv:
  290  000011b0  44000464	trap	#0x464
  291  000011b4  4be00000	jr	r31
  292  000011b8  54000000	nop
  293  000011bc          	.endproc _mbox_recv
  295  000011bc          	.proc _sleep
  296  000011bc          	.global _sleep
  297  000011bc          	_sleep:
  298  000011bc  44000465	trap	#0x465
  299  000011c0  4be00000	jr	r31
  300  000011c4  54000000	nop
  301  000011c8          	.endproc _sleep
  303  000011c8          	.proc _yield
  304  000011c8          	.global _yield
  305  000011c8          	_yield:
  306  000011c8  44000466	trap	#0x466
  307  000011cc  4be00000	jr	r31
  308  000011d0  54000000	nop
  309  000011d4          	.endproc _yield
  311  000011d4          	.proc _disk_write_block
  312  000011d4          	.global _disk_write_block
  313  000011d4          	_disk_write_block:
  314  000011d4  44000467	trap	#0x467
  315  000011d8  4be00000	jr	r31
  316  000011dc  54000000	nop
  317  000011e0          	.endproc _disk_write_block
  319  000011e0          	.proc _disk_size
  320  000011e0          	.global _disk_size
  321  000011e0          	_disk_size:
  322  000011e0  44000468	trap	#0x468
  323  000011e4  4be00000	jr	r31
  324  000011e8  54000000	nop
  325  000011ec          	.endproc _disk_size
  327  000011ec          	.proc _disk_blocksize
  328  000011ec          	.global _disk_blocksize
  329  000011ec          	_disk_blocksize:
  330  000011ec  44000469	trap	#0x469
  331  000011f0  4be00000	jr	r31
  332  000011f4  54000000	nop
  333  000011f8          	.endproc _disk_blocksize
  335  000011f8          	.proc _disk_create
  336  000011f8          	.global _disk_create
  337  000011f8          	_disk_create:
  338  000011f8  44000470	trap	#0x470
  339  000011fc  4be00000	jr	r31
  340  00001200  54000000	nop
  341  00001204          	.endproc _disk_create
  343  00001204          	.proc _dfs_invalidate
  344  00001204          	.global _dfs_invalidate
  345  00001204          	_dfs_invalidate:
  346  00001204  44000471	trap	#0x471
  347  00001208  4be00000	jr	r31
  348  0000120c  54000000	nop
  349  00001210          	.endproc _dfs_invalidate
  351  00001210          	.proc _file_open
  352  00001210          	.global _file_open
  353  00001210          	_file_open:
  354  00001210  44000472	trap	#0x472
  355  00001214  4be00000	jr	r31
  356  00001218  54000000	nop
  357  0000121c          	.endproc _file_open
  359  0000121c          	.proc _file_close
  360  0000121c          	.global _file_close
  361  0000121c          	_file_close:
  362  0000121c  44000473	trap	#0x473
  363  00001220  4be00000	jr	r31
  364  00001224  54000000	nop
  365  00001228          	.endproc _file_close
  367  00001228          	.proc _file_delete
  368  00001228          	.global _file_delete
  369  00001228          	_file_delete:
  370  00001228  44000474	trap	#0x474
  371  0000122c  4be00000	jr	r31
  372  00001230  54000000	nop
  373  00001234          	.endproc _file_delete
  375  00001234          	.proc _file_read
  376  00001234          	.global _file_read
  377  00001234          	_file_read:
  378  00001234  44000475	trap	#0x475
  379  00001238  4be00000	jr	r31
  380  0000123c  54000000	nop
  381  00001240          	.endproc _file_read
  383  00001240          	.proc _file_write
  384  00001240          	.global _file_write
  385  00001240          	_file_write:
  386  00001240  44000476	trap	#0x476
  387  00001244  4be00000	jr	r31
  388  00001248  54000000	nop
  389  0000124c          	.endproc _file_write
  391  0000124c          	.proc _file_seek
  392  0000124c          	.global _file_seek
  393  0000124c          	_file_seek:
  394  0000124c  44000477	trap	#0x477
  395  00001250  4be00000	jr	r31
  396  00001254  54000000	nop
  397  00001258          	.endproc _file_seek
  399  00001258          	.proc _run_os_tests
  400  00001258          	.global _run_os_tests
  401  00001258          	_run_os_tests:
  402  00001258  440004ff	trap	#0x4FF
  403  0000125c  4be00000	jr	r31
  404  00001260  54000000	nop
  405  00001264          	.endproc _run_os_tests
  408  00001264          	.proc _Exit
  409  00001264          	.global _Exit
  410  00001264          	_Exit:
  411  00001264  44000500	trap	#0x500
  412  00001268  4be00000	jr	r31
  413  0000126c  54000000	nop
  414  00001270          	.endproc _Exit
  415                      ; Compiled by GCC
  417  00001270          	.align 2
  418  00001270          	.proc _isspace
  419  00001270          	.global _isspace
  420  00001270          	_isspace:
  421                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  422  00001270  afbefffc	sw	-4(r29),r30; push fp
  423  00001274  001df020	add	r30,r0,r29; fp = sp
  424  00001278  afbffff8	sw	-8(r29),r31; push ret addr
  425  0000127c  2fbd0018	subui	r29,r29,#24; alloc local storage
  426  00001280  afa20000	sw	0(r29),r2
  427  00001284  afa30004	sw	4(r29),r3
  428  00001288  afa40008	sw	8(r29),r4
  429  0000128c  83c20003	lb	r2,3(r30)
  430  00001290  20010000	addi	r1,r0,#0
  431  00001294  304300ff	andi	r3,r2,#0x00ff
  432  00001298  60640020	seqi	r4,r3,#32
  433  0000129c  1480002c	bnez	r4,L3_LF2
  434  000012a0  54000000	nop; delay slot nop
  435  000012a4  304300ff	andi	r3,r2,#0x00ff
  436  000012a8  60640009	seqi	r4,r3,#9
  437  000012ac  1480001c	bnez	r4,L3_LF2
  438  000012b0  54000000	nop; delay slot nop
  439  000012b4  304300ff	andi	r3,r2,#0x00ff
  440  000012b8  6064000a	seqi	r4,r3,#10
  441  000012bc  1480000c	bnez	r4,L3_LF2
  442  000012c0  54000000	nop; delay slot nop
  443  000012c4  08000008	j	L2_LF2
  444  000012c8  54000000	nop; delay slot nop
  445  000012cc          	L3_LF2:
  446  000012cc  20010001	addi	r1,r0,#1
  447  000012d0          	L2_LF2:
  448  000012d0  08000004	j	L1_LF2
  449  000012d4  54000000	nop; delay slot nop
  450  000012d8          	L1_LF2:
  451  000012d8  8fa20000	lw	r2,0(r29)
  452  000012dc  8fa30004	lw	r3,4(r29)
  453  000012e0  8fa40008	lw	r4,8(r29)
  454  000012e4  8fdffff8	lw	r31,-8(r30)
  455  000012e8  001ee820	add	r29,r0,r30
  456  000012ec  8fdefffc	lw	r30,-4(r30)
  457  000012f0  4be00000	jr	r31
  458  000012f4  54000000	nop
  459  000012f8          	.endproc _isspace
  460  000012f8          	.align 2
  461  000012f8          	.proc _isxdigit
  462  000012f8          	.global _isxdigit
  463  000012f8          	_isxdigit:
  464                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  465  000012f8  afbefffc	sw	-4(r29),r30; push fp
  466  000012fc  001df020	add	r30,r0,r29; fp = sp
  467  00001300  afbffff8	sw	-8(r29),r31; push ret addr
  468  00001304  2fbd0018	subui	r29,r29,#24; alloc local storage
  469  00001308  afa20000	sw	0(r29),r2
  470  0000130c  afa30004	sw	4(r29),r3
  471  00001310  afa40008	sw	8(r29),r4
  472  00001314  83c20003	lb	r2,3(r30)
  473  00001318  20010000	addi	r1,r0,#0
  474  0000131c  304300ff	andi	r3,r2,#0x00ff
  475  00001320  6c64002f	sgtui	r4,r3,#47
  476  00001324  1080001c	beqz	r4,L7_LF2
  477  00001328  54000000	nop; delay slot nop
  478  0000132c  304300ff	andi	r3,r2,#0x00ff
  479  00001330  70640039	sleui	r4,r3,#57
  480  00001334  1480005c	bnez	r4,L6_LF2
  481  00001338  54000000	nop; delay slot nop
  482  0000133c  08000004	j	L7_LF2
  483  00001340  54000000	nop; delay slot nop
  484  00001344          	L7_LF2:
  485  00001344  304300ff	andi	r3,r2,#0x00ff
  486  00001348  6c640060	sgtui	r4,r3,#96
  487  0000134c  1080001c	beqz	r4,L8_LF2
  488  00001350  54000000	nop; delay slot nop
  489  00001354  304300ff	andi	r3,r2,#0x00ff
  490  00001358  70640066	sleui	r4,r3,#102
  491  0000135c  14800034	bnez	r4,L6_LF2
  492  00001360  54000000	nop; delay slot nop
  493  00001364  08000004	j	L8_LF2
  494  00001368  54000000	nop; delay slot nop
  495  0000136c          	L8_LF2:
  496  0000136c  304300ff	andi	r3,r2,#0x00ff
  497  00001370  6c640040	sgtui	r4,r3,#64
  498  00001374  10800020	beqz	r4,L5_LF2
  499  00001378  54000000	nop; delay slot nop
  500  0000137c  304300ff	andi	r3,r2,#0x00ff
  501  00001380  70640041	sleui	r4,r3,#65
  502  00001384  1480000c	bnez	r4,L6_LF2
  503  00001388  54000000	nop; delay slot nop
  504  0000138c  08000008	j	L5_LF2
  505  00001390  54000000	nop; delay slot nop
  506  00001394          	L6_LF2:
  507  00001394  20010001	addi	r1,r0,#1
  508  00001398          	L5_LF2:
  509  00001398  08000004	j	L4_LF2
  510  0000139c  54000000	nop; delay slot nop
  511  000013a0          	L4_LF2:
  512  000013a0  8fa20000	lw	r2,0(r29)
  513  000013a4  8fa30004	lw	r3,4(r29)
  514  000013a8  8fa40008	lw	r4,8(r29)
  515  000013ac  8fdffff8	lw	r31,-8(r30)
  516  000013b0  001ee820	add	r29,r0,r30
  517  000013b4  8fdefffc	lw	r30,-4(r30)
  518  000013b8  4be00000	jr	r31
  519  000013bc  54000000	nop
  520  000013c0          	.endproc _isxdigit
  521  000013c0          	.align 2
  522  000013c0          	.proc _dstrcpy
  523  000013c0          	.global _dstrcpy
  524  000013c0          	_dstrcpy:
  525                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  526  000013c0  afbefffc	sw	-4(r29),r30; push fp
  527  000013c4  001df020	add	r30,r0,r29; fp = sp
  528  000013c8  afbffff8	sw	-8(r29),r31; push ret addr
  529  000013cc  2fbd0018	subui	r29,r29,#24; alloc local storage
  530  000013d0  afa20000	sw	0(r29),r2
  531  000013d4  afa30004	sw	4(r29),r3
  532  000013d8  8fc10000	lw	r1,(r30)
  533  000013dc  afc1fff4	sw	-12(r30),r1
  534  000013e0          	L10_LF2:
  535  000013e0  8fc10000	lw	r1,(r30)
  536  000013e4  20220001	addi	r2,r1,#1
  537  000013e8  afc20000	sw	(r30),r2
  538  000013ec  8fc20004	lw	r2,4(r30)
  539  000013f0  20430001	addi	r3,r2,#1
  540  000013f4  afc30004	sw	4(r30),r3
  541  000013f8  80420000	lb	r2,(r2)
  542  000013fc  a0220000	sb	(r1),r2
  543  00001400  a3c2fff3	sb	-13(r30),r2
  544  00001404          	L12_LF2:
  545  00001404  93c1fff3	lbu	r1,-13(r30)
  546  00001408  64220000	snei	r2,r1,#0
  547  0000140c  1440000c	bnez	r2,L13_LF2
  548  00001410  54000000	nop; delay slot nop
  549  00001414  0800000c	j	L11_LF2
  550  00001418  54000000	nop; delay slot nop
  551  0000141c          	L13_LF2:
  552  0000141c  0bffffc0	j	L10_LF2
  553  00001420  54000000	nop; delay slot nop
  554  00001424          	L11_LF2:
  555  00001424  8fc1fff4	lw	r1,-12(r30)
  556  00001428  08000004	j	L9_LF2
  557  0000142c  54000000	nop; delay slot nop
  558  00001430          	L9_LF2:
  559  00001430  8fa20000	lw	r2,0(r29)
  560  00001434  8fa30004	lw	r3,4(r29)
  561  00001438  8fdffff8	lw	r31,-8(r30)
  562  0000143c  001ee820	add	r29,r0,r30
  563  00001440  8fdefffc	lw	r30,-4(r30)
  564  00001444  4be00000	jr	r31
  565  00001448  54000000	nop
  566  0000144c          	.endproc _dstrcpy
  567  0000144c          	.align 2
  568  0000144c          	.proc _dstrncpy
  569  0000144c          	.global _dstrncpy
  570  0000144c          	_dstrncpy:
  571                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  572  0000144c  afbefffc	sw	-4(r29),r30; push fp
  573  00001450  001df020	add	r30,r0,r29; fp = sp
  574  00001454  afbffff8	sw	-8(r29),r31; push ret addr
  575  00001458  2fbd0018	subui	r29,r29,#24; alloc local storage
  576  0000145c  afa20000	sw	0(r29),r2
  577  00001460  afa30004	sw	4(r29),r3
  578  00001464  8fc10000	lw	r1,(r30)
  579  00001468  afc1fff4	sw	-12(r30),r1
  580  0000146c          	L15_LF2:
  581  0000146c  8fc10008	lw	r1,8(r30)
  582  00001470  2022ffff	addi	r2,r1,#-1
  583  00001474  afc20008	sw	8(r30),r2
  584  00001478  70210000	slei	r1,r1,#0
  585  0000147c  1020000c	beqz	r1,L18_LF2
  586  00001480  54000000	nop; delay slot nop
  587  00001484  08000048	j	L16_LF2
  588  00001488  54000000	nop; delay slot nop
  589  0000148c          	L18_LF2:
  590  0000148c  8fc10000	lw	r1,(r30)
  591  00001490  20220001	addi	r2,r1,#1
  592  00001494  afc20000	sw	(r30),r2
  593  00001498  8fc20004	lw	r2,4(r30)
  594  0000149c  20430001	addi	r3,r2,#1
  595  000014a0  afc30004	sw	4(r30),r3
  596  000014a4  80420000	lb	r2,(r2)
  597  000014a8  a0220000	sb	(r1),r2
  598  000014ac  a3c2fff3	sb	-13(r30),r2
  599  000014b0          	L17_LF2:
  600  000014b0  93c1fff3	lbu	r1,-13(r30)
  601  000014b4  64220000	snei	r2,r1,#0
  602  000014b8  1440000c	bnez	r2,L19_LF2
  603  000014bc  54000000	nop; delay slot nop
  604  000014c0  0800000c	j	L16_LF2
  605  000014c4  54000000	nop; delay slot nop
  606  000014c8          	L19_LF2:
  607  000014c8  0bffffa0	j	L15_LF2
  608  000014cc  54000000	nop; delay slot nop
  609  000014d0          	L16_LF2:
  610  000014d0  8fc1fff4	lw	r1,-12(r30)
  611  000014d4  08000004	j	L14_LF2
  612  000014d8  54000000	nop; delay slot nop
  613  000014dc          	L14_LF2:
  614  000014dc  8fa20000	lw	r2,0(r29)
  615  000014e0  8fa30004	lw	r3,4(r29)
  616  000014e4  8fdffff8	lw	r31,-8(r30)
  617  000014e8  001ee820	add	r29,r0,r30
  618  000014ec  8fdefffc	lw	r30,-4(r30)
  619  000014f0  4be00000	jr	r31
  620  000014f4  54000000	nop
  621  000014f8          	.endproc _dstrncpy
  622  000014f8          	.align 2
  623  000014f8          	.proc _dstrcat
  624  000014f8          	.global _dstrcat
  625  000014f8          	_dstrcat:
  626                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  627  000014f8  afbefffc	sw	-4(r29),r30; push fp
  628  000014fc  001df020	add	r30,r0,r29; fp = sp
  629  00001500  afbffff8	sw	-8(r29),r31; push ret addr
  630  00001504  2fbd0018	subui	r29,r29,#24; alloc local storage
  631  00001508  afa20000	sw	0(r29),r2
  632  0000150c  8fc10000	lw	r1,(r30)
  633  00001510  afc1fff4	sw	-12(r30),r1
  634  00001514          	L21_LF2:
  635  00001514  8fc10000	lw	r1,(r30)
  636  00001518  90220000	lbu	r2,(r1)
  637  0000151c  64410000	snei	r1,r2,#0
  638  00001520  1420000c	bnez	r1,L23_LF2
  639  00001524  54000000	nop; delay slot nop
  640  00001528  0800001c	j	L22_LF2
  641  0000152c  54000000	nop; delay slot nop
  642  00001530          	L23_LF2:
  643  00001530  8fc20000	lw	r2,(r30)
  644  00001534  20410001	addi	r1,r2,#1
  645  00001538  00011020	add	r2,r0,r1
  646  0000153c  afc20000	sw	(r30),r2
  647  00001540  0bffffd0	j	L21_LF2
  648  00001544  54000000	nop; delay slot nop
  649  00001548          	L22_LF2:
  650  00001548  23bdfff8	addi	r29,r29,#-8
  651  0000154c  001d0820	add	r1,r0,r29
  652  00001550  8fc20000	lw	r2,(r30)
  653  00001554  ac220000	sw	(r1),r2
  654  00001558  8fc20004	lw	r2,4(r30)
  655  0000155c  ac220004	sw	4(r1),r2
  656  00001560  0ffffe5c	jal	_dstrcpy
  657  00001564  54000000	nop; delay slot nop
  658  00001568  23bd0008	addi	r29,r29,#8
  659  0000156c  8fc1fff4	lw	r1,-12(r30)
  660  00001570  08000004	j	L20_LF2
  661  00001574  54000000	nop; delay slot nop
  662  00001578          	L20_LF2:
  663  00001578  8fa20000	lw	r2,0(r29)
  664  0000157c  8fdffff8	lw	r31,-8(r30)
  665  00001580  001ee820	add	r29,r0,r30
  666  00001584  8fdefffc	lw	r30,-4(r30)
  667  00001588  4be00000	jr	r31
  668  0000158c  54000000	nop
  669  00001590          	.endproc _dstrcat
  670  00001590          	.align 2
  671  00001590          	.proc _dstrncmp
  672  00001590          	.global _dstrncmp
  673  00001590          	_dstrncmp:
  674                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  675  00001590  afbefffc	sw	-4(r29),r30; push fp
  676  00001594  001df020	add	r30,r0,r29; fp = sp
  677  00001598  afbffff8	sw	-8(r29),r31; push ret addr
  678  0000159c  2fbd0018	subui	r29,r29,#24; alloc local storage
  679  000015a0  afa20000	sw	0(r29),r2
  680  000015a4  afa30004	sw	4(r29),r3
  681  000015a8  54000000	nop
  682  000015ac  20010000	addi	r1,r0,#0
  683  000015b0  afc1fff4	sw	-12(r30),r1
  684  000015b4          	L25_LF2:
  685  000015b4  8fc1fff4	lw	r1,-12(r30)
  686  000015b8  8fc20008	lw	r2,8(r30)
  687  000015bc  0022082a	slt	r1,r1,r2
  688  000015c0  1420000c	bnez	r1,L28_LF2
  689  000015c4  54000000	nop; delay slot nop
  690  000015c8  08000088	j	L26_LF2
  691  000015cc  54000000	nop; delay slot nop
  692  000015d0          	L28_LF2:
  693  000015d0  8fc10004	lw	r1,4(r30)
  694  000015d4  90220000	lbu	r2,(r1)
  695  000015d8  64410000	snei	r1,r2,#0
  696  000015dc  14200018	bnez	r1,L29_LF2
  697  000015e0  54000000	nop; delay slot nop
  698  000015e4  20010000	addi	r1,r0,#0
  699  000015e8  080000d8	j	L24_LF2
  700  000015ec  54000000	nop; delay slot nop
  701  000015f0  08000028	j	L30_LF2
  702  000015f4  54000000	nop; delay slot nop
  703  000015f8          	L29_LF2:
  704  000015f8  8fc10000	lw	r1,(r30)
  705  000015fc  8fc20004	lw	r2,4(r30)
  706  00001600  90210000	lbu	r1,(r1)
  707  00001604  90420000	lbu	r2,(r2)
  708  00001608  00220829	sne	r1,r1,r2
  709  0000160c  1020000c	beqz	r1,L30_LF2
  710  00001610  54000000	nop; delay slot nop
  711  00001614  0800003c	j	L26_LF2
  712  00001618  54000000	nop; delay slot nop
  713  0000161c          	L31_LF2:
  714  0000161c          	L30_LF2:
  715  0000161c  8fc20000	lw	r2,(r30)
  716  00001620  20410001	addi	r1,r2,#1
  717  00001624  00011020	add	r2,r0,r1
  718  00001628  afc20000	sw	(r30),r2
  719  0000162c  8fc20004	lw	r2,4(r30)
  720  00001630  20410001	addi	r1,r2,#1
  721  00001634  00011020	add	r2,r0,r1
  722  00001638  afc20004	sw	4(r30),r2
  723  0000163c          	L27_LF2:
  724  0000163c  8fc2fff4	lw	r2,-12(r30)
  725  00001640  20410001	addi	r1,r2,#1
  726  00001644  00011020	add	r2,r0,r1
  727  00001648  afc2fff4	sw	-12(r30),r2
  728  0000164c  0bffff64	j	L25_LF2
  729  00001650  54000000	nop; delay slot nop
  730  00001654          	L26_LF2:
  731  00001654  8fc1fff4	lw	r1,-12(r30)
  732  00001658  8fc20008	lw	r2,8(r30)
  733  0000165c  00220828	seq	r1,r1,r2
  734  00001660  10200018	beqz	r1,L32_LF2
  735  00001664  54000000	nop; delay slot nop
  736  00001668  20010000	addi	r1,r0,#0
  737  0000166c  08000054	j	L24_LF2
  738  00001670  54000000	nop; delay slot nop
  739  00001674  0800004c	j	L33_LF2
  740  00001678  54000000	nop; delay slot nop
  741  0000167c          	L32_LF2:
  742  0000167c  8fc20000	lw	r2,(r30)
  743  00001680  90410000	lbu	r1,(r2)
  744  00001684  8fc20004	lw	r2,4(r30)
  745  00001688  90430000	lbu	r3,(r2)
  746  0000168c  00230822	sub	r1,r1,r3
  747  00001690  74220000	sgei	r2,r1,#0
  748  00001694  10400020	beqz	r2,L34_LF2
  749  00001698  54000000	nop; delay slot nop
  750  0000169c  8fc10000	lw	r1,(r30)
  751  000016a0  8fc20004	lw	r2,4(r30)
  752  000016a4  90210000	lbu	r1,(r1)
  753  000016a8  90420000	lbu	r2,(r2)
  754  000016ac  00220829	sne	r1,r1,r2
  755  000016b0  08000008	j	L35_LF2
  756  000016b4  54000000	nop; delay slot nop
  757  000016b8          	L34_LF2:
  758  000016b8  2001ffff	addi	r1,r0,#-1
  759  000016bc          	L35_LF2:
  760  000016bc  08000004	j	L24_LF2
  761  000016c0  54000000	nop; delay slot nop
  762  000016c4          	L33_LF2:
  763  000016c4          	L24_LF2:
  764  000016c4  8fa20000	lw	r2,0(r29)
  765  000016c8  8fa30004	lw	r3,4(r29)
  766  000016cc  8fdffff8	lw	r31,-8(r30)
  767  000016d0  001ee820	add	r29,r0,r30
  768  000016d4  8fdefffc	lw	r30,-4(r30)
  769  000016d8  4be00000	jr	r31
  770  000016dc  54000000	nop
  771  000016e0          	.endproc _dstrncmp
  772  000016e0          	.align 2
  773  000016e0          	.proc _dstrlen
  774  000016e0          	.global _dstrlen
  775  000016e0          	_dstrlen:
  776                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  777  000016e0  afbefffc	sw	-4(r29),r30; push fp
  778  000016e4  001df020	add	r30,r0,r29; fp = sp
  779  000016e8  afbffff8	sw	-8(r29),r31; push ret addr
  780  000016ec  2fbd0018	subui	r29,r29,#24; alloc local storage
  781  000016f0  afa20000	sw	0(r29),r2
  782  000016f4  20010000	addi	r1,r0,#0
  783  000016f8  afc1fff4	sw	-12(r30),r1
  784  000016fc          	L37_LF2:
  785  000016fc  8fc10000	lw	r1,(r30)
  786  00001700  20220001	addi	r2,r1,#1
  787  00001704  afc20000	sw	(r30),r2
  788  00001708  90210000	lbu	r1,(r1)
  789  0000170c  64220000	snei	r2,r1,#0
  790  00001710  1440000c	bnez	r2,L39_LF2
  791  00001714  54000000	nop; delay slot nop
  792  00001718  0800001c	j	L38_LF2
  793  0000171c  54000000	nop; delay slot nop
  794  00001720          	L39_LF2:
  795  00001720  8fc2fff4	lw	r2,-12(r30)
  796  00001724  20410001	addi	r1,r2,#1
  797  00001728  00011020	add	r2,r0,r1
  798  0000172c  afc2fff4	sw	-12(r30),r2
  799  00001730  0bffffc8	j	L37_LF2
  800  00001734  54000000	nop; delay slot nop
  801  00001738          	L38_LF2:
  802  00001738  8fc1fff4	lw	r1,-12(r30)
  803  0000173c  08000004	j	L36_LF2
  804  00001740  54000000	nop; delay slot nop
  805  00001744          	L36_LF2:
  806  00001744  8fa20000	lw	r2,0(r29)
  807  00001748  8fdffff8	lw	r31,-8(r30)
  808  0000174c  001ee820	add	r29,r0,r30
  809  00001750  8fdefffc	lw	r30,-4(r30)
  810  00001754  4be00000	jr	r31
  811  00001758  54000000	nop
  812  0000175c          	.endproc _dstrlen
  813  0000175c          	.align 2
  814  0000175c          	.proc _dstrstr
  815  0000175c          	.global _dstrstr
  816  0000175c          	_dstrstr:
  817                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  818  0000175c  afbefffc	sw	-4(r29),r30; push fp
  819  00001760  001df020	add	r30,r0,r29; fp = sp
  820  00001764  afbffff8	sw	-8(r29),r31; push ret addr
  821  00001768  2fbd0018	subui	r29,r29,#24; alloc local storage
  822  0000176c  afa20000	sw	0(r29),r2
  823  00001770  23bdfff8	addi	r29,r29,#-8
  824  00001774  001d0820	add	r1,r0,r29
  825  00001778  8fc20004	lw	r2,4(r30)
  826  0000177c  ac220000	sw	(r1),r2
  827  00001780  0fffff5c	jal	_dstrlen
  828  00001784  54000000	nop; delay slot nop
  829  00001788  23bd0008	addi	r29,r29,#8
  830  0000178c  afc1fff4	sw	-12(r30),r1
  831  00001790          	L41_LF2:
  832  00001790  8fc10000	lw	r1,(r30)
  833  00001794  90220000	lbu	r2,(r1)
  834  00001798  64410000	snei	r1,r2,#0
  835  0000179c  1420000c	bnez	r1,L43_LF2
  836  000017a0  54000000	nop; delay slot nop
  837  000017a4  08000060	j	L42_LF2
  838  000017a8  54000000	nop; delay slot nop
  839  000017ac          	L43_LF2:
  840  000017ac  23bdfff0	addi	r29,r29,#-16
  841  000017b0  001d0820	add	r1,r0,r29
  842  000017b4  8fc20000	lw	r2,(r30)
  843  000017b8  ac220000	sw	(r1),r2
  844  000017bc  8fc20004	lw	r2,4(r30)
  845  000017c0  ac220004	sw	4(r1),r2
  846  000017c4  8fc2fff4	lw	r2,-12(r30)
  847  000017c8  ac220008	sw	8(r1),r2
  848  000017cc  0ffffdc0	jal	_dstrncmp
  849  000017d0  54000000	nop; delay slot nop
  850  000017d4  23bd0010	addi	r29,r29,#16
  851  000017d8  64220000	snei	r2,r1,#0
  852  000017dc  14400010	bnez	r2,L44_LF2
  853  000017e0  54000000	nop; delay slot nop
  854  000017e4  8fc10000	lw	r1,(r30)
  855  000017e8  08000028	j	L40_LF2
  856  000017ec  54000000	nop; delay slot nop
  857  000017f0          	L44_LF2:
  858  000017f0  8fc20000	lw	r2,(r30)
  859  000017f4  20410001	addi	r1,r2,#1
  860  000017f8  00011020	add	r2,r0,r1
  861  000017fc  afc20000	sw	(r30),r2
  862  00001800  0bffff8c	j	L41_LF2
  863  00001804  54000000	nop; delay slot nop
  864  00001808          	L42_LF2:
  865  00001808  20010000	addi	r1,r0,#0
  866  0000180c  08000004	j	L40_LF2
  867  00001810  54000000	nop; delay slot nop
  868  00001814          	L40_LF2:
  869  00001814  8fa20000	lw	r2,0(r29)
  870  00001818  8fdffff8	lw	r31,-8(r30)
  871  0000181c  001ee820	add	r29,r0,r30
  872  00001820  8fdefffc	lw	r30,-4(r30)
  873  00001824  4be00000	jr	r31
  874  00001828  54000000	nop
  875  0000182c          	.endproc _dstrstr
  876  0000182c          	.align 2
  877  0000182c          	.proc _dmindex
  878  0000182c          	.global _dmindex
  879  0000182c          	_dmindex:
  880                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  881  0000182c  afbefffc	sw	-4(r29),r30; push fp
  882  00001830  001df020	add	r30,r0,r29; fp = sp
  883  00001834  afbffff8	sw	-8(r29),r31; push ret addr
  884  00001838  2fbd0018	subui	r29,r29,#24; alloc local storage
  885  0000183c  afa20000	sw	0(r29),r2
  886  00001840  54000000	nop
  887  00001844          	L46_LF2:
  888  00001844  8fc10000	lw	r1,(r30)
  889  00001848  90220000	lbu	r2,(r1)
  890  0000184c  64410000	snei	r1,r2,#0
  891  00001850  1420000c	bnez	r1,L48_LF2
  892  00001854  54000000	nop; delay slot nop
  893  00001858  08000070	j	L47_LF2
  894  0000185c  54000000	nop; delay slot nop
  895  00001860          	L48_LF2:
  896  00001860  8fc10004	lw	r1,4(r30)
  897  00001864  afc1fff4	sw	-12(r30),r1
  898  00001868          	L49_LF2:
  899  00001868  8fc1fff4	lw	r1,-12(r30)
  900  0000186c  90220000	lbu	r2,(r1)
  901  00001870  64410000	snei	r1,r2,#0
  902  00001874  1420000c	bnez	r1,L52_LF2
  903  00001878  54000000	nop; delay slot nop
  904  0000187c  08000044	j	L50_LF2
  905  00001880  54000000	nop; delay slot nop
  906  00001884          	L52_LF2:
  907  00001884  8fc10000	lw	r1,(r30)
  908  00001888  8fc2fff4	lw	r2,-12(r30)
  909  0000188c  90210000	lbu	r1,(r1)
  910  00001890  90420000	lbu	r2,(r2)
  911  00001894  00220828	seq	r1,r1,r2
  912  00001898  10200010	beqz	r1,L51_LF2
  913  0000189c  54000000	nop; delay slot nop
  914  000018a0  8fc10000	lw	r1,(r30)
  915  000018a4  08000030	j	L45_LF2
  916  000018a8  54000000	nop; delay slot nop
  917  000018ac          	L53_LF2:
  918  000018ac          	L51_LF2:
  919  000018ac  8fc2fff4	lw	r2,-12(r30)
  920  000018b0  20410001	addi	r1,r2,#1
  921  000018b4  00011020	add	r2,r0,r1
  922  000018b8  afc2fff4	sw	-12(r30),r2
  923  000018bc  0bffffa8	j	L49_LF2
  924  000018c0  54000000	nop; delay slot nop
  925  000018c4          	L50_LF2:
  926  000018c4  0bffff7c	j	L46_LF2
  927  000018c8  54000000	nop; delay slot nop
  928  000018cc          	L47_LF2:
  929  000018cc  20010000	addi	r1,r0,#0
  930  000018d0  08000004	j	L45_LF2
  931  000018d4  54000000	nop; delay slot nop
  932  000018d8          	L45_LF2:
  933  000018d8  8fa20000	lw	r2,0(r29)
  934  000018dc  8fdffff8	lw	r31,-8(r30)
  935  000018e0  001ee820	add	r29,r0,r30
  936  000018e4  8fdefffc	lw	r30,-4(r30)
  937  000018e8  4be00000	jr	r31
  938  000018ec  54000000	nop
  939  000018f0          	.endproc _dmindex
  940  000018f0          	.align 2
  941  000018f0          	.proc _dindex
  942  000018f0          	.global _dindex
  943  000018f0          	_dindex:
  944                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  945  000018f0  afbefffc	sw	-4(r29),r30; push fp
  946  000018f4  001df020	add	r30,r0,r29; fp = sp
  947  000018f8  afbffff8	sw	-8(r29),r31; push ret addr
  948  000018fc  2fbd0010	subui	r29,r29,#16; alloc local storage
  949  00001900  afa20000	sw	0(r29),r2
  950  00001904  54000000	nop
  951  00001908          	L55_LF2:
  952  00001908  8fc10000	lw	r1,(r30)
  953  0000190c  90220000	lbu	r2,(r1)
  954  00001910  64410000	snei	r1,r2,#0
  955  00001914  1420000c	bnez	r1,L57_LF2
  956  00001918  54000000	nop; delay slot nop
  957  0000191c  08000040	j	L56_LF2
  958  00001920  54000000	nop; delay slot nop
  959  00001924          	L57_LF2:
  960  00001924  8fc10000	lw	r1,(r30)
  961  00001928  90220000	lbu	r2,(r1)
  962  0000192c  8fc10004	lw	r1,4(r30)
  963  00001930  00411028	seq	r2,r2,r1
  964  00001934  10400010	beqz	r2,L58_LF2
  965  00001938  54000000	nop; delay slot nop
  966  0000193c  8fc10000	lw	r1,(r30)
  967  00001940  08000028	j	L54_LF2
  968  00001944  54000000	nop; delay slot nop
  969  00001948          	L58_LF2:
  970  00001948  8fc20000	lw	r2,(r30)
  971  0000194c  20410001	addi	r1,r2,#1
  972  00001950  00011020	add	r2,r0,r1
  973  00001954  afc20000	sw	(r30),r2
  974  00001958  0bffffac	j	L55_LF2
  975  0000195c  54000000	nop; delay slot nop
  976  00001960          	L56_LF2:
  977  00001960  20010000	addi	r1,r0,#0
  978  00001964  08000004	j	L54_LF2
  979  00001968  54000000	nop; delay slot nop
  980  0000196c          	L54_LF2:
  981  0000196c  8fa20000	lw	r2,0(r29)
  982  00001970  8fdffff8	lw	r31,-8(r30)
  983  00001974  001ee820	add	r29,r0,r30
  984  00001978  8fdefffc	lw	r30,-4(r30)
  985  0000197c  4be00000	jr	r31
  986  00001980  54000000	nop
  987  00001984          	.endproc _dindex
  988  00001984          	.align 2
  989  00001984          	.proc _ditoa
  990  00001984          	.global _ditoa
  991  00001984          	_ditoa:
  992                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  993  00001984  afbefffc	sw	-4(r29),r30; push fp
  994  00001988  001df020	add	r30,r0,r29; fp = sp
  995  0000198c  afbffff8	sw	-8(r29),r31; push ret addr
  996  00001990  2fbd0018	subui	r29,r29,#24; alloc local storage
  997  00001994  afa20000	sw	0(r29),r2
  998  00001998  afa30004	sw	4(r29),r3
  999  0000199c  8fc10000	lw	r1,(r30)
 1000  000019a0  68220000	slti	r2,r1,#0
 1001  000019a4  1040002c	beqz	r2,L60_LF2
 1002  000019a8  54000000	nop; delay slot nop
 1003  000019ac  8fc10004	lw	r1,4(r30)
 1004  000019b0  20220001	addi	r2,r1,#1
 1005  000019b4  afc20004	sw	4(r30),r2
 1006  000019b8  2002002d	addi	r2,r0,(#0x2d)&0xff
 1007  000019bc  a0220000	sb	(r1),r2
 1008  000019c0  8fc10000	lw	r1,(r30)
 1009  000019c4  00011022	sub	r2,r0,r1
 1010  000019c8  afc20000	sw	(r30),r2
 1011  000019cc  08000118	j	L61_LF2
 1012  000019d0  54000000	nop; delay slot nop
 1013  000019d4          	L60_LF2:
 1014  000019d4  8fc10000	lw	r1,(r30)
 1015  000019d8  64220000	snei	r2,r1,#0
 1016  000019dc  14400020	bnez	r2,L62_LF2
 1017  000019e0  54000000	nop; delay slot nop
 1018  000019e4  8fc10004	lw	r1,4(r30)
 1019  000019e8  20220001	addi	r2,r1,#1
 1020  000019ec  afc20004	sw	4(r30),r2
 1021  000019f0  20020030	addi	r2,r0,(#0x30)&0xff
 1022  000019f4  a0220000	sb	(r1),r2
 1023  000019f8  080000ec	j	L61_LF2
 1024  000019fc  54000000	nop; delay slot nop
 1025  00001a00          	L62_LF2:
 1026  00001a00  20010001	addi	r1,r0,#1
 1027  00001a04  afc1fff4	sw	-12(r30),r1
 1028  00001a08          	L64_LF2:
 1029  00001a08  8fc1fff4	lw	r1,-12(r30)
 1030  00001a0c  8fc20000	lw	r2,(r30)
 1031  00001a10  0022082c	sle	r1,r1,r2
 1032  00001a14  1420000c	bnez	r1,L66_LF2
 1033  00001a18  54000000	nop; delay slot nop
 1034  00001a1c  08000024	j	L65_LF2
 1035  00001a20  54000000	nop; delay slot nop
 1036  00001a24          	L67_LF2:
 1037  00001a24          	L66_LF2:
 1038  00001a24  8fc1fff4	lw	r1,-12(r30)
 1039  00001a28  00011820	add	r3,r0,r1
 1040  00001a2c  50620002	slli	r2,r3,#0x2
 1041  00001a30  00411020	add	r2,r2,r1
 1042  00001a34  50410001	slli	r1,r2,#0x1
 1043  00001a38  afc1fff4	sw	-12(r30),r1
 1044  00001a3c  0bffffc8	j	L64_LF2
 1045  00001a40  54000000	nop; delay slot nop
 1046  00001a44          	L65_LF2:
 1047  00001a44  54000000	nop
 1048  00001a48          	L68_LF2:
 1049  00001a48  8fc1fff4	lw	r1,-12(r30)
 1050  00001a4c  2002000a	addi	r2,r0,#10
 1051  00001a50  00200035	movi2fp	f0,r1
 1052  00001a54  00400835	movi2fp	f1,r2
 1053  00001a58  0401000f	div	f0,f0,f1
 1054  00001a5c  00000834	movfp2i	r1,f0
 1055  00001a60  afc1fff4	sw	-12(r30),r1
 1056  00001a64  8fc10004	lw	r1,4(r30)
 1057  00001a68  20220001	addi	r2,r1,#1
 1058  00001a6c  afc20004	sw	4(r30),r2
 1059  00001a70  8fc20000	lw	r2,(r30)
 1060  00001a74  8fc3fff4	lw	r3,-12(r30)
 1061  00001a78  00400035	movi2fp	f0,r2
 1062  00001a7c  00600835	movi2fp	f1,r3
 1063  00001a80  0401000f	div	f0,f0,f1
 1064  00001a84  00001034	movfp2i	r2,f0
 1065  00001a88  00021820	add	r3,r0,r2
 1066  00001a8c  20620030	addi	r2,r3,#48
 1067  00001a90  a0220000	sb	(r1),r2
 1068  00001a94  8fc10000	lw	r1,(r30)
 1069  00001a98  8fc3fff4	lw	r3,-12(r30)
 1070  00001a9c  00200035	movi2fp	f0,r1
 1071  00001aa0  00600835	movi2fp	f1,r3
 1072  00001aa4  0401000f	div	f0,f0,f1
 1073  00001aa8  00001034	movfp2i	r2,f0
 1074  00001aac  8fc3fff4	lw	r3,-12(r30)
 1075  00001ab0  00400035	movi2fp	f0,r2
 1076  00001ab4  00600835	movi2fp	f1,r3
 1077  00001ab8  0401000e	mult	f0,f0,f1
 1078  00001abc  00001034	movfp2i	r2,f0
 1079  00001ac0  00220822	sub	r1,r1,r2
 1080  00001ac4  afc10000	sw	(r30),r1
 1081  00001ac8          	L70_LF2:
 1082  00001ac8  8fc1fff4	lw	r1,-12(r30)
 1083  00001acc  6c220001	sgti	r2,r1,#1
 1084  00001ad0  1440000c	bnez	r2,L71_LF2
 1085  00001ad4  54000000	nop; delay slot nop
 1086  00001ad8  0800000c	j	L61_LF2
 1087  00001adc  54000000	nop; delay slot nop
 1088  00001ae0          	L71_LF2:
 1089  00001ae0  0bffff64	j	L68_LF2
 1090  00001ae4  54000000	nop; delay slot nop
 1091  00001ae8          	L69_LF2:
 1092  00001ae8          	L63_LF2:
 1093  00001ae8          	L61_LF2:
 1094  00001ae8  8fc10004	lw	r1,4(r30)
 1095  00001aec  20020000	addi	r2,r0,(#0x0)&0xff
 1096  00001af0  a0220000	sb	(r1),r2
 1097  00001af4          	L59_LF2:
 1098  00001af4  8fa20000	lw	r2,0(r29)
 1099  00001af8  8fa30004	lw	r3,4(r29)
 1100  00001afc  8fdffff8	lw	r31,-8(r30)
 1101  00001b00  001ee820	add	r29,r0,r30
 1102  00001b04  8fdefffc	lw	r30,-4(r30)
 1103  00001b08  4be00000	jr	r31
 1104  00001b0c  54000000	nop
 1105  00001b10          	.endproc _ditoa
 1106  00001b10          	.align 2
 1107  00001b10          	.proc _dstrtol
 1108  00001b10          	.global _dstrtol
 1109  00001b10          	_dstrtol:
 1110                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1111  00001b10  afbefffc	sw	-4(r29),r30; push fp
 1112  00001b14  001df020	add	r30,r0,r29; fp = sp
 1113  00001b18  afbffff8	sw	-8(r29),r31; push ret addr
 1114  00001b1c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1115  00001b20  afa20000	sw	0(r29),r2
 1116  00001b24  20010000	addi	r1,r0,#0
 1117  00001b28  afc1fff4	sw	-12(r30),r1
 1118  00001b2c          	L73_LF2:
 1119  00001b2c  8fc10000	lw	r1,(r30)
 1120  00001b30  90220000	lbu	r2,(r1)
 1121  00001b34  60410020	seqi	r1,r2,#32
 1122  00001b38  14200034	bnez	r1,L75_LF2
 1123  00001b3c  54000000	nop; delay slot nop
 1124  00001b40  8fc10000	lw	r1,(r30)
 1125  00001b44  90220000	lbu	r2,(r1)
 1126  00001b48  60410009	seqi	r1,r2,#9
 1127  00001b4c  14200020	bnez	r1,L75_LF2
 1128  00001b50  54000000	nop; delay slot nop
 1129  00001b54  8fc10000	lw	r1,(r30)
 1130  00001b58  90220000	lbu	r2,(r1)
 1131  00001b5c  6041000a	seqi	r1,r2,#10
 1132  00001b60  1420000c	bnez	r1,L75_LF2
 1133  00001b64  54000000	nop; delay slot nop
 1134  00001b68  0800001c	j	L74_LF2
 1135  00001b6c  54000000	nop; delay slot nop
 1136  00001b70          	L75_LF2:
 1137  00001b70  8fc20000	lw	r2,(r30)
 1138  00001b74  20410001	addi	r1,r2,#1
 1139  00001b78  00011020	add	r2,r0,r1
 1140  00001b7c  afc20000	sw	(r30),r2
 1141  00001b80  0bffffa8	j	L73_LF2
 1142  00001b84  54000000	nop; delay slot nop
 1143  00001b88          	L74_LF2:
 1144  00001b88  8fc10004	lw	r1,4(r30)
 1145  00001b8c  64220000	snei	r2,r1,#0
 1146  00001b90  10400010	beqz	r2,L76_LF2
 1147  00001b94  54000000	nop; delay slot nop
 1148  00001b98  8fc10004	lw	r1,4(r30)
 1149  00001b9c  8fc20000	lw	r2,(r30)
 1150  00001ba0  ac220000	sw	(r1),r2
 1151  00001ba4          	L76_LF2:
 1152  00001ba4  8fc10000	lw	r1,(r30)
 1153  00001ba8  90220000	lbu	r2,(r1)
 1154  00001bac  64410000	snei	r1,r2,#0
 1155  00001bb0  14200010	bnez	r1,L77_LF2
 1156  00001bb4  54000000	nop; delay slot nop
 1157  00001bb8  8fc1fff4	lw	r1,-12(r30)
 1158  00001bbc  08000294	j	L72_LF2
 1159  00001bc0  54000000	nop; delay slot nop
 1160  00001bc4          	L77_LF2:
 1161  00001bc4  8fc10000	lw	r1,(r30)
 1162  00001bc8  90220000	lbu	r2,(r1)
 1163  00001bcc  6041002d	seqi	r1,r2,#45
 1164  00001bd0  10200024	beqz	r1,L78_LF2
 1165  00001bd4  54000000	nop; delay slot nop
 1166  00001bd8  2001ffff	addi	r1,r0,#-1
 1167  00001bdc  afc1ffec	sw	-20(r30),r1
 1168  00001be0  8fc20000	lw	r2,(r30)
 1169  00001be4  20410001	addi	r1,r2,#1
 1170  00001be8  00011020	add	r2,r0,r1
 1171  00001bec  afc20000	sw	(r30),r2
 1172  00001bf0  0800000c	j	L79_LF2
 1173  00001bf4  54000000	nop; delay slot nop
 1174  00001bf8          	L78_LF2:
 1175  00001bf8  20010001	addi	r1,r0,#1
 1176  00001bfc  afc1ffec	sw	-20(r30),r1
 1177  00001c00          	L79_LF2:
 1178  00001c00  8fc10008	lw	r1,8(r30)
 1179  00001c04  64220000	snei	r2,r1,#0
 1180  00001c08  14400090	bnez	r2,L80_LF2
 1181  00001c0c  54000000	nop; delay slot nop
 1182  00001c10  8fc10000	lw	r1,(r30)
 1183  00001c14  90220000	lbu	r2,(r1)
 1184  00001c18  60410030	seqi	r1,r2,#48
 1185  00001c1c  10200074	beqz	r1,L81_LF2
 1186  00001c20  54000000	nop; delay slot nop
 1187  00001c24  8fc20000	lw	r2,(r30)
 1188  00001c28  20410001	addi	r1,r2,#1
 1189  00001c2c  00011020	add	r2,r0,r1
 1190  00001c30  afc20000	sw	(r30),r2
 1191  00001c34  8fc10000	lw	r1,(r30)
 1192  00001c38  90220000	lbu	r2,(r1)
 1193  00001c3c  60410078	seqi	r1,r2,#120
 1194  00001c40  14200020	bnez	r1,L83_LF2
 1195  00001c44  54000000	nop; delay slot nop
 1196  00001c48  8fc10000	lw	r1,(r30)
 1197  00001c4c  90220000	lbu	r2,(r1)
 1198  00001c50  60410058	seqi	r1,r2,#88
 1199  00001c54  1420000c	bnez	r1,L83_LF2
 1200  00001c58  54000000	nop; delay slot nop
 1201  00001c5c  08000024	j	L82_LF2
 1202  00001c60  54000000	nop; delay slot nop
 1203  00001c64          	L83_LF2:
 1204  00001c64  20010010	addi	r1,r0,#16
 1205  00001c68  afc10008	sw	8(r30),r1
 1206  00001c6c  8fc20000	lw	r2,(r30)
 1207  00001c70  20410001	addi	r1,r2,#1
 1208  00001c74  00011020	add	r2,r0,r1
 1209  00001c78  afc20000	sw	(r30),r2
 1210  00001c7c  0800000c	j	L84_LF2
 1211  00001c80  54000000	nop; delay slot nop
 1212  00001c84          	L82_LF2:
 1213  00001c84  20010008	addi	r1,r0,#8
 1214  00001c88  afc10008	sw	8(r30),r1
 1215  00001c8c          	L84_LF2:
 1216  00001c8c  0800000c	j	L80_LF2
 1217  00001c90  54000000	nop; delay slot nop
 1218  00001c94          	L81_LF2:
 1219  00001c94  2001000a	addi	r1,r0,#10
 1220  00001c98  afc10008	sw	8(r30),r1
 1221  00001c9c          	L85_LF2:
 1222  00001c9c          	L80_LF2:
 1223  00001c9c  8fc10008	lw	r1,8(r30)
 1224  00001ca0  70220000	slei	r2,r1,#0
 1225  00001ca4  1440001c	bnez	r2,L87_LF2
 1226  00001ca8  54000000	nop; delay slot nop
 1227  00001cac  8fc10008	lw	r1,8(r30)
 1228  00001cb0  6c220010	sgti	r2,r1,#16
 1229  00001cb4  1440000c	bnez	r2,L87_LF2
 1230  00001cb8  54000000	nop; delay slot nop
 1231  00001cbc  08000010	j	L86_LF2
 1232  00001cc0  54000000	nop; delay slot nop
 1233  00001cc4          	L87_LF2:
 1234  00001cc4  8fc1fff4	lw	r1,-12(r30)
 1235  00001cc8  08000188	j	L72_LF2
 1236  00001ccc  54000000	nop; delay slot nop
 1237  00001cd0          	L86_LF2:
 1238  00001cd0  54000000	nop
 1239  00001cd4          	L88_LF2:
 1240  00001cd4  8fc10000	lw	r1,(r30)
 1241  00001cd8  90220000	lbu	r2,(r1)
 1242  00001cdc  6c41002f	sgtui	r1,r2,#47
 1243  00001ce0  10200030	beqz	r1,L91_LF2
 1244  00001ce4  54000000	nop; delay slot nop
 1245  00001ce8  8fc10000	lw	r1,(r30)
 1246  00001cec  90220000	lbu	r2,(r1)
 1247  00001cf0  70410039	sleui	r1,r2,#57
 1248  00001cf4  1020001c	beqz	r1,L91_LF2
 1249  00001cf8  54000000	nop; delay slot nop
 1250  00001cfc  8fc10000	lw	r1,(r30)
 1251  00001d00  90220000	lbu	r2,(r1)
 1252  00001d04  2041ffd0	addi	r1,r2,#-48
 1253  00001d08  afc1fff0	sw	-16(r30),r1
 1254  00001d0c  0800008c	j	L92_LF2
 1255  00001d10  54000000	nop; delay slot nop
 1256  00001d14          	L91_LF2:
 1257  00001d14  8fc10000	lw	r1,(r30)
 1258  00001d18  90220000	lbu	r2,(r1)
 1259  00001d1c  6c410060	sgtui	r1,r2,#96
 1260  00001d20  10200030	beqz	r1,L93_LF2
 1261  00001d24  54000000	nop; delay slot nop
 1262  00001d28  8fc10000	lw	r1,(r30)
 1263  00001d2c  90220000	lbu	r2,(r1)
 1264  00001d30  7041007a	sleui	r1,r2,#122
 1265  00001d34  1020001c	beqz	r1,L93_LF2
 1266  00001d38  54000000	nop; delay slot nop
 1267  00001d3c  8fc10000	lw	r1,(r30)
 1268  00001d40  90220000	lbu	r2,(r1)
 1269  00001d44  2041ffa9	addi	r1,r2,#-87
 1270  00001d48  afc1fff0	sw	-16(r30),r1
 1271  00001d4c  0800004c	j	L92_LF2
 1272  00001d50  54000000	nop; delay slot nop
 1273  00001d54          	L93_LF2:
 1274  00001d54  8fc10000	lw	r1,(r30)
 1275  00001d58  90220000	lbu	r2,(r1)
 1276  00001d5c  6c410040	sgtui	r1,r2,#64
 1277  00001d60  10200030	beqz	r1,L95_LF2
 1278  00001d64  54000000	nop; delay slot nop
 1279  00001d68  8fc10000	lw	r1,(r30)
 1280  00001d6c  90220000	lbu	r2,(r1)
 1281  00001d70  7041005a	sleui	r1,r2,#90
 1282  00001d74  1020001c	beqz	r1,L95_LF2
 1283  00001d78  54000000	nop; delay slot nop
 1284  00001d7c  8fc10000	lw	r1,(r30)
 1285  00001d80  90220000	lbu	r2,(r1)
 1286  00001d84  2041ffc9	addi	r1,r2,#-55
 1287  00001d88  afc1fff0	sw	-16(r30),r1
 1288  00001d8c  0800000c	j	L92_LF2
 1289  00001d90  54000000	nop; delay slot nop
 1290  00001d94          	L95_LF2:
 1291  00001d94  200103e8	addi	r1,r0,#1000
 1292  00001d98  afc1fff0	sw	-16(r30),r1
 1293  00001d9c          	L96_LF2:
 1294  00001d9c          	L94_LF2:
 1295  00001d9c          	L92_LF2:
 1296  00001d9c  8fc1fff0	lw	r1,-16(r30)
 1297  00001da0  8fc20008	lw	r2,8(r30)
 1298  00001da4  0022082a	slt	r1,r1,r2
 1299  00001da8  10200040	beqz	r1,L90_LF2
 1300  00001dac  54000000	nop; delay slot nop
 1301  00001db0  8fc1fff4	lw	r1,-12(r30)
 1302  00001db4  8fc20008	lw	r2,8(r30)
 1303  00001db8  00200035	movi2fp	f0,r1
 1304  00001dbc  00400835	movi2fp	f1,r2
 1305  00001dc0  0401000e	mult	f0,f0,f1
 1306  00001dc4  00000834	movfp2i	r1,f0
 1307  00001dc8  afc1fff4	sw	-12(r30),r1
 1308  00001dcc  8fc1fff4	lw	r1,-12(r30)
 1309  00001dd0  8fc2fff0	lw	r2,-16(r30)
 1310  00001dd4  00220820	add	r1,r1,r2
 1311  00001dd8  afc1fff4	sw	-12(r30),r1
 1312  00001ddc  8fc20000	lw	r2,(r30)
 1313  00001de0  20410001	addi	r1,r2,#1
 1314  00001de4  00011020	add	r2,r0,r1
 1315  00001de8  afc20000	sw	(r30),r2
 1316  00001dec          	L97_LF2:
 1317  00001dec          	L90_LF2:
 1318  00001dec  8fc1fff0	lw	r1,-16(r30)
 1319  00001df0  8fc20008	lw	r2,8(r30)
 1320  00001df4  0022082a	slt	r1,r1,r2
 1321  00001df8  1420000c	bnez	r1,L98_LF2
 1322  00001dfc  54000000	nop; delay slot nop
 1323  00001e00  0800000c	j	L89_LF2
 1324  00001e04  54000000	nop; delay slot nop
 1325  00001e08          	L98_LF2:
 1326  00001e08  0bfffec8	j	L88_LF2
 1327  00001e0c  54000000	nop; delay slot nop
 1328  00001e10          	L89_LF2:
 1329  00001e10  8fc10004	lw	r1,4(r30)
 1330  00001e14  64220000	snei	r2,r1,#0
 1331  00001e18  10400010	beqz	r2,L99_LF2
 1332  00001e1c  54000000	nop; delay slot nop
 1333  00001e20  8fc10004	lw	r1,4(r30)
 1334  00001e24  8fc20000	lw	r2,(r30)
 1335  00001e28  ac220000	sw	(r1),r2
 1336  00001e2c          	L99_LF2:
 1337  00001e2c  8fc1fff4	lw	r1,-12(r30)
 1338  00001e30  8fc2ffec	lw	r2,-20(r30)
 1339  00001e34  00200035	movi2fp	f0,r1
 1340  00001e38  00400835	movi2fp	f1,r2
 1341  00001e3c  0401000e	mult	f0,f0,f1
 1342  00001e40  00000834	movfp2i	r1,f0
 1343  00001e44  afc1fff4	sw	-12(r30),r1
 1344  00001e48  8fc1fff4	lw	r1,-12(r30)
 1345  00001e4c  08000004	j	L72_LF2
 1346  00001e50  54000000	nop; delay slot nop
 1347  00001e54          	L72_LF2:
 1348  00001e54  8fa20000	lw	r2,0(r29)
 1349  00001e58  8fdffff8	lw	r31,-8(r30)
 1350  00001e5c  001ee820	add	r29,r0,r30
 1351  00001e60  8fdefffc	lw	r30,-4(r30)
 1352  00001e64  4be00000	jr	r31
 1353  00001e68  54000000	nop
 1354  00001e6c          	.endproc _dstrtol
 1355  00001e6c          	.align 2
 1356  00001e6c          	.proc _bcopy
 1357  00001e6c          	.global _bcopy
 1358  00001e6c          	_bcopy:
 1359                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1360  00001e6c  afbefffc	sw	-4(r29),r30; push fp
 1361  00001e70  001df020	add	r30,r0,r29; fp = sp
 1362  00001e74  afbffff8	sw	-8(r29),r31; push ret addr
 1363  00001e78  2fbd0010	subui	r29,r29,#16; alloc local storage
 1364  00001e7c  afa20000	sw	0(r29),r2
 1365  00001e80  afa30004	sw	4(r29),r3
 1366  00001e84  54000000	nop
 1367  00001e88          	L101_LF2:
 1368  00001e88  8fc10008	lw	r1,8(r30)
 1369  00001e8c  2022ffff	addi	r2,r1,#-1
 1370  00001e90  afc20008	sw	8(r30),r2
 1371  00001e94  6c210000	sgti	r1,r1,#0
 1372  00001e98  1420000c	bnez	r1,L103_LF2
 1373  00001e9c  54000000	nop; delay slot nop
 1374  00001ea0  0800002c	j	L102_LF2
 1375  00001ea4  54000000	nop; delay slot nop
 1376  00001ea8          	L103_LF2:
 1377  00001ea8  8fc10004	lw	r1,4(r30)
 1378  00001eac  20220001	addi	r2,r1,#1
 1379  00001eb0  afc20004	sw	4(r30),r2
 1380  00001eb4  8fc20000	lw	r2,(r30)
 1381  00001eb8  20430001	addi	r3,r2,#1
 1382  00001ebc  afc30000	sw	(r30),r3
 1383  00001ec0  80420000	lb	r2,(r2)
 1384  00001ec4  a0220000	sb	(r1),r2
 1385  00001ec8  0bffffbc	j	L101_LF2
 1386  00001ecc  54000000	nop; delay slot nop
 1387  00001ed0          	L102_LF2:
 1388  00001ed0          	L100_LF2:
 1389  00001ed0  8fa20000	lw	r2,0(r29)
 1390  00001ed4  8fa30004	lw	r3,4(r29)
 1391  00001ed8  8fdffff8	lw	r31,-8(r30)
 1392  00001edc  001ee820	add	r29,r0,r30
 1393  00001ee0  8fdefffc	lw	r30,-4(r30)
 1394  00001ee4  4be00000	jr	r31
 1395  00001ee8  54000000	nop
 1396  00001eec          	.endproc _bcopy
 1397  00001eec          	.align 2
 1398  00001eec          	.proc _bzero
 1399  00001eec          	.global _bzero
 1400  00001eec          	_bzero:
 1401                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1402  00001eec  afbefffc	sw	-4(r29),r30; push fp
 1403  00001ef0  001df020	add	r30,r0,r29; fp = sp
 1404  00001ef4  afbffff8	sw	-8(r29),r31; push ret addr
 1405  00001ef8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1406  00001efc  afa20000	sw	0(r29),r2
 1407  00001f00  54000000	nop
 1408  00001f04          	L105_LF2:
 1409  00001f04  8fc10004	lw	r1,4(r30)
 1410  00001f08  2022ffff	addi	r2,r1,#-1
 1411  00001f0c  afc20004	sw	4(r30),r2
 1412  00001f10  6c210000	sgti	r1,r1,#0
 1413  00001f14  1420000c	bnez	r1,L107_LF2
 1414  00001f18  54000000	nop; delay slot nop
 1415  00001f1c  08000020	j	L106_LF2
 1416  00001f20  54000000	nop; delay slot nop
 1417  00001f24          	L107_LF2:
 1418  00001f24  8fc10000	lw	r1,(r30)
 1419  00001f28  20220001	addi	r2,r1,#1
 1420  00001f2c  afc20000	sw	(r30),r2
 1421  00001f30  20020000	addi	r2,r0,(#0x0)&0xff
 1422  00001f34  a0220000	sb	(r1),r2
 1423  00001f38  0bffffc8	j	L105_LF2
 1424  00001f3c  54000000	nop; delay slot nop
 1425  00001f40          	L106_LF2:
 1426  00001f40          	L104_LF2:
 1427  00001f40  8fa20000	lw	r2,0(r29)
 1428  00001f44  8fdffff8	lw	r31,-8(r30)
 1429  00001f48  001ee820	add	r29,r0,r30
 1430  00001f4c  8fdefffc	lw	r30,-4(r30)
 1431  00001f50  4be00000	jr	r31
 1432  00001f54  54000000	nop
 1433  00001f58          	.endproc _bzero
 1434  00001f58          	.align 2
 1435  00001f58          	.proc _min
 1436  00001f58          	.global _min
 1437  00001f58          	_min:
 1438                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1439  00001f58  afbefffc	sw	-4(r29),r30; push fp
 1440  00001f5c  001df020	add	r30,r0,r29; fp = sp
 1441  00001f60  afbffff8	sw	-8(r29),r31; push ret addr
 1442  00001f64  2fbd0010	subui	r29,r29,#16; alloc local storage
 1443  00001f68  afa20000	sw	0(r29),r2
 1444  00001f6c  afa30004	sw	4(r29),r3
 1445  00001f70  8fc10000	lw	r1,(r30)
 1446  00001f74  8fc20004	lw	r2,4(r30)
 1447  00001f78  0022182c	sle	r3,r1,r2
 1448  00001f7c  14600008	bnez	r3,L109_LF2
 1449  00001f80  54000000	nop; delay slot nop
 1450  00001f84  8fc10004	lw	r1,4(r30)
 1451  00001f88          	L109_LF2:
 1452  00001f88  08000004	j	L108_LF2
 1453  00001f8c  54000000	nop; delay slot nop
 1454  00001f90          	L108_LF2:
 1455  00001f90  8fa20000	lw	r2,0(r29)
 1456  00001f94  8fa30004	lw	r3,4(r29)
 1457  00001f98  8fdffff8	lw	r31,-8(r30)
 1458  00001f9c  001ee820	add	r29,r0,r30
 1459  00001fa0  8fdefffc	lw	r30,-4(r30)
 1460  00001fa4  4be00000	jr	r31
 1461  00001fa8  54000000	nop
 1462  00001fac          	.endproc _min
 1463  00001fac          	.align 2
 1464  00001fac          	.proc _max
 1465  00001fac          	.global _max
 1466  00001fac          	_max:
 1467                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1468  00001fac  afbefffc	sw	-4(r29),r30; push fp
 1469  00001fb0  001df020	add	r30,r0,r29; fp = sp
 1470  00001fb4  afbffff8	sw	-8(r29),r31; push ret addr
 1471  00001fb8  2fbd0010	subui	r29,r29,#16; alloc local storage
 1472  00001fbc  afa20000	sw	0(r29),r2
 1473  00001fc0  afa30004	sw	4(r29),r3
 1474  00001fc4  8fc10000	lw	r1,(r30)
 1475  00001fc8  8fc20004	lw	r2,4(r30)
 1476  00001fcc  0022182d	sge	r3,r1,r2
 1477  00001fd0  14600008	bnez	r3,L111_LF2
 1478  00001fd4  54000000	nop; delay slot nop
 1479  00001fd8  8fc10004	lw	r1,4(r30)
 1480  00001fdc          	L111_LF2:
 1481  00001fdc  08000004	j	L110_LF2
 1482  00001fe0  54000000	nop; delay slot nop
 1483  00001fe4          	L110_LF2:
 1484  00001fe4  8fa20000	lw	r2,0(r29)
 1485  00001fe8  8fa30004	lw	r3,4(r29)
 1486  00001fec  8fdffff8	lw	r31,-8(r30)
 1487  00001ff0  001ee820	add	r29,r0,r30
 1488  00001ff4  8fdefffc	lw	r30,-4(r30)
 1489  00001ff8  4be00000	jr	r31
 1490  00001ffc  54000000	nop
 1491  00002000          	.endproc _max
 1492                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1493                      ;;;
 1494                      ;;; Most of the traps are called in files from libtraps.
 1497  00002000          	.align 2
 1498  00002000          	.proc _exit
 1499  00002000          	.global _exit
 1500  00002000          	_exit:
 1501  00002000  44000300	trap	#0x300
 1502  00002004  4be00000	jr	r31
 1503  00002008  54000000	nop
 1504  0000200c          	.endproc _exit
 1506                      ; for the benefit of gcc.
 1507  0000200c          	.proc ___main
 1508  0000200c          	.global ___main
 1509  0000200c          	___main:
 1510  0000200c  4be00000	jr	r31
 1511  00002010  54000000	nop
 1512  00002014          	.endproc ___main
 1513  00002014          	.text
 1514  00002014          	.global _etext
 1515  00002014          	_etext:
 1516  00002014          	.align 3
 1517  00002018          	.data
 1518  0000306f          	.global _edata
 1519  0000306f          	_edata:
