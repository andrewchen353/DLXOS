 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 257
    4                      ; Text size: 4548
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  48656c6c	.ascii "Hello world\000"
   82  00003004  6f20776f	
   82  00003008  726c6400	
   83  0000300c          	.align 2
   84  0000300c          	LC1_LF0:
   85  0000300c  55736167	.ascii "Usage: \000"
   85  00003010  653a2000	
   86  00003014          	.align 2
   87  00003014          	LC2_LF0:
   88  00003014  203c6861	.ascii " <handle_to_shared_memory_page> <handle_to_page_mapped_semaphore>\n\000"
   88  00003018  6e646c65	
   88  0000301c  5f746f5f	
   88  00003020  73686172	
   88  00003024  65645f6d	
   88  00003028  656d6f72	
   88  0000302c  795f7061	
   88  00003030  67653e20	
   88  00003034  3c68616e	
   88  00003038  646c655f	
   88  0000303c  746f5f70	
   88  00003040  6167655f	
   88  00003044  6d617070	
   88  00003048  65645f73	
   88  0000304c  656d6170	
   88  00003050  686f7265	
   88  00003054  3e0a00  	
   89  00003057          	.align 2
   90  00003058          	LC3_LF0:
   91  00003058  436f756c	.ascii "Could not map the virtual address to the memory in \000"
   91  0000305c  64206e6f	
   91  00003060  74206d61	
   91  00003064  70207468	
   91  00003068  65207669	
   91  0000306c  72747561	
   91  00003070  6c206164	
   91  00003074  64726573	
   91  00003078  7320746f	
   91  0000307c  20746865	
   91  00003080  206d656d	
   91  00003084  6f727920	
   91  00003088  696e2000	
   92  0000308c          	.align 2
   93  0000308c          	LC4_LF0:
   94  0000308c  2c206578	.ascii ", exiting...\n\000"
   94  00003090  6974696e	
   94  00003094  672e2e2e	
   94  00003098  0a00    	
   95  0000309a          	.align 2
   96  0000309c          	LC5_LF0:
   97  0000309c  50726f64	.ascii "Producer %d inserted: %c\n\000"
   97  000030a0  75636572	
   97  000030a4  20256420	
   97  000030a8  696e7365	
   97  000030ac  72746564	
   97  000030b0  3a202563	
   97  000030b4  0a00    	
   98  000030b6          	.align 2
   99  000030b8          	LC6_LF0:
  100  000030b8  70726f64	.ascii "producer: PID %d is complete.\n\000"
  100  000030bc  75636572	
  100  000030c0  3a205049	
  100  000030c4  44202564	
  100  000030c8  20697320	
  100  000030cc  636f6d70	
  100  000030d0  6c657465	
  100  000030d4  2e0a00  	
  101  000030d7          	.align 2
  102  000030d8          	LC7_LF0:
  103  000030d8  42616420	.ascii "Bad semaphore s_procs_completed (%d) in \000"
  103  000030dc  73656d61	
  103  000030e0  70686f72	
  103  000030e4  6520735f	
  103  000030e8  70726f63	
  103  000030ec  735f636f	
  103  000030f0  6d706c65	
  103  000030f4  74656420	
  103  000030f8  28256429	
  103  000030fc  20696e20	
  103  00003100  00      	
  104  00003101          	.text
  105  000010d4          	.align 2
  106  000010d4          	.proc _main
  107  000010d4          	.global _main
  108  000010d4          	_main:
  109                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  110  000010d4  afbefffc	sw	-4(r29),r30; push fp
  111  000010d8  001df020	add	r30,r0,r29; fp = sp
  112  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  113  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  114  000010e4  8fc20000	lw	r2,(r30)
  115  000010e8  8fc70004	lw	r7,4(r30)
  116  000010ec  0c0010cc	jal	___main
  117  000010f0  54000000	nop; not filled.
  118  000010f4  20060000	addi	r6,r0,#0
  119  000010f8  64410003	snei	r1,r2,#3
  120  000010fc  1020004c	beqz	r1,L14_LF0
  121  00001100  54000000	nop; not filled.
  122  00001104  23bdfff8	addi	r29,r29,#-8
  123  00001108  3c090000	lhi	r9,((LC1_LF0)>>16)&0xffff
  124  0000110c  2529300c	addui	r9,r9,(LC1_LF0)&0xffff
  125  00001110  afa90000	sw	(r29),r9
  126  00001114  0c00029c	jal	_Printf
  127  00001118  54000000	nop; not filled.
  128  0000111c  8ce90000	lw	r9,(r7)
  129  00001120  afa90000	sw	(r29),r9
  130  00001124  0c00028c	jal	_Printf
  131  00001128  54000000	nop; not filled.
  132  0000112c  3c090000	lhi	r9,((LC2_LF0)>>16)&0xffff
  133  00001130  25293014	addui	r9,r9,(LC2_LF0)&0xffff
  134  00001134  afa90000	sw	(r29),r9
  135  00001138  0c000278	jal	_Printf
  136  0000113c  54000000	nop; not filled.
  137  00001140  0c000324	jal	_Exit
  138  00001144  54000000	nop; not filled.
  139  00001148  23bd0008	addi	r29,r29,#8
  140  0000114c          	L14_LF0:
  141  0000114c  23bdfff0	addi	r29,r29,#-16
  142  00001150  8ce90004	lw	r9,4(r7)
  143  00001154  afa90000	sw	(r29),r9
  144  00001158  20090000	addi	r9,r0,#0
  145  0000115c  afa90004	sw	4(r29),r9
  146  00001160  2009000a	addi	r9,r0,#10
  147  00001164  afa90008	sw	8(r29),r9
  148  00001168  0c000ba8	jal	_dstrtol
  149  0000116c  54000000	nop; not filled.
  150  00001170  00011020	add	r2,r0,r1
  151  00001174  8ce90008	lw	r9,8(r7)
  152  00001178  afa90000	sw	(r29),r9
  153  0000117c  20090000	addi	r9,r0,#0
  154  00001180  afa90004	sw	4(r29),r9
  155  00001184  2009000a	addi	r9,r0,#10
  156  00001188  afa90008	sw	8(r29),r9
  157  0000118c  0c000b84	jal	_dstrtol
  158  00001190  54000000	nop; not filled.
  159  00001194  00014020	add	r8,r0,r1
  160  00001198  afa20000	sw	(r29),r2
  161  0000119c  0c000244	jal	_shmat
  162  000011a0  54000000	nop; not filled.
  163  000011a4  00012020	add	r4,r0,r1
  164  000011a8  23bd0010	addi	r29,r29,#16
  165  000011ac  64810000	snei	r1,r4,#0
  166  000011b0  1420004c	bnez	r1,L15_LF0
  167  000011b4  54000000	nop; not filled.
  168  000011b8  23bdfff8	addi	r29,r29,#-8
  169  000011bc  3c090000	lhi	r9,((LC3_LF0)>>16)&0xffff
  170  000011c0  25293058	addui	r9,r9,(LC3_LF0)&0xffff
  171  000011c4  afa90000	sw	(r29),r9
  172  000011c8  0c0001e8	jal	_Printf
  173  000011cc  54000000	nop; not filled.
  174  000011d0  8ce90000	lw	r9,(r7)
  175  000011d4  afa90000	sw	(r29),r9
  176  000011d8  0c0001d8	jal	_Printf
  177  000011dc  54000000	nop; not filled.
  178  000011e0  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  179  000011e4  2529308c	addui	r9,r9,(LC4_LF0)&0xffff
  180  000011e8  afa90000	sw	(r29),r9
  181  000011ec  0c0001c4	jal	_Printf
  182  000011f0  54000000	nop; not filled.
  183  000011f4  0c000270	jal	_Exit
  184  000011f8  54000000	nop; not filled.
  185  000011fc  23bd0008	addi	r29,r29,#8
  186  00001200          	L15_LF0:
  187  00001200  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
  188  00001204  24a53000	addui	r5,r5,(LC0_LF0)&0xffff
  189  00001208          	L18_LF0:
  190  00001208  8c9f0010	lw	r31,16(r4)
  191  0000120c  23e30001	addi	r3,r31,#1
  192  00001210  8c820000	lw	r2,(r4)
  193  00001214  00600035	movi2fp	f0,r3
  194  00001218  00400835	movi2fp	f1,r2
  195  0000121c  0401000f	div	f0,f0,f1
  196  00001220  00000834	movfp2i	r1,f0
  197  00001224  00200035	movi2fp	f0,r1
  198  00001228  00400835	movi2fp	f1,r2
  199  0000122c  0401000e	mult	f0,f0,f1
  200  00001230  00000834	movfp2i	r1,f0
  201  00001234  00611022	sub	r2,r3,r1
  202  00001238  8c810014	lw	r1,20(r4)
  203  0000123c  00410829	sne	r1,r2,r1
  204  00001240  10200088	beqz	r1,L16_LF0
  205  00001244  54000000	nop; not filled.
  206  00001248  009f0820	add	r1,r4,r31
  207  0000124c  80a90000	lb	r9,(r5)
  208  00001250  a0290004	sb	4(r1),r9
  209  00001254  0c000168	jal	_getpid
  210  00001258  54000000	nop; not filled.
  211  0000125c  23bdfff0	addi	r29,r29,#-16
  212  00001260  3c090000	lhi	r9,((LC5_LF0)>>16)&0xffff
  213  00001264  2529309c	addui	r9,r9,(LC5_LF0)&0xffff
  214  00001268  afa90000	sw	(r29),r9
  215  0000126c  afa10004	sw	4(r29),r1
  216  00001270  8c810010	lw	r1,16(r4)
  217  00001274  00810820	add	r1,r4,r1
  218  00001278  90210004	lbu	r1,4(r1)
  219  0000127c  afa10008	sw	8(r29),r1
  220  00001280  0c000130	jal	_Printf
  221  00001284  54000000	nop; not filled.
  222  00001288  8c810010	lw	r1,16(r4)
  223  0000128c  20230001	addi	r3,r1,#1
  224  00001290  ac830010	sw	16(r4),r3
  225  00001294  8c820000	lw	r2,(r4)
  226  00001298  00600035	movi2fp	f0,r3
  227  0000129c  00400835	movi2fp	f1,r2
  228  000012a0  0401000f	div	f0,f0,f1
  229  000012a4  00000834	movfp2i	r1,f0
  230  000012a8  00200035	movi2fp	f0,r1
  231  000012ac  00400835	movi2fp	f1,r2
  232  000012b0  0401000e	mult	f0,f0,f1
  233  000012b4  00000834	movfp2i	r1,f0
  234  000012b8  00610822	sub	r1,r3,r1
  235  000012bc  ac810010	sw	16(r4),r1
  236  000012c0  20a50001	addi	r5,r5,#1
  237  000012c4  20c60001	addi	r6,r6,#1
  238  000012c8  23bd0010	addi	r29,r29,#16
  239  000012cc          	L16_LF0:
  240  000012cc  70c1000a	slei	r1,r6,#10
  241  000012d0  1420ff34	bnez	r1,L18_LF0
  242  000012d4  54000000	nop; not filled.
  243  000012d8  0c0000e4	jal	_getpid
  244  000012dc  54000000	nop; not filled.
  245  000012e0  23bdfff8	addi	r29,r29,#-8
  246  000012e4  3c090000	lhi	r9,((LC6_LF0)>>16)&0xffff
  247  000012e8  252930b8	addui	r9,r9,(LC6_LF0)&0xffff
  248  000012ec  afa90000	sw	(r29),r9
  249  000012f0  afa10004	sw	4(r29),r1
  250  000012f4  0c0000bc	jal	_Printf
  251  000012f8  54000000	nop; not filled.
  252  000012fc  afa80000	sw	(r29),r8
  253  00001300  0c000104	jal	_sem_signal
  254  00001304  54000000	nop; not filled.
  255  00001308  23bd0008	addi	r29,r29,#8
  256  0000130c  64210001	snei	r1,r1,#1
  257  00001310  10200050	beqz	r1,L21_LF0
  258  00001314  54000000	nop; not filled.
  259  00001318  23bdfff8	addi	r29,r29,#-8
  260  0000131c  3c090000	lhi	r9,((LC7_LF0)>>16)&0xffff
  261  00001320  252930d8	addui	r9,r9,(LC7_LF0)&0xffff
  262  00001324  afa90000	sw	(r29),r9
  263  00001328  afa80004	sw	4(r29),r8
  264  0000132c  0c000084	jal	_Printf
  265  00001330  54000000	nop; not filled.
  266  00001334  8ce70000	lw	r7,(r7)
  267  00001338  afa70000	sw	(r29),r7
  268  0000133c  0c000074	jal	_Printf
  269  00001340  54000000	nop; not filled.
  270  00001344  3c090000	lhi	r9,((LC4_LF0)>>16)&0xffff
  271  00001348  2529308c	addui	r9,r9,(LC4_LF0)&0xffff
  272  0000134c  afa90000	sw	(r29),r9
  273  00001350  0c000060	jal	_Printf
  274  00001354  54000000	nop; not filled.
  275  00001358  0c00010c	jal	_Exit
  276  0000135c  54000000	nop; not filled.
  277  00001360  23bd0008	addi	r29,r29,#8
  278  00001364          	L21_LF0:
  279  00001364  0c000e48	jal	_exit
  280  00001368  54000000	nop
  281  0000136c          	.endproc _main
  282                      ;;;
  283                      ;;; Stub functions for DLX traps.
  284                      ;;;
  285                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  286                      ;;;
  287                      ;;; The traps such as Open and Close
  288                      ;;; (note the capital letters) are for use by user programs.  The traps
  289                      ;;; with names such as open and close (lower case) are for use by the OS.
  290                      ;;;
  293  0000136c          	.align 2
  295                      ;;; The following are the traps to be used by user-level programs
  296                      ;;;
  298  0000136c          	.align 2
  299  0000136c          	.proc _Open
  300  0000136c          	.global _Open
  301  0000136c          	_Open:
  302                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  303                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  304                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  305  0000136c  44000213	trap	#0x213
  306  00001370  4be00000	jr	r31
  307  00001374  54000000	nop
  308  00001378          	.endproc _Open
  310  00001378          	.proc _Close
  311  00001378          	.global _Close
  312  00001378          	_Close:
  313  00001378  44000214	trap	#0x214
  314  0000137c  4be00000	jr	r31
  315  00001380  54000000	nop
  316  00001384          	.endproc _Close
  318  00001384          	.proc _Read
  319  00001384          	.global _Read
  320  00001384          	_Read:
  321  00001384  44000210	trap	#0x210
  322  00001388  4be00000	jr	r31
  323  0000138c  54000000	nop
  324  00001390          	.endproc _Read
  326  00001390          	.proc _Write
  327  00001390          	.global _Write
  328  00001390          	_Write:
  329  00001390  44000211	trap	#0x211
  330  00001394  4be00000	jr	r31
  331  00001398  54000000	nop
  332  0000139c          	.endproc _Write
  334  0000139c          	.proc _Lseek
  335  0000139c          	.global _Lseek
  336  0000139c          	_Lseek:
  337  0000139c  44000212	trap	#0x212
  338  000013a0  4be00000	jr	r31
  339  000013a4  54000000	nop
  340  000013a8          	.endproc _Lseek
  342  000013a8          	.proc _Putchar
  343  000013a8          	.global _Putchar
  344  000013a8          	_Putchar:
  345  000013a8  44000280	trap	#0x280
  346  000013ac  4be00000	jr	r31
  347  000013b0  54000000	nop
  348  000013b4          	.endproc _Putchar
  350  000013b4          	.proc _Printf
  351  000013b4          	.global _Printf
  352  000013b4          	_Printf:
  353  000013b4  44000201	trap	#0x201
  354  000013b8  4be00000	jr	r31
  355  000013bc  54000000	nop
  356  000013c0          	.endproc _Printf
  358  000013c0          	.proc _getpid
  359  000013c0          	.global _getpid
  360  000013c0          	_getpid:
  361  000013c0  44000431	trap	#0x431
  362  000013c4  4be00000	jr	r31
  363  000013c8  54000000	nop
  364  000013cc          	.endproc _getpid
  366  000013cc          	.proc _process_create
  367  000013cc          	.global _process_create
  368  000013cc          	_process_create:
  369  000013cc  44000432	trap	#0x432
  370  000013d0  4be00000	jr	r31
  371  000013d4  54000000	nop
  372  000013d8          	.endproc _process_create
  374  000013d8          	.proc _shmget
  375  000013d8          	.global _shmget
  376  000013d8          	_shmget:
  377  000013d8  44000440	trap	#0x440
  378  000013dc  4be00000	jr	r31
  379  000013e0  54000000	nop
  380  000013e4          	.endproc _shmget
  382  000013e4          	.proc _shmat
  383  000013e4          	.global _shmat
  384  000013e4          	_shmat:
  385  000013e4  44000441	trap	#0x441
  386  000013e8  4be00000	jr	r31
  387  000013ec  54000000	nop
  388  000013f0          	.endproc _shmat
  390  000013f0          	.proc _sem_create
  391  000013f0          	.global _sem_create
  392  000013f0          	_sem_create:
  393  000013f0  44000450	trap	#0x450
  394  000013f4  4be00000	jr	r31
  395  000013f8  54000000	nop
  396  000013fc          	.endproc _sem_create
  398  000013fc          	.proc _sem_wait
  399  000013fc          	.global _sem_wait
  400  000013fc          	_sem_wait:
  401  000013fc  44000451	trap	#0x451
  402  00001400  4be00000	jr	r31
  403  00001404  54000000	nop
  404  00001408          	.endproc _sem_wait
  406  00001408          	.proc _sem_signal
  407  00001408          	.global _sem_signal
  408  00001408          	_sem_signal:
  409  00001408  44000452	trap	#0x452
  410  0000140c  4be00000	jr	r31
  411  00001410  54000000	nop
  412  00001414          	.endproc _sem_signal
  414  00001414          	.proc _lock_create
  415  00001414          	.global _lock_create
  416  00001414          	_lock_create:
  417  00001414  44000453	trap	#0x453
  418  00001418  4be00000	jr	r31
  419  0000141c  54000000	nop
  420  00001420          	.endproc _lock_create
  422  00001420          	.proc _lock_acquire
  423  00001420          	.global _lock_acquire
  424  00001420          	_lock_acquire:
  425  00001420  44000454	trap	#0x454
  426  00001424  4be00000	jr	r31
  427  00001428  54000000	nop
  428  0000142c          	.endproc _lock_acquire
  430  0000142c          	.proc _lock_release
  431  0000142c          	.global _lock_release
  432  0000142c          	_lock_release:
  433  0000142c  44000455	trap	#0x455
  434  00001430  4be00000	jr	r31
  435  00001434  54000000	nop
  436  00001438          	.endproc _lock_release
  438  00001438          	.proc _cond_create
  439  00001438          	.global _cond_create
  440  00001438          	_cond_create:
  441  00001438  44000456	trap	#0x456
  442  0000143c  4be00000	jr	r31
  443  00001440  54000000	nop
  444  00001444          	.endproc _cond_create
  446  00001444          	.proc _cond_wait
  447  00001444          	.global _cond_wait
  448  00001444          	_cond_wait:
  449  00001444  44000457	trap	#0x457
  450  00001448  4be00000	jr	r31
  451  0000144c  54000000	nop
  452  00001450          	.endproc _cond_wait
  454  00001450          	.proc _cond_signal
  455  00001450          	.global _cond_signal
  456  00001450          	_cond_signal:
  457  00001450  44000458	trap	#0x458
  458  00001454  4be00000	jr	r31
  459  00001458  54000000	nop
  460  0000145c          	.endproc _cond_signal
  462  0000145c          	.proc _cond_broadcast
  463  0000145c          	.global _cond_broadcast
  464  0000145c          	_cond_broadcast:
  465  0000145c  44000455	trap	#0x455
  466  00001460  4be00000	jr	r31
  467  00001464  54000000	nop
  468  00001468          	.endproc _cond_broadcast
  470  00001468          	.proc _Exit
  471  00001468          	.global _Exit
  472  00001468          	_Exit:
  473  00001468  44000500	trap	#0x500
  474  0000146c  4be00000	jr	r31
  475  00001470  54000000	nop
  476  00001474          	.endproc _Exit
  477                      ; Compiled by GCC
  479  00001474          	.align 2
  480  00001474          	.proc _isspace
  481  00001474          	.global _isspace
  482  00001474          	_isspace:
  483                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  484  00001474  afbefffc	sw	-4(r29),r30; push fp
  485  00001478  001df020	add	r30,r0,r29; fp = sp
  486  0000147c  afbffff8	sw	-8(r29),r31; push ret addr
  487  00001480  2fbd0018	subui	r29,r29,#24; alloc local storage
  488  00001484  afa20000	sw	0(r29),r2
  489  00001488  afa30004	sw	4(r29),r3
  490  0000148c  afa40008	sw	8(r29),r4
  491  00001490  83c20003	lb	r2,3(r30)
  492  00001494  20010000	addi	r1,r0,#0
  493  00001498  304300ff	andi	r3,r2,#0x00ff
  494  0000149c  60640020	seqi	r4,r3,#32
  495  000014a0  1480002c	bnez	r4,L3_LF2
  496  000014a4  54000000	nop; delay slot nop
  497  000014a8  304300ff	andi	r3,r2,#0x00ff
  498  000014ac  60640009	seqi	r4,r3,#9
  499  000014b0  1480001c	bnez	r4,L3_LF2
  500  000014b4  54000000	nop; delay slot nop
  501  000014b8  304300ff	andi	r3,r2,#0x00ff
  502  000014bc  6064000a	seqi	r4,r3,#10
  503  000014c0  1480000c	bnez	r4,L3_LF2
  504  000014c4  54000000	nop; delay slot nop
  505  000014c8  08000008	j	L2_LF2
  506  000014cc  54000000	nop; delay slot nop
  507  000014d0          	L3_LF2:
  508  000014d0  20010001	addi	r1,r0,#1
  509  000014d4          	L2_LF2:
  510  000014d4  08000004	j	L1_LF2
  511  000014d8  54000000	nop; delay slot nop
  512  000014dc          	L1_LF2:
  513  000014dc  8fa20000	lw	r2,0(r29)
  514  000014e0  8fa30004	lw	r3,4(r29)
  515  000014e4  8fa40008	lw	r4,8(r29)
  516  000014e8  8fdffff8	lw	r31,-8(r30)
  517  000014ec  001ee820	add	r29,r0,r30
  518  000014f0  8fdefffc	lw	r30,-4(r30)
  519  000014f4  4be00000	jr	r31
  520  000014f8  54000000	nop
  521  000014fc          	.endproc _isspace
  522  000014fc          	.align 2
  523  000014fc          	.proc _isxdigit
  524  000014fc          	.global _isxdigit
  525  000014fc          	_isxdigit:
  526                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  527  000014fc  afbefffc	sw	-4(r29),r30; push fp
  528  00001500  001df020	add	r30,r0,r29; fp = sp
  529  00001504  afbffff8	sw	-8(r29),r31; push ret addr
  530  00001508  2fbd0018	subui	r29,r29,#24; alloc local storage
  531  0000150c  afa20000	sw	0(r29),r2
  532  00001510  afa30004	sw	4(r29),r3
  533  00001514  afa40008	sw	8(r29),r4
  534  00001518  83c20003	lb	r2,3(r30)
  535  0000151c  20010000	addi	r1,r0,#0
  536  00001520  304300ff	andi	r3,r2,#0x00ff
  537  00001524  6c64002f	sgtui	r4,r3,#47
  538  00001528  1080001c	beqz	r4,L7_LF2
  539  0000152c  54000000	nop; delay slot nop
  540  00001530  304300ff	andi	r3,r2,#0x00ff
  541  00001534  70640039	sleui	r4,r3,#57
  542  00001538  1480005c	bnez	r4,L6_LF2
  543  0000153c  54000000	nop; delay slot nop
  544  00001540  08000004	j	L7_LF2
  545  00001544  54000000	nop; delay slot nop
  546  00001548          	L7_LF2:
  547  00001548  304300ff	andi	r3,r2,#0x00ff
  548  0000154c  6c640060	sgtui	r4,r3,#96
  549  00001550  1080001c	beqz	r4,L8_LF2
  550  00001554  54000000	nop; delay slot nop
  551  00001558  304300ff	andi	r3,r2,#0x00ff
  552  0000155c  70640066	sleui	r4,r3,#102
  553  00001560  14800034	bnez	r4,L6_LF2
  554  00001564  54000000	nop; delay slot nop
  555  00001568  08000004	j	L8_LF2
  556  0000156c  54000000	nop; delay slot nop
  557  00001570          	L8_LF2:
  558  00001570  304300ff	andi	r3,r2,#0x00ff
  559  00001574  6c640040	sgtui	r4,r3,#64
  560  00001578  10800020	beqz	r4,L5_LF2
  561  0000157c  54000000	nop; delay slot nop
  562  00001580  304300ff	andi	r3,r2,#0x00ff
  563  00001584  70640041	sleui	r4,r3,#65
  564  00001588  1480000c	bnez	r4,L6_LF2
  565  0000158c  54000000	nop; delay slot nop
  566  00001590  08000008	j	L5_LF2
  567  00001594  54000000	nop; delay slot nop
  568  00001598          	L6_LF2:
  569  00001598  20010001	addi	r1,r0,#1
  570  0000159c          	L5_LF2:
  571  0000159c  08000004	j	L4_LF2
  572  000015a0  54000000	nop; delay slot nop
  573  000015a4          	L4_LF2:
  574  000015a4  8fa20000	lw	r2,0(r29)
  575  000015a8  8fa30004	lw	r3,4(r29)
  576  000015ac  8fa40008	lw	r4,8(r29)
  577  000015b0  8fdffff8	lw	r31,-8(r30)
  578  000015b4  001ee820	add	r29,r0,r30
  579  000015b8  8fdefffc	lw	r30,-4(r30)
  580  000015bc  4be00000	jr	r31
  581  000015c0  54000000	nop
  582  000015c4          	.endproc _isxdigit
  583  000015c4          	.align 2
  584  000015c4          	.proc _dstrcpy
  585  000015c4          	.global _dstrcpy
  586  000015c4          	_dstrcpy:
  587                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  588  000015c4  afbefffc	sw	-4(r29),r30; push fp
  589  000015c8  001df020	add	r30,r0,r29; fp = sp
  590  000015cc  afbffff8	sw	-8(r29),r31; push ret addr
  591  000015d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  592  000015d4  afa20000	sw	0(r29),r2
  593  000015d8  afa30004	sw	4(r29),r3
  594  000015dc  8fc10000	lw	r1,(r30)
  595  000015e0  afc1fff4	sw	-12(r30),r1
  596  000015e4          	L10_LF2:
  597  000015e4  8fc10000	lw	r1,(r30)
  598  000015e8  20220001	addi	r2,r1,#1
  599  000015ec  afc20000	sw	(r30),r2
  600  000015f0  8fc20004	lw	r2,4(r30)
  601  000015f4  20430001	addi	r3,r2,#1
  602  000015f8  afc30004	sw	4(r30),r3
  603  000015fc  80420000	lb	r2,(r2)
  604  00001600  a0220000	sb	(r1),r2
  605  00001604  a3c2fff3	sb	-13(r30),r2
  606  00001608          	L12_LF2:
  607  00001608  93c1fff3	lbu	r1,-13(r30)
  608  0000160c  64220000	snei	r2,r1,#0
  609  00001610  1440000c	bnez	r2,L13_LF2
  610  00001614  54000000	nop; delay slot nop
  611  00001618  0800000c	j	L11_LF2
  612  0000161c  54000000	nop; delay slot nop
  613  00001620          	L13_LF2:
  614  00001620  0bffffc0	j	L10_LF2
  615  00001624  54000000	nop; delay slot nop
  616  00001628          	L11_LF2:
  617  00001628  8fc1fff4	lw	r1,-12(r30)
  618  0000162c  08000004	j	L9_LF2
  619  00001630  54000000	nop; delay slot nop
  620  00001634          	L9_LF2:
  621  00001634  8fa20000	lw	r2,0(r29)
  622  00001638  8fa30004	lw	r3,4(r29)
  623  0000163c  8fdffff8	lw	r31,-8(r30)
  624  00001640  001ee820	add	r29,r0,r30
  625  00001644  8fdefffc	lw	r30,-4(r30)
  626  00001648  4be00000	jr	r31
  627  0000164c  54000000	nop
  628  00001650          	.endproc _dstrcpy
  629  00001650          	.align 2
  630  00001650          	.proc _dstrncpy
  631  00001650          	.global _dstrncpy
  632  00001650          	_dstrncpy:
  633                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  634  00001650  afbefffc	sw	-4(r29),r30; push fp
  635  00001654  001df020	add	r30,r0,r29; fp = sp
  636  00001658  afbffff8	sw	-8(r29),r31; push ret addr
  637  0000165c  2fbd0018	subui	r29,r29,#24; alloc local storage
  638  00001660  afa20000	sw	0(r29),r2
  639  00001664  afa30004	sw	4(r29),r3
  640  00001668  8fc10000	lw	r1,(r30)
  641  0000166c  afc1fff4	sw	-12(r30),r1
  642  00001670          	L15_LF2:
  643  00001670  8fc10008	lw	r1,8(r30)
  644  00001674  2022ffff	addi	r2,r1,#-1
  645  00001678  afc20008	sw	8(r30),r2
  646  0000167c  70210000	slei	r1,r1,#0
  647  00001680  1020000c	beqz	r1,L18_LF2
  648  00001684  54000000	nop; delay slot nop
  649  00001688  08000048	j	L16_LF2
  650  0000168c  54000000	nop; delay slot nop
  651  00001690          	L18_LF2:
  652  00001690  8fc10000	lw	r1,(r30)
  653  00001694  20220001	addi	r2,r1,#1
  654  00001698  afc20000	sw	(r30),r2
  655  0000169c  8fc20004	lw	r2,4(r30)
  656  000016a0  20430001	addi	r3,r2,#1
  657  000016a4  afc30004	sw	4(r30),r3
  658  000016a8  80420000	lb	r2,(r2)
  659  000016ac  a0220000	sb	(r1),r2
  660  000016b0  a3c2fff3	sb	-13(r30),r2
  661  000016b4          	L17_LF2:
  662  000016b4  93c1fff3	lbu	r1,-13(r30)
  663  000016b8  64220000	snei	r2,r1,#0
  664  000016bc  1440000c	bnez	r2,L19_LF2
  665  000016c0  54000000	nop; delay slot nop
  666  000016c4  0800000c	j	L16_LF2
  667  000016c8  54000000	nop; delay slot nop
  668  000016cc          	L19_LF2:
  669  000016cc  0bffffa0	j	L15_LF2
  670  000016d0  54000000	nop; delay slot nop
  671  000016d4          	L16_LF2:
  672  000016d4  8fc1fff4	lw	r1,-12(r30)
  673  000016d8  08000004	j	L14_LF2
  674  000016dc  54000000	nop; delay slot nop
  675  000016e0          	L14_LF2:
  676  000016e0  8fa20000	lw	r2,0(r29)
  677  000016e4  8fa30004	lw	r3,4(r29)
  678  000016e8  8fdffff8	lw	r31,-8(r30)
  679  000016ec  001ee820	add	r29,r0,r30
  680  000016f0  8fdefffc	lw	r30,-4(r30)
  681  000016f4  4be00000	jr	r31
  682  000016f8  54000000	nop
  683  000016fc          	.endproc _dstrncpy
  684  000016fc          	.align 2
  685  000016fc          	.proc _dstrcat
  686  000016fc          	.global _dstrcat
  687  000016fc          	_dstrcat:
  688                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  689  000016fc  afbefffc	sw	-4(r29),r30; push fp
  690  00001700  001df020	add	r30,r0,r29; fp = sp
  691  00001704  afbffff8	sw	-8(r29),r31; push ret addr
  692  00001708  2fbd0018	subui	r29,r29,#24; alloc local storage
  693  0000170c  afa20000	sw	0(r29),r2
  694  00001710  8fc10000	lw	r1,(r30)
  695  00001714  afc1fff4	sw	-12(r30),r1
  696  00001718          	L21_LF2:
  697  00001718  8fc10000	lw	r1,(r30)
  698  0000171c  90220000	lbu	r2,(r1)
  699  00001720  64410000	snei	r1,r2,#0
  700  00001724  1420000c	bnez	r1,L23_LF2
  701  00001728  54000000	nop; delay slot nop
  702  0000172c  0800001c	j	L22_LF2
  703  00001730  54000000	nop; delay slot nop
  704  00001734          	L23_LF2:
  705  00001734  8fc20000	lw	r2,(r30)
  706  00001738  20410001	addi	r1,r2,#1
  707  0000173c  00011020	add	r2,r0,r1
  708  00001740  afc20000	sw	(r30),r2
  709  00001744  0bffffd0	j	L21_LF2
  710  00001748  54000000	nop; delay slot nop
  711  0000174c          	L22_LF2:
  712  0000174c  23bdfff8	addi	r29,r29,#-8
  713  00001750  001d0820	add	r1,r0,r29
  714  00001754  8fc20000	lw	r2,(r30)
  715  00001758  ac220000	sw	(r1),r2
  716  0000175c  8fc20004	lw	r2,4(r30)
  717  00001760  ac220004	sw	4(r1),r2
  718  00001764  0ffffe5c	jal	_dstrcpy
  719  00001768  54000000	nop; delay slot nop
  720  0000176c  23bd0008	addi	r29,r29,#8
  721  00001770  8fc1fff4	lw	r1,-12(r30)
  722  00001774  08000004	j	L20_LF2
  723  00001778  54000000	nop; delay slot nop
  724  0000177c          	L20_LF2:
  725  0000177c  8fa20000	lw	r2,0(r29)
  726  00001780  8fdffff8	lw	r31,-8(r30)
  727  00001784  001ee820	add	r29,r0,r30
  728  00001788  8fdefffc	lw	r30,-4(r30)
  729  0000178c  4be00000	jr	r31
  730  00001790  54000000	nop
  731  00001794          	.endproc _dstrcat
  732  00001794          	.align 2
  733  00001794          	.proc _dstrncmp
  734  00001794          	.global _dstrncmp
  735  00001794          	_dstrncmp:
  736                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  737  00001794  afbefffc	sw	-4(r29),r30; push fp
  738  00001798  001df020	add	r30,r0,r29; fp = sp
  739  0000179c  afbffff8	sw	-8(r29),r31; push ret addr
  740  000017a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  741  000017a4  afa20000	sw	0(r29),r2
  742  000017a8  afa30004	sw	4(r29),r3
  743  000017ac  54000000	nop
  744  000017b0  20010000	addi	r1,r0,#0
  745  000017b4  afc1fff4	sw	-12(r30),r1
  746  000017b8          	L25_LF2:
  747  000017b8  8fc1fff4	lw	r1,-12(r30)
  748  000017bc  8fc20008	lw	r2,8(r30)
  749  000017c0  0022082a	slt	r1,r1,r2
  750  000017c4  1420000c	bnez	r1,L28_LF2
  751  000017c8  54000000	nop; delay slot nop
  752  000017cc  08000088	j	L26_LF2
  753  000017d0  54000000	nop; delay slot nop
  754  000017d4          	L28_LF2:
  755  000017d4  8fc10004	lw	r1,4(r30)
  756  000017d8  90220000	lbu	r2,(r1)
  757  000017dc  64410000	snei	r1,r2,#0
  758  000017e0  14200018	bnez	r1,L29_LF2
  759  000017e4  54000000	nop; delay slot nop
  760  000017e8  20010000	addi	r1,r0,#0
  761  000017ec  080000d8	j	L24_LF2
  762  000017f0  54000000	nop; delay slot nop
  763  000017f4  08000028	j	L30_LF2
  764  000017f8  54000000	nop; delay slot nop
  765  000017fc          	L29_LF2:
  766  000017fc  8fc10000	lw	r1,(r30)
  767  00001800  8fc20004	lw	r2,4(r30)
  768  00001804  90210000	lbu	r1,(r1)
  769  00001808  90420000	lbu	r2,(r2)
  770  0000180c  00220829	sne	r1,r1,r2
  771  00001810  1020000c	beqz	r1,L30_LF2
  772  00001814  54000000	nop; delay slot nop
  773  00001818  0800003c	j	L26_LF2
  774  0000181c  54000000	nop; delay slot nop
  775  00001820          	L31_LF2:
  776  00001820          	L30_LF2:
  777  00001820  8fc20000	lw	r2,(r30)
  778  00001824  20410001	addi	r1,r2,#1
  779  00001828  00011020	add	r2,r0,r1
  780  0000182c  afc20000	sw	(r30),r2
  781  00001830  8fc20004	lw	r2,4(r30)
  782  00001834  20410001	addi	r1,r2,#1
  783  00001838  00011020	add	r2,r0,r1
  784  0000183c  afc20004	sw	4(r30),r2
  785  00001840          	L27_LF2:
  786  00001840  8fc2fff4	lw	r2,-12(r30)
  787  00001844  20410001	addi	r1,r2,#1
  788  00001848  00011020	add	r2,r0,r1
  789  0000184c  afc2fff4	sw	-12(r30),r2
  790  00001850  0bffff64	j	L25_LF2
  791  00001854  54000000	nop; delay slot nop
  792  00001858          	L26_LF2:
  793  00001858  8fc1fff4	lw	r1,-12(r30)
  794  0000185c  8fc20008	lw	r2,8(r30)
  795  00001860  00220828	seq	r1,r1,r2
  796  00001864  10200018	beqz	r1,L32_LF2
  797  00001868  54000000	nop; delay slot nop
  798  0000186c  20010000	addi	r1,r0,#0
  799  00001870  08000054	j	L24_LF2
  800  00001874  54000000	nop; delay slot nop
  801  00001878  0800004c	j	L33_LF2
  802  0000187c  54000000	nop; delay slot nop
  803  00001880          	L32_LF2:
  804  00001880  8fc20000	lw	r2,(r30)
  805  00001884  90410000	lbu	r1,(r2)
  806  00001888  8fc20004	lw	r2,4(r30)
  807  0000188c  90430000	lbu	r3,(r2)
  808  00001890  00230822	sub	r1,r1,r3
  809  00001894  74220000	sgei	r2,r1,#0
  810  00001898  10400020	beqz	r2,L34_LF2
  811  0000189c  54000000	nop; delay slot nop
  812  000018a0  8fc10000	lw	r1,(r30)
  813  000018a4  8fc20004	lw	r2,4(r30)
  814  000018a8  90210000	lbu	r1,(r1)
  815  000018ac  90420000	lbu	r2,(r2)
  816  000018b0  00220829	sne	r1,r1,r2
  817  000018b4  08000008	j	L35_LF2
  818  000018b8  54000000	nop; delay slot nop
  819  000018bc          	L34_LF2:
  820  000018bc  2001ffff	addi	r1,r0,#-1
  821  000018c0          	L35_LF2:
  822  000018c0  08000004	j	L24_LF2
  823  000018c4  54000000	nop; delay slot nop
  824  000018c8          	L33_LF2:
  825  000018c8          	L24_LF2:
  826  000018c8  8fa20000	lw	r2,0(r29)
  827  000018cc  8fa30004	lw	r3,4(r29)
  828  000018d0  8fdffff8	lw	r31,-8(r30)
  829  000018d4  001ee820	add	r29,r0,r30
  830  000018d8  8fdefffc	lw	r30,-4(r30)
  831  000018dc  4be00000	jr	r31
  832  000018e0  54000000	nop
  833  000018e4          	.endproc _dstrncmp
  834  000018e4          	.align 2
  835  000018e4          	.proc _dstrlen
  836  000018e4          	.global _dstrlen
  837  000018e4          	_dstrlen:
  838                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  839  000018e4  afbefffc	sw	-4(r29),r30; push fp
  840  000018e8  001df020	add	r30,r0,r29; fp = sp
  841  000018ec  afbffff8	sw	-8(r29),r31; push ret addr
  842  000018f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  843  000018f4  afa20000	sw	0(r29),r2
  844  000018f8  20010000	addi	r1,r0,#0
  845  000018fc  afc1fff4	sw	-12(r30),r1
  846  00001900          	L37_LF2:
  847  00001900  8fc10000	lw	r1,(r30)
  848  00001904  20220001	addi	r2,r1,#1
  849  00001908  afc20000	sw	(r30),r2
  850  0000190c  90210000	lbu	r1,(r1)
  851  00001910  64220000	snei	r2,r1,#0
  852  00001914  1440000c	bnez	r2,L39_LF2
  853  00001918  54000000	nop; delay slot nop
  854  0000191c  0800001c	j	L38_LF2
  855  00001920  54000000	nop; delay slot nop
  856  00001924          	L39_LF2:
  857  00001924  8fc2fff4	lw	r2,-12(r30)
  858  00001928  20410001	addi	r1,r2,#1
  859  0000192c  00011020	add	r2,r0,r1
  860  00001930  afc2fff4	sw	-12(r30),r2
  861  00001934  0bffffc8	j	L37_LF2
  862  00001938  54000000	nop; delay slot nop
  863  0000193c          	L38_LF2:
  864  0000193c  8fc1fff4	lw	r1,-12(r30)
  865  00001940  08000004	j	L36_LF2
  866  00001944  54000000	nop; delay slot nop
  867  00001948          	L36_LF2:
  868  00001948  8fa20000	lw	r2,0(r29)
  869  0000194c  8fdffff8	lw	r31,-8(r30)
  870  00001950  001ee820	add	r29,r0,r30
  871  00001954  8fdefffc	lw	r30,-4(r30)
  872  00001958  4be00000	jr	r31
  873  0000195c  54000000	nop
  874  00001960          	.endproc _dstrlen
  875  00001960          	.align 2
  876  00001960          	.proc _dstrstr
  877  00001960          	.global _dstrstr
  878  00001960          	_dstrstr:
  879                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  880  00001960  afbefffc	sw	-4(r29),r30; push fp
  881  00001964  001df020	add	r30,r0,r29; fp = sp
  882  00001968  afbffff8	sw	-8(r29),r31; push ret addr
  883  0000196c  2fbd0018	subui	r29,r29,#24; alloc local storage
  884  00001970  afa20000	sw	0(r29),r2
  885  00001974  23bdfff8	addi	r29,r29,#-8
  886  00001978  001d0820	add	r1,r0,r29
  887  0000197c  8fc20004	lw	r2,4(r30)
  888  00001980  ac220000	sw	(r1),r2
  889  00001984  0fffff5c	jal	_dstrlen
  890  00001988  54000000	nop; delay slot nop
  891  0000198c  23bd0008	addi	r29,r29,#8
  892  00001990  afc1fff4	sw	-12(r30),r1
  893  00001994          	L41_LF2:
  894  00001994  8fc10000	lw	r1,(r30)
  895  00001998  90220000	lbu	r2,(r1)
  896  0000199c  64410000	snei	r1,r2,#0
  897  000019a0  1420000c	bnez	r1,L43_LF2
  898  000019a4  54000000	nop; delay slot nop
  899  000019a8  08000060	j	L42_LF2
  900  000019ac  54000000	nop; delay slot nop
  901  000019b0          	L43_LF2:
  902  000019b0  23bdfff0	addi	r29,r29,#-16
  903  000019b4  001d0820	add	r1,r0,r29
  904  000019b8  8fc20000	lw	r2,(r30)
  905  000019bc  ac220000	sw	(r1),r2
  906  000019c0  8fc20004	lw	r2,4(r30)
  907  000019c4  ac220004	sw	4(r1),r2
  908  000019c8  8fc2fff4	lw	r2,-12(r30)
  909  000019cc  ac220008	sw	8(r1),r2
  910  000019d0  0ffffdc0	jal	_dstrncmp
  911  000019d4  54000000	nop; delay slot nop
  912  000019d8  23bd0010	addi	r29,r29,#16
  913  000019dc  64220000	snei	r2,r1,#0
  914  000019e0  14400010	bnez	r2,L44_LF2
  915  000019e4  54000000	nop; delay slot nop
  916  000019e8  8fc10000	lw	r1,(r30)
  917  000019ec  08000028	j	L40_LF2
  918  000019f0  54000000	nop; delay slot nop
  919  000019f4          	L44_LF2:
  920  000019f4  8fc20000	lw	r2,(r30)
  921  000019f8  20410001	addi	r1,r2,#1
  922  000019fc  00011020	add	r2,r0,r1
  923  00001a00  afc20000	sw	(r30),r2
  924  00001a04  0bffff8c	j	L41_LF2
  925  00001a08  54000000	nop; delay slot nop
  926  00001a0c          	L42_LF2:
  927  00001a0c  20010000	addi	r1,r0,#0
  928  00001a10  08000004	j	L40_LF2
  929  00001a14  54000000	nop; delay slot nop
  930  00001a18          	L40_LF2:
  931  00001a18  8fa20000	lw	r2,0(r29)
  932  00001a1c  8fdffff8	lw	r31,-8(r30)
  933  00001a20  001ee820	add	r29,r0,r30
  934  00001a24  8fdefffc	lw	r30,-4(r30)
  935  00001a28  4be00000	jr	r31
  936  00001a2c  54000000	nop
  937  00001a30          	.endproc _dstrstr
  938  00001a30          	.align 2
  939  00001a30          	.proc _dmindex
  940  00001a30          	.global _dmindex
  941  00001a30          	_dmindex:
  942                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  943  00001a30  afbefffc	sw	-4(r29),r30; push fp
  944  00001a34  001df020	add	r30,r0,r29; fp = sp
  945  00001a38  afbffff8	sw	-8(r29),r31; push ret addr
  946  00001a3c  2fbd0018	subui	r29,r29,#24; alloc local storage
  947  00001a40  afa20000	sw	0(r29),r2
  948  00001a44  54000000	nop
  949  00001a48          	L46_LF2:
  950  00001a48  8fc10000	lw	r1,(r30)
  951  00001a4c  90220000	lbu	r2,(r1)
  952  00001a50  64410000	snei	r1,r2,#0
  953  00001a54  1420000c	bnez	r1,L48_LF2
  954  00001a58  54000000	nop; delay slot nop
  955  00001a5c  08000070	j	L47_LF2
  956  00001a60  54000000	nop; delay slot nop
  957  00001a64          	L48_LF2:
  958  00001a64  8fc10004	lw	r1,4(r30)
  959  00001a68  afc1fff4	sw	-12(r30),r1
  960  00001a6c          	L49_LF2:
  961  00001a6c  8fc1fff4	lw	r1,-12(r30)
  962  00001a70  90220000	lbu	r2,(r1)
  963  00001a74  64410000	snei	r1,r2,#0
  964  00001a78  1420000c	bnez	r1,L52_LF2
  965  00001a7c  54000000	nop; delay slot nop
  966  00001a80  08000044	j	L50_LF2
  967  00001a84  54000000	nop; delay slot nop
  968  00001a88          	L52_LF2:
  969  00001a88  8fc10000	lw	r1,(r30)
  970  00001a8c  8fc2fff4	lw	r2,-12(r30)
  971  00001a90  90210000	lbu	r1,(r1)
  972  00001a94  90420000	lbu	r2,(r2)
  973  00001a98  00220828	seq	r1,r1,r2
  974  00001a9c  10200010	beqz	r1,L51_LF2
  975  00001aa0  54000000	nop; delay slot nop
  976  00001aa4  8fc10000	lw	r1,(r30)
  977  00001aa8  08000030	j	L45_LF2
  978  00001aac  54000000	nop; delay slot nop
  979  00001ab0          	L53_LF2:
  980  00001ab0          	L51_LF2:
  981  00001ab0  8fc2fff4	lw	r2,-12(r30)
  982  00001ab4  20410001	addi	r1,r2,#1
  983  00001ab8  00011020	add	r2,r0,r1
  984  00001abc  afc2fff4	sw	-12(r30),r2
  985  00001ac0  0bffffa8	j	L49_LF2
  986  00001ac4  54000000	nop; delay slot nop
  987  00001ac8          	L50_LF2:
  988  00001ac8  0bffff7c	j	L46_LF2
  989  00001acc  54000000	nop; delay slot nop
  990  00001ad0          	L47_LF2:
  991  00001ad0  20010000	addi	r1,r0,#0
  992  00001ad4  08000004	j	L45_LF2
  993  00001ad8  54000000	nop; delay slot nop
  994  00001adc          	L45_LF2:
  995  00001adc  8fa20000	lw	r2,0(r29)
  996  00001ae0  8fdffff8	lw	r31,-8(r30)
  997  00001ae4  001ee820	add	r29,r0,r30
  998  00001ae8  8fdefffc	lw	r30,-4(r30)
  999  00001aec  4be00000	jr	r31
 1000  00001af0  54000000	nop
 1001  00001af4          	.endproc _dmindex
 1002  00001af4          	.align 2
 1003  00001af4          	.proc _dindex
 1004  00001af4          	.global _dindex
 1005  00001af4          	_dindex:
 1006                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
 1007  00001af4  afbefffc	sw	-4(r29),r30; push fp
 1008  00001af8  001df020	add	r30,r0,r29; fp = sp
 1009  00001afc  afbffff8	sw	-8(r29),r31; push ret addr
 1010  00001b00  2fbd0010	subui	r29,r29,#16; alloc local storage
 1011  00001b04  afa20000	sw	0(r29),r2
 1012  00001b08  54000000	nop
 1013  00001b0c          	L55_LF2:
 1014  00001b0c  8fc10000	lw	r1,(r30)
 1015  00001b10  90220000	lbu	r2,(r1)
 1016  00001b14  64410000	snei	r1,r2,#0
 1017  00001b18  1420000c	bnez	r1,L57_LF2
 1018  00001b1c  54000000	nop; delay slot nop
 1019  00001b20  08000040	j	L56_LF2
 1020  00001b24  54000000	nop; delay slot nop
 1021  00001b28          	L57_LF2:
 1022  00001b28  8fc10000	lw	r1,(r30)
 1023  00001b2c  90220000	lbu	r2,(r1)
 1024  00001b30  8fc10004	lw	r1,4(r30)
 1025  00001b34  00411028	seq	r2,r2,r1
 1026  00001b38  10400010	beqz	r2,L58_LF2
 1027  00001b3c  54000000	nop; delay slot nop
 1028  00001b40  8fc10000	lw	r1,(r30)
 1029  00001b44  08000028	j	L54_LF2
 1030  00001b48  54000000	nop; delay slot nop
 1031  00001b4c          	L58_LF2:
 1032  00001b4c  8fc20000	lw	r2,(r30)
 1033  00001b50  20410001	addi	r1,r2,#1
 1034  00001b54  00011020	add	r2,r0,r1
 1035  00001b58  afc20000	sw	(r30),r2
 1036  00001b5c  0bffffac	j	L55_LF2
 1037  00001b60  54000000	nop; delay slot nop
 1038  00001b64          	L56_LF2:
 1039  00001b64  20010000	addi	r1,r0,#0
 1040  00001b68  08000004	j	L54_LF2
 1041  00001b6c  54000000	nop; delay slot nop
 1042  00001b70          	L54_LF2:
 1043  00001b70  8fa20000	lw	r2,0(r29)
 1044  00001b74  8fdffff8	lw	r31,-8(r30)
 1045  00001b78  001ee820	add	r29,r0,r30
 1046  00001b7c  8fdefffc	lw	r30,-4(r30)
 1047  00001b80  4be00000	jr	r31
 1048  00001b84  54000000	nop
 1049  00001b88          	.endproc _dindex
 1050  00001b88          	.align 2
 1051  00001b88          	.proc _ditoa
 1052  00001b88          	.global _ditoa
 1053  00001b88          	_ditoa:
 1054                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1055  00001b88  afbefffc	sw	-4(r29),r30; push fp
 1056  00001b8c  001df020	add	r30,r0,r29; fp = sp
 1057  00001b90  afbffff8	sw	-8(r29),r31; push ret addr
 1058  00001b94  2fbd0018	subui	r29,r29,#24; alloc local storage
 1059  00001b98  afa20000	sw	0(r29),r2
 1060  00001b9c  afa30004	sw	4(r29),r3
 1061  00001ba0  8fc10000	lw	r1,(r30)
 1062  00001ba4  68220000	slti	r2,r1,#0
 1063  00001ba8  1040002c	beqz	r2,L60_LF2
 1064  00001bac  54000000	nop; delay slot nop
 1065  00001bb0  8fc10004	lw	r1,4(r30)
 1066  00001bb4  20220001	addi	r2,r1,#1
 1067  00001bb8  afc20004	sw	4(r30),r2
 1068  00001bbc  2002002d	addi	r2,r0,(#0x2d)&0xff
 1069  00001bc0  a0220000	sb	(r1),r2
 1070  00001bc4  8fc10000	lw	r1,(r30)
 1071  00001bc8  00011022	sub	r2,r0,r1
 1072  00001bcc  afc20000	sw	(r30),r2
 1073  00001bd0  08000118	j	L61_LF2
 1074  00001bd4  54000000	nop; delay slot nop
 1075  00001bd8          	L60_LF2:
 1076  00001bd8  8fc10000	lw	r1,(r30)
 1077  00001bdc  64220000	snei	r2,r1,#0
 1078  00001be0  14400020	bnez	r2,L62_LF2
 1079  00001be4  54000000	nop; delay slot nop
 1080  00001be8  8fc10004	lw	r1,4(r30)
 1081  00001bec  20220001	addi	r2,r1,#1
 1082  00001bf0  afc20004	sw	4(r30),r2
 1083  00001bf4  20020030	addi	r2,r0,(#0x30)&0xff
 1084  00001bf8  a0220000	sb	(r1),r2
 1085  00001bfc  080000ec	j	L61_LF2
 1086  00001c00  54000000	nop; delay slot nop
 1087  00001c04          	L62_LF2:
 1088  00001c04  20010001	addi	r1,r0,#1
 1089  00001c08  afc1fff4	sw	-12(r30),r1
 1090  00001c0c          	L64_LF2:
 1091  00001c0c  8fc1fff4	lw	r1,-12(r30)
 1092  00001c10  8fc20000	lw	r2,(r30)
 1093  00001c14  0022082c	sle	r1,r1,r2
 1094  00001c18  1420000c	bnez	r1,L66_LF2
 1095  00001c1c  54000000	nop; delay slot nop
 1096  00001c20  08000024	j	L65_LF2
 1097  00001c24  54000000	nop; delay slot nop
 1098  00001c28          	L67_LF2:
 1099  00001c28          	L66_LF2:
 1100  00001c28  8fc1fff4	lw	r1,-12(r30)
 1101  00001c2c  00011820	add	r3,r0,r1
 1102  00001c30  50620002	slli	r2,r3,#0x2
 1103  00001c34  00411020	add	r2,r2,r1
 1104  00001c38  50410001	slli	r1,r2,#0x1
 1105  00001c3c  afc1fff4	sw	-12(r30),r1
 1106  00001c40  0bffffc8	j	L64_LF2
 1107  00001c44  54000000	nop; delay slot nop
 1108  00001c48          	L65_LF2:
 1109  00001c48  54000000	nop
 1110  00001c4c          	L68_LF2:
 1111  00001c4c  8fc1fff4	lw	r1,-12(r30)
 1112  00001c50  2002000a	addi	r2,r0,#10
 1113  00001c54  00200035	movi2fp	f0,r1
 1114  00001c58  00400835	movi2fp	f1,r2
 1115  00001c5c  0401000f	div	f0,f0,f1
 1116  00001c60  00000834	movfp2i	r1,f0
 1117  00001c64  afc1fff4	sw	-12(r30),r1
 1118  00001c68  8fc10004	lw	r1,4(r30)
 1119  00001c6c  20220001	addi	r2,r1,#1
 1120  00001c70  afc20004	sw	4(r30),r2
 1121  00001c74  8fc20000	lw	r2,(r30)
 1122  00001c78  8fc3fff4	lw	r3,-12(r30)
 1123  00001c7c  00400035	movi2fp	f0,r2
 1124  00001c80  00600835	movi2fp	f1,r3
 1125  00001c84  0401000f	div	f0,f0,f1
 1126  00001c88  00001034	movfp2i	r2,f0
 1127  00001c8c  00021820	add	r3,r0,r2
 1128  00001c90  20620030	addi	r2,r3,#48
 1129  00001c94  a0220000	sb	(r1),r2
 1130  00001c98  8fc10000	lw	r1,(r30)
 1131  00001c9c  8fc3fff4	lw	r3,-12(r30)
 1132  00001ca0  00200035	movi2fp	f0,r1
 1133  00001ca4  00600835	movi2fp	f1,r3
 1134  00001ca8  0401000f	div	f0,f0,f1
 1135  00001cac  00001034	movfp2i	r2,f0
 1136  00001cb0  8fc3fff4	lw	r3,-12(r30)
 1137  00001cb4  00400035	movi2fp	f0,r2
 1138  00001cb8  00600835	movi2fp	f1,r3
 1139  00001cbc  0401000e	mult	f0,f0,f1
 1140  00001cc0  00001034	movfp2i	r2,f0
 1141  00001cc4  00220822	sub	r1,r1,r2
 1142  00001cc8  afc10000	sw	(r30),r1
 1143  00001ccc          	L70_LF2:
 1144  00001ccc  8fc1fff4	lw	r1,-12(r30)
 1145  00001cd0  6c220001	sgti	r2,r1,#1
 1146  00001cd4  1440000c	bnez	r2,L71_LF2
 1147  00001cd8  54000000	nop; delay slot nop
 1148  00001cdc  0800000c	j	L61_LF2
 1149  00001ce0  54000000	nop; delay slot nop
 1150  00001ce4          	L71_LF2:
 1151  00001ce4  0bffff64	j	L68_LF2
 1152  00001ce8  54000000	nop; delay slot nop
 1153  00001cec          	L69_LF2:
 1154  00001cec          	L63_LF2:
 1155  00001cec          	L61_LF2:
 1156  00001cec  8fc10004	lw	r1,4(r30)
 1157  00001cf0  20020000	addi	r2,r0,(#0x0)&0xff
 1158  00001cf4  a0220000	sb	(r1),r2
 1159  00001cf8          	L59_LF2:
 1160  00001cf8  8fa20000	lw	r2,0(r29)
 1161  00001cfc  8fa30004	lw	r3,4(r29)
 1162  00001d00  8fdffff8	lw	r31,-8(r30)
 1163  00001d04  001ee820	add	r29,r0,r30
 1164  00001d08  8fdefffc	lw	r30,-4(r30)
 1165  00001d0c  4be00000	jr	r31
 1166  00001d10  54000000	nop
 1167  00001d14          	.endproc _ditoa
 1168  00001d14          	.align 2
 1169  00001d14          	.proc _dstrtol
 1170  00001d14          	.global _dstrtol
 1171  00001d14          	_dstrtol:
 1172                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1173  00001d14  afbefffc	sw	-4(r29),r30; push fp
 1174  00001d18  001df020	add	r30,r0,r29; fp = sp
 1175  00001d1c  afbffff8	sw	-8(r29),r31; push ret addr
 1176  00001d20  2fbd0020	subui	r29,r29,#32; alloc local storage
 1177  00001d24  afa20000	sw	0(r29),r2
 1178  00001d28  20010000	addi	r1,r0,#0
 1179  00001d2c  afc1fff4	sw	-12(r30),r1
 1180  00001d30          	L73_LF2:
 1181  00001d30  8fc10000	lw	r1,(r30)
 1182  00001d34  90220000	lbu	r2,(r1)
 1183  00001d38  60410020	seqi	r1,r2,#32
 1184  00001d3c  14200034	bnez	r1,L75_LF2
 1185  00001d40  54000000	nop; delay slot nop
 1186  00001d44  8fc10000	lw	r1,(r30)
 1187  00001d48  90220000	lbu	r2,(r1)
 1188  00001d4c  60410009	seqi	r1,r2,#9
 1189  00001d50  14200020	bnez	r1,L75_LF2
 1190  00001d54  54000000	nop; delay slot nop
 1191  00001d58  8fc10000	lw	r1,(r30)
 1192  00001d5c  90220000	lbu	r2,(r1)
 1193  00001d60  6041000a	seqi	r1,r2,#10
 1194  00001d64  1420000c	bnez	r1,L75_LF2
 1195  00001d68  54000000	nop; delay slot nop
 1196  00001d6c  0800001c	j	L74_LF2
 1197  00001d70  54000000	nop; delay slot nop
 1198  00001d74          	L75_LF2:
 1199  00001d74  8fc20000	lw	r2,(r30)
 1200  00001d78  20410001	addi	r1,r2,#1
 1201  00001d7c  00011020	add	r2,r0,r1
 1202  00001d80  afc20000	sw	(r30),r2
 1203  00001d84  0bffffa8	j	L73_LF2
 1204  00001d88  54000000	nop; delay slot nop
 1205  00001d8c          	L74_LF2:
 1206  00001d8c  8fc10004	lw	r1,4(r30)
 1207  00001d90  64220000	snei	r2,r1,#0
 1208  00001d94  10400010	beqz	r2,L76_LF2
 1209  00001d98  54000000	nop; delay slot nop
 1210  00001d9c  8fc10004	lw	r1,4(r30)
 1211  00001da0  8fc20000	lw	r2,(r30)
 1212  00001da4  ac220000	sw	(r1),r2
 1213  00001da8          	L76_LF2:
 1214  00001da8  8fc10000	lw	r1,(r30)
 1215  00001dac  90220000	lbu	r2,(r1)
 1216  00001db0  64410000	snei	r1,r2,#0
 1217  00001db4  14200010	bnez	r1,L77_LF2
 1218  00001db8  54000000	nop; delay slot nop
 1219  00001dbc  8fc1fff4	lw	r1,-12(r30)
 1220  00001dc0  08000294	j	L72_LF2
 1221  00001dc4  54000000	nop; delay slot nop
 1222  00001dc8          	L77_LF2:
 1223  00001dc8  8fc10000	lw	r1,(r30)
 1224  00001dcc  90220000	lbu	r2,(r1)
 1225  00001dd0  6041002d	seqi	r1,r2,#45
 1226  00001dd4  10200024	beqz	r1,L78_LF2
 1227  00001dd8  54000000	nop; delay slot nop
 1228  00001ddc  2001ffff	addi	r1,r0,#-1
 1229  00001de0  afc1ffec	sw	-20(r30),r1
 1230  00001de4  8fc20000	lw	r2,(r30)
 1231  00001de8  20410001	addi	r1,r2,#1
 1232  00001dec  00011020	add	r2,r0,r1
 1233  00001df0  afc20000	sw	(r30),r2
 1234  00001df4  0800000c	j	L79_LF2
 1235  00001df8  54000000	nop; delay slot nop
 1236  00001dfc          	L78_LF2:
 1237  00001dfc  20010001	addi	r1,r0,#1
 1238  00001e00  afc1ffec	sw	-20(r30),r1
 1239  00001e04          	L79_LF2:
 1240  00001e04  8fc10008	lw	r1,8(r30)
 1241  00001e08  64220000	snei	r2,r1,#0
 1242  00001e0c  14400090	bnez	r2,L80_LF2
 1243  00001e10  54000000	nop; delay slot nop
 1244  00001e14  8fc10000	lw	r1,(r30)
 1245  00001e18  90220000	lbu	r2,(r1)
 1246  00001e1c  60410030	seqi	r1,r2,#48
 1247  00001e20  10200074	beqz	r1,L81_LF2
 1248  00001e24  54000000	nop; delay slot nop
 1249  00001e28  8fc20000	lw	r2,(r30)
 1250  00001e2c  20410001	addi	r1,r2,#1
 1251  00001e30  00011020	add	r2,r0,r1
 1252  00001e34  afc20000	sw	(r30),r2
 1253  00001e38  8fc10000	lw	r1,(r30)
 1254  00001e3c  90220000	lbu	r2,(r1)
 1255  00001e40  60410078	seqi	r1,r2,#120
 1256  00001e44  14200020	bnez	r1,L83_LF2
 1257  00001e48  54000000	nop; delay slot nop
 1258  00001e4c  8fc10000	lw	r1,(r30)
 1259  00001e50  90220000	lbu	r2,(r1)
 1260  00001e54  60410058	seqi	r1,r2,#88
 1261  00001e58  1420000c	bnez	r1,L83_LF2
 1262  00001e5c  54000000	nop; delay slot nop
 1263  00001e60  08000024	j	L82_LF2
 1264  00001e64  54000000	nop; delay slot nop
 1265  00001e68          	L83_LF2:
 1266  00001e68  20010010	addi	r1,r0,#16
 1267  00001e6c  afc10008	sw	8(r30),r1
 1268  00001e70  8fc20000	lw	r2,(r30)
 1269  00001e74  20410001	addi	r1,r2,#1
 1270  00001e78  00011020	add	r2,r0,r1
 1271  00001e7c  afc20000	sw	(r30),r2
 1272  00001e80  0800000c	j	L84_LF2
 1273  00001e84  54000000	nop; delay slot nop
 1274  00001e88          	L82_LF2:
 1275  00001e88  20010008	addi	r1,r0,#8
 1276  00001e8c  afc10008	sw	8(r30),r1
 1277  00001e90          	L84_LF2:
 1278  00001e90  0800000c	j	L80_LF2
 1279  00001e94  54000000	nop; delay slot nop
 1280  00001e98          	L81_LF2:
 1281  00001e98  2001000a	addi	r1,r0,#10
 1282  00001e9c  afc10008	sw	8(r30),r1
 1283  00001ea0          	L85_LF2:
 1284  00001ea0          	L80_LF2:
 1285  00001ea0  8fc10008	lw	r1,8(r30)
 1286  00001ea4  70220000	slei	r2,r1,#0
 1287  00001ea8  1440001c	bnez	r2,L87_LF2
 1288  00001eac  54000000	nop; delay slot nop
 1289  00001eb0  8fc10008	lw	r1,8(r30)
 1290  00001eb4  6c220010	sgti	r2,r1,#16
 1291  00001eb8  1440000c	bnez	r2,L87_LF2
 1292  00001ebc  54000000	nop; delay slot nop
 1293  00001ec0  08000010	j	L86_LF2
 1294  00001ec4  54000000	nop; delay slot nop
 1295  00001ec8          	L87_LF2:
 1296  00001ec8  8fc1fff4	lw	r1,-12(r30)
 1297  00001ecc  08000188	j	L72_LF2
 1298  00001ed0  54000000	nop; delay slot nop
 1299  00001ed4          	L86_LF2:
 1300  00001ed4  54000000	nop
 1301  00001ed8          	L88_LF2:
 1302  00001ed8  8fc10000	lw	r1,(r30)
 1303  00001edc  90220000	lbu	r2,(r1)
 1304  00001ee0  6c41002f	sgtui	r1,r2,#47
 1305  00001ee4  10200030	beqz	r1,L91_LF2
 1306  00001ee8  54000000	nop; delay slot nop
 1307  00001eec  8fc10000	lw	r1,(r30)
 1308  00001ef0  90220000	lbu	r2,(r1)
 1309  00001ef4  70410039	sleui	r1,r2,#57
 1310  00001ef8  1020001c	beqz	r1,L91_LF2
 1311  00001efc  54000000	nop; delay slot nop
 1312  00001f00  8fc10000	lw	r1,(r30)
 1313  00001f04  90220000	lbu	r2,(r1)
 1314  00001f08  2041ffd0	addi	r1,r2,#-48
 1315  00001f0c  afc1fff0	sw	-16(r30),r1
 1316  00001f10  0800008c	j	L92_LF2
 1317  00001f14  54000000	nop; delay slot nop
 1318  00001f18          	L91_LF2:
 1319  00001f18  8fc10000	lw	r1,(r30)
 1320  00001f1c  90220000	lbu	r2,(r1)
 1321  00001f20  6c410060	sgtui	r1,r2,#96
 1322  00001f24  10200030	beqz	r1,L93_LF2
 1323  00001f28  54000000	nop; delay slot nop
 1324  00001f2c  8fc10000	lw	r1,(r30)
 1325  00001f30  90220000	lbu	r2,(r1)
 1326  00001f34  7041007a	sleui	r1,r2,#122
 1327  00001f38  1020001c	beqz	r1,L93_LF2
 1328  00001f3c  54000000	nop; delay slot nop
 1329  00001f40  8fc10000	lw	r1,(r30)
 1330  00001f44  90220000	lbu	r2,(r1)
 1331  00001f48  2041ffa9	addi	r1,r2,#-87
 1332  00001f4c  afc1fff0	sw	-16(r30),r1
 1333  00001f50  0800004c	j	L92_LF2
 1334  00001f54  54000000	nop; delay slot nop
 1335  00001f58          	L93_LF2:
 1336  00001f58  8fc10000	lw	r1,(r30)
 1337  00001f5c  90220000	lbu	r2,(r1)
 1338  00001f60  6c410040	sgtui	r1,r2,#64
 1339  00001f64  10200030	beqz	r1,L95_LF2
 1340  00001f68  54000000	nop; delay slot nop
 1341  00001f6c  8fc10000	lw	r1,(r30)
 1342  00001f70  90220000	lbu	r2,(r1)
 1343  00001f74  7041005a	sleui	r1,r2,#90
 1344  00001f78  1020001c	beqz	r1,L95_LF2
 1345  00001f7c  54000000	nop; delay slot nop
 1346  00001f80  8fc10000	lw	r1,(r30)
 1347  00001f84  90220000	lbu	r2,(r1)
 1348  00001f88  2041ffc9	addi	r1,r2,#-55
 1349  00001f8c  afc1fff0	sw	-16(r30),r1
 1350  00001f90  0800000c	j	L92_LF2
 1351  00001f94  54000000	nop; delay slot nop
 1352  00001f98          	L95_LF2:
 1353  00001f98  200103e8	addi	r1,r0,#1000
 1354  00001f9c  afc1fff0	sw	-16(r30),r1
 1355  00001fa0          	L96_LF2:
 1356  00001fa0          	L94_LF2:
 1357  00001fa0          	L92_LF2:
 1358  00001fa0  8fc1fff0	lw	r1,-16(r30)
 1359  00001fa4  8fc20008	lw	r2,8(r30)
 1360  00001fa8  0022082a	slt	r1,r1,r2
 1361  00001fac  10200040	beqz	r1,L90_LF2
 1362  00001fb0  54000000	nop; delay slot nop
 1363  00001fb4  8fc1fff4	lw	r1,-12(r30)
 1364  00001fb8  8fc20008	lw	r2,8(r30)
 1365  00001fbc  00200035	movi2fp	f0,r1
 1366  00001fc0  00400835	movi2fp	f1,r2
 1367  00001fc4  0401000e	mult	f0,f0,f1
 1368  00001fc8  00000834	movfp2i	r1,f0
 1369  00001fcc  afc1fff4	sw	-12(r30),r1
 1370  00001fd0  8fc1fff4	lw	r1,-12(r30)
 1371  00001fd4  8fc2fff0	lw	r2,-16(r30)
 1372  00001fd8  00220820	add	r1,r1,r2
 1373  00001fdc  afc1fff4	sw	-12(r30),r1
 1374  00001fe0  8fc20000	lw	r2,(r30)
 1375  00001fe4  20410001	addi	r1,r2,#1
 1376  00001fe8  00011020	add	r2,r0,r1
 1377  00001fec  afc20000	sw	(r30),r2
 1378  00001ff0          	L97_LF2:
 1379  00001ff0          	L90_LF2:
 1380  00001ff0  8fc1fff0	lw	r1,-16(r30)
 1381  00001ff4  8fc20008	lw	r2,8(r30)
 1382  00001ff8  0022082a	slt	r1,r1,r2
 1383  00001ffc  1420000c	bnez	r1,L98_LF2
 1384  00002000  54000000	nop; delay slot nop
 1385  00002004  0800000c	j	L89_LF2
 1386  00002008  54000000	nop; delay slot nop
 1387  0000200c          	L98_LF2:
 1388  0000200c  0bfffec8	j	L88_LF2
 1389  00002010  54000000	nop; delay slot nop
 1390  00002014          	L89_LF2:
 1391  00002014  8fc10004	lw	r1,4(r30)
 1392  00002018  64220000	snei	r2,r1,#0
 1393  0000201c  10400010	beqz	r2,L99_LF2
 1394  00002020  54000000	nop; delay slot nop
 1395  00002024  8fc10004	lw	r1,4(r30)
 1396  00002028  8fc20000	lw	r2,(r30)
 1397  0000202c  ac220000	sw	(r1),r2
 1398  00002030          	L99_LF2:
 1399  00002030  8fc1fff4	lw	r1,-12(r30)
 1400  00002034  8fc2ffec	lw	r2,-20(r30)
 1401  00002038  00200035	movi2fp	f0,r1
 1402  0000203c  00400835	movi2fp	f1,r2
 1403  00002040  0401000e	mult	f0,f0,f1
 1404  00002044  00000834	movfp2i	r1,f0
 1405  00002048  afc1fff4	sw	-12(r30),r1
 1406  0000204c  8fc1fff4	lw	r1,-12(r30)
 1407  00002050  08000004	j	L72_LF2
 1408  00002054  54000000	nop; delay slot nop
 1409  00002058          	L72_LF2:
 1410  00002058  8fa20000	lw	r2,0(r29)
 1411  0000205c  8fdffff8	lw	r31,-8(r30)
 1412  00002060  001ee820	add	r29,r0,r30
 1413  00002064  8fdefffc	lw	r30,-4(r30)
 1414  00002068  4be00000	jr	r31
 1415  0000206c  54000000	nop
 1416  00002070          	.endproc _dstrtol
 1417  00002070          	.align 2
 1418  00002070          	.proc _bcopy
 1419  00002070          	.global _bcopy
 1420  00002070          	_bcopy:
 1421                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1422  00002070  afbefffc	sw	-4(r29),r30; push fp
 1423  00002074  001df020	add	r30,r0,r29; fp = sp
 1424  00002078  afbffff8	sw	-8(r29),r31; push ret addr
 1425  0000207c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1426  00002080  afa20000	sw	0(r29),r2
 1427  00002084  afa30004	sw	4(r29),r3
 1428  00002088  54000000	nop
 1429  0000208c          	L101_LF2:
 1430  0000208c  8fc10008	lw	r1,8(r30)
 1431  00002090  2022ffff	addi	r2,r1,#-1
 1432  00002094  afc20008	sw	8(r30),r2
 1433  00002098  6c210000	sgti	r1,r1,#0
 1434  0000209c  1420000c	bnez	r1,L103_LF2
 1435  000020a0  54000000	nop; delay slot nop
 1436  000020a4  0800002c	j	L102_LF2
 1437  000020a8  54000000	nop; delay slot nop
 1438  000020ac          	L103_LF2:
 1439  000020ac  8fc10004	lw	r1,4(r30)
 1440  000020b0  20220001	addi	r2,r1,#1
 1441  000020b4  afc20004	sw	4(r30),r2
 1442  000020b8  8fc20000	lw	r2,(r30)
 1443  000020bc  20430001	addi	r3,r2,#1
 1444  000020c0  afc30000	sw	(r30),r3
 1445  000020c4  80420000	lb	r2,(r2)
 1446  000020c8  a0220000	sb	(r1),r2
 1447  000020cc  0bffffbc	j	L101_LF2
 1448  000020d0  54000000	nop; delay slot nop
 1449  000020d4          	L102_LF2:
 1450  000020d4          	L100_LF2:
 1451  000020d4  8fa20000	lw	r2,0(r29)
 1452  000020d8  8fa30004	lw	r3,4(r29)
 1453  000020dc  8fdffff8	lw	r31,-8(r30)
 1454  000020e0  001ee820	add	r29,r0,r30
 1455  000020e4  8fdefffc	lw	r30,-4(r30)
 1456  000020e8  4be00000	jr	r31
 1457  000020ec  54000000	nop
 1458  000020f0          	.endproc _bcopy
 1459  000020f0          	.align 2
 1460  000020f0          	.proc _bzero
 1461  000020f0          	.global _bzero
 1462  000020f0          	_bzero:
 1463                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1464  000020f0  afbefffc	sw	-4(r29),r30; push fp
 1465  000020f4  001df020	add	r30,r0,r29; fp = sp
 1466  000020f8  afbffff8	sw	-8(r29),r31; push ret addr
 1467  000020fc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1468  00002100  afa20000	sw	0(r29),r2
 1469  00002104  54000000	nop
 1470  00002108          	L105_LF2:
 1471  00002108  8fc10004	lw	r1,4(r30)
 1472  0000210c  2022ffff	addi	r2,r1,#-1
 1473  00002110  afc20004	sw	4(r30),r2
 1474  00002114  6c210000	sgti	r1,r1,#0
 1475  00002118  1420000c	bnez	r1,L107_LF2
 1476  0000211c  54000000	nop; delay slot nop
 1477  00002120  08000020	j	L106_LF2
 1478  00002124  54000000	nop; delay slot nop
 1479  00002128          	L107_LF2:
 1480  00002128  8fc10000	lw	r1,(r30)
 1481  0000212c  20220001	addi	r2,r1,#1
 1482  00002130  afc20000	sw	(r30),r2
 1483  00002134  20020000	addi	r2,r0,(#0x0)&0xff
 1484  00002138  a0220000	sb	(r1),r2
 1485  0000213c  0bffffc8	j	L105_LF2
 1486  00002140  54000000	nop; delay slot nop
 1487  00002144          	L106_LF2:
 1488  00002144          	L104_LF2:
 1489  00002144  8fa20000	lw	r2,0(r29)
 1490  00002148  8fdffff8	lw	r31,-8(r30)
 1491  0000214c  001ee820	add	r29,r0,r30
 1492  00002150  8fdefffc	lw	r30,-4(r30)
 1493  00002154  4be00000	jr	r31
 1494  00002158  54000000	nop
 1495  0000215c          	.endproc _bzero
 1496  0000215c          	.align 2
 1497  0000215c          	.proc _min
 1498  0000215c          	.global _min
 1499  0000215c          	_min:
 1500                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1501  0000215c  afbefffc	sw	-4(r29),r30; push fp
 1502  00002160  001df020	add	r30,r0,r29; fp = sp
 1503  00002164  afbffff8	sw	-8(r29),r31; push ret addr
 1504  00002168  2fbd0010	subui	r29,r29,#16; alloc local storage
 1505  0000216c  afa20000	sw	0(r29),r2
 1506  00002170  afa30004	sw	4(r29),r3
 1507  00002174  8fc10000	lw	r1,(r30)
 1508  00002178  8fc20004	lw	r2,4(r30)
 1509  0000217c  0022182c	sle	r3,r1,r2
 1510  00002180  14600008	bnez	r3,L109_LF2
 1511  00002184  54000000	nop; delay slot nop
 1512  00002188  8fc10004	lw	r1,4(r30)
 1513  0000218c          	L109_LF2:
 1514  0000218c  08000004	j	L108_LF2
 1515  00002190  54000000	nop; delay slot nop
 1516  00002194          	L108_LF2:
 1517  00002194  8fa20000	lw	r2,0(r29)
 1518  00002198  8fa30004	lw	r3,4(r29)
 1519  0000219c  8fdffff8	lw	r31,-8(r30)
 1520  000021a0  001ee820	add	r29,r0,r30
 1521  000021a4  8fdefffc	lw	r30,-4(r30)
 1522  000021a8  4be00000	jr	r31
 1523  000021ac  54000000	nop
 1524  000021b0          	.endproc _min
 1525                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1526                      ;;;
 1527                      ;;; Most of the traps are called in files from libtraps.
 1530  000021b0          	.align 2
 1531  000021b0          	.proc _exit
 1532  000021b0          	.global _exit
 1533  000021b0          	_exit:
 1534  000021b0  44000300	trap	#0x300
 1535  000021b4  4be00000	jr	r31
 1536  000021b8  54000000	nop
 1537  000021bc          	.endproc _exit
 1539                      ; for the benefit of gcc.
 1540  000021bc          	.proc ___main
 1541  000021bc          	.global ___main
 1542  000021bc          	___main:
 1543  000021bc  4be00000	jr	r31
 1544  000021c0  54000000	nop
 1545  000021c4          	.endproc ___main
 1546  000021c4          	.text
 1547  000021c4          	.global _etext
 1548  000021c4          	_etext:
 1549  000021c4          	.align 3
 1550  000021c8          	.data
 1551  00003101          	.global _edata
 1552  00003101          	_edata:
