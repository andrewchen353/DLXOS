 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 121
    4                      ; Text size: 4328
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  6d616b65	.ascii "makeprocs (%d): Bad sem_create\n\000"
   82  00003004  70726f63	
   82  00003008  73202825	
   82  0000300c  64293a20	
   82  00003010  42616420	
   82  00003014  73656d5f	
   82  00003018  63726561	
   82  0000301c  74650a00	
   83  00003020          	.align 2
   84  00003020          	LC1_LF0:
   85  00003020  74657374	.ascii "test1.dlx.obj\000"
   85  00003024  312e646c	
   85  00003028  782e6f62	
   85  0000302c  6a00    	
   86  0000302e          	.align 2
   87  00003030          	LC2_LF0:
   88  00003030  74657374	.ascii "test2.dlx.obj\000"
   88  00003034  322e646c	
   88  00003038  782e6f62	
   88  0000303c  6a00    	
   89  0000303e          	.align 2
   90  00003040          	LC3_LF0:
   91  00003040  2d2d2d2d	.ascii "------------------Makeprocs complete-------------------\n\000"
   91  00003044  2d2d2d2d	
   91  00003048  2d2d2d2d	
   91  0000304c  2d2d2d2d	
   91  00003050  2d2d4d61	
   91  00003054  6b657072	
   91  00003058  6f637320	
   91  0000305c  636f6d70	
   91  00003060  6c657465	
   91  00003064  2d2d2d2d	
   91  00003068  2d2d2d2d	
   91  0000306c  2d2d2d2d	
   91  00003070  2d2d2d2d	
   91  00003074  2d2d2d0a	
   91  00003078  00      	
   92  00003079          	.text
   93  000010d4          	.align 2
   94  000010d4          	.proc _main
   95  000010d4          	.global _main
   96  000010d4          	_main:
   97                      ;  Function 'main'; 16 bytes of locals, 0 regs to save.
   98  000010d4  afbefffc	sw	-4(r29),r30; push fp
   99  000010d8  001df020	add	r30,r0,r29; fp = sp
  100  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  101  000010e0  2fbd0018	subui	r29,r29,#24; alloc local storage
  102  000010e4  0c000ff8	jal	___main
  103  000010e8  54000000	nop; not filled.
  104  000010ec  23bdfff8	addi	r29,r29,#-8
  105  000010f0  20040000	addi	r4,r0,#0
  106  000010f4  afa40000	sw	(r29),r4
  107  000010f8  0c000160	jal	_sem_create
  108  000010fc  54000000	nop; not filled.
  109  00001100  00011820	add	r3,r0,r1
  110  00001104  23bd0008	addi	r29,r29,#8
  111  00001108  6061ffff	seqi	r1,r3,#-1
  112  0000110c  10200034	beqz	r1,L16_LF0
  113  00001110  54000000	nop; not filled.
  114  00001114  0c000114	jal	_getpid
  115  00001118  54000000	nop; not filled.
  116  0000111c  23bdfff8	addi	r29,r29,#-8
  117  00001120  3c040000	lhi	r4,((LC0_LF0)>>16)&0xffff
  118  00001124  24843000	addui	r4,r4,(LC0_LF0)&0xffff
  119  00001128  afa40000	sw	(r29),r4
  120  0000112c  afa10004	sw	4(r29),r1
  121  00001130  0c0000ec	jal	_Printf
  122  00001134  54000000	nop; not filled.
  123  00001138  0c0001ec	jal	_Exit
  124  0000113c  54000000	nop; not filled.
  125  00001140  23bd0008	addi	r29,r29,#8
  126  00001144          	L16_LF0:
  127  00001144  23bdfff8	addi	r29,r29,#-8
  128  00001148  afa30000	sw	(r29),r3
  129  0000114c  23c2ffe8	addi	r2,r30,#-24
  130  00001150  afa20004	sw	4(r29),r2
  131  00001154  0c000900	jal	_ditoa
  132  00001158  54000000	nop; not filled.
  133  0000115c  23bdfff8	addi	r29,r29,#-8
  134  00001160  3c040000	lhi	r4,((LC1_LF0)>>16)&0xffff
  135  00001164  24843020	addui	r4,r4,(LC1_LF0)&0xffff
  136  00001168  afa40000	sw	(r29),r4
  137  0000116c  afa20004	sw	4(r29),r2
  138  00001170  20040000	addi	r4,r0,#0
  139  00001174  afa40008	sw	8(r29),r4
  140  00001178  0c0000bc	jal	_process_create
  141  0000117c  54000000	nop; not filled.
  142  00001180  afa30000	sw	(r29),r3
  143  00001184  0c0000e0	jal	_sem_wait
  144  00001188  54000000	nop; not filled.
  145  0000118c  3c040000	lhi	r4,((LC2_LF0)>>16)&0xffff
  146  00001190  24843030	addui	r4,r4,(LC2_LF0)&0xffff
  147  00001194  afa40000	sw	(r29),r4
  148  00001198  afa20004	sw	4(r29),r2
  149  0000119c  20040000	addi	r4,r0,#0
  150  000011a0  afa40008	sw	8(r29),r4
  151  000011a4  0c000090	jal	_process_create
  152  000011a8  54000000	nop; not filled.
  153  000011ac  afa30000	sw	(r29),r3
  154  000011b0  0c0000b4	jal	_sem_wait
  155  000011b4  54000000	nop; not filled.
  156  000011b8  3c040000	lhi	r4,((LC3_LF0)>>16)&0xffff
  157  000011bc  24843040	addui	r4,r4,(LC3_LF0)&0xffff
  158  000011c0  afa40000	sw	(r29),r4
  159  000011c4  0c000058	jal	_Printf
  160  000011c8  54000000	nop; not filled.
  161  000011cc  23bd0010	addi	r29,r29,#16
  162  000011d0  0c000f00	jal	_exit
  163  000011d4  54000000	nop
  164  000011d8          	.endproc _main
  165                      ;;;
  166                      ;;; Stub functions for DLX traps.
  167                      ;;;
  168                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  169                      ;;;
  170                      ;;; The traps such as Open and Close
  171                      ;;; (note the capital letters) are for use by user programs.  The traps
  172                      ;;; with names such as open and close (lower case) are for use by the OS.
  173                      ;;;
  176  000011d8          	.align 2
  178                      ;;; The following are the traps to be used by user-level programs
  179                      ;;;
  181  000011d8          	.align 2
  182  000011d8          	.proc _Open
  183  000011d8          	.global _Open
  184  000011d8          	_Open:
  185                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  186                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  187                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  188  000011d8  44000213	trap	#0x213
  189  000011dc  4be00000	jr	r31
  190  000011e0  54000000	nop
  191  000011e4          	.endproc _Open
  193  000011e4          	.proc _Close
  194  000011e4          	.global _Close
  195  000011e4          	_Close:
  196  000011e4  44000214	trap	#0x214
  197  000011e8  4be00000	jr	r31
  198  000011ec  54000000	nop
  199  000011f0          	.endproc _Close
  201  000011f0          	.proc _Read
  202  000011f0          	.global _Read
  203  000011f0          	_Read:
  204  000011f0  44000210	trap	#0x210
  205  000011f4  4be00000	jr	r31
  206  000011f8  54000000	nop
  207  000011fc          	.endproc _Read
  209  000011fc          	.proc _Write
  210  000011fc          	.global _Write
  211  000011fc          	_Write:
  212  000011fc  44000211	trap	#0x211
  213  00001200  4be00000	jr	r31
  214  00001204  54000000	nop
  215  00001208          	.endproc _Write
  217  00001208          	.proc _Lseek
  218  00001208          	.global _Lseek
  219  00001208          	_Lseek:
  220  00001208  44000212	trap	#0x212
  221  0000120c  4be00000	jr	r31
  222  00001210  54000000	nop
  223  00001214          	.endproc _Lseek
  225  00001214          	.proc _Putchar
  226  00001214          	.global _Putchar
  227  00001214          	_Putchar:
  228  00001214  44000280	trap	#0x280
  229  00001218  4be00000	jr	r31
  230  0000121c  54000000	nop
  231  00001220          	.endproc _Putchar
  233  00001220          	.proc _Printf
  234  00001220          	.global _Printf
  235  00001220          	_Printf:
  236  00001220  44000201	trap	#0x201
  237  00001224  4be00000	jr	r31
  238  00001228  54000000	nop
  239  0000122c          	.endproc _Printf
  241  0000122c          	.proc _getpid
  242  0000122c          	.global _getpid
  243  0000122c          	_getpid:
  244  0000122c  44000431	trap	#0x431
  245  00001230  4be00000	jr	r31
  246  00001234  54000000	nop
  247  00001238          	.endproc _getpid
  249  00001238          	.proc _process_create
  250  00001238          	.global _process_create
  251  00001238          	_process_create:
  252  00001238  44000432	trap	#0x432
  253  0000123c  4be00000	jr	r31
  254  00001240  54000000	nop
  255  00001244          	.endproc _process_create
  257  00001244          	.proc _shmget
  258  00001244          	.global _shmget
  259  00001244          	_shmget:
  260  00001244  44000440	trap	#0x440
  261  00001248  4be00000	jr	r31
  262  0000124c  54000000	nop
  263  00001250          	.endproc _shmget
  265  00001250          	.proc _shmat
  266  00001250          	.global _shmat
  267  00001250          	_shmat:
  268  00001250  44000441	trap	#0x441
  269  00001254  4be00000	jr	r31
  270  00001258  54000000	nop
  271  0000125c          	.endproc _shmat
  273  0000125c          	.proc _sem_create
  274  0000125c          	.global _sem_create
  275  0000125c          	_sem_create:
  276  0000125c  44000450	trap	#0x450
  277  00001260  4be00000	jr	r31
  278  00001264  54000000	nop
  279  00001268          	.endproc _sem_create
  281  00001268          	.proc _sem_wait
  282  00001268          	.global _sem_wait
  283  00001268          	_sem_wait:
  284  00001268  44000451	trap	#0x451
  285  0000126c  4be00000	jr	r31
  286  00001270  54000000	nop
  287  00001274          	.endproc _sem_wait
  289  00001274          	.proc _sem_signal
  290  00001274          	.global _sem_signal
  291  00001274          	_sem_signal:
  292  00001274  44000452	trap	#0x452
  293  00001278  4be00000	jr	r31
  294  0000127c  54000000	nop
  295  00001280          	.endproc _sem_signal
  297  00001280          	.proc _lock_create
  298  00001280          	.global _lock_create
  299  00001280          	_lock_create:
  300  00001280  44000453	trap	#0x453
  301  00001284  4be00000	jr	r31
  302  00001288  54000000	nop
  303  0000128c          	.endproc _lock_create
  305  0000128c          	.proc _lock_acquire
  306  0000128c          	.global _lock_acquire
  307  0000128c          	_lock_acquire:
  308  0000128c  44000454	trap	#0x454
  309  00001290  4be00000	jr	r31
  310  00001294  54000000	nop
  311  00001298          	.endproc _lock_acquire
  313  00001298          	.proc _lock_release
  314  00001298          	.global _lock_release
  315  00001298          	_lock_release:
  316  00001298  44000455	trap	#0x455
  317  0000129c  4be00000	jr	r31
  318  000012a0  54000000	nop
  319  000012a4          	.endproc _lock_release
  321  000012a4          	.proc _cond_create
  322  000012a4          	.global _cond_create
  323  000012a4          	_cond_create:
  324  000012a4  44000456	trap	#0x456
  325  000012a8  4be00000	jr	r31
  326  000012ac  54000000	nop
  327  000012b0          	.endproc _cond_create
  329  000012b0          	.proc _cond_wait
  330  000012b0          	.global _cond_wait
  331  000012b0          	_cond_wait:
  332  000012b0  44000457	trap	#0x457
  333  000012b4  4be00000	jr	r31
  334  000012b8  54000000	nop
  335  000012bc          	.endproc _cond_wait
  337  000012bc          	.proc _cond_signal
  338  000012bc          	.global _cond_signal
  339  000012bc          	_cond_signal:
  340  000012bc  44000458	trap	#0x458
  341  000012c0  4be00000	jr	r31
  342  000012c4  54000000	nop
  343  000012c8          	.endproc _cond_signal
  345  000012c8          	.proc _cond_broadcast
  346  000012c8          	.global _cond_broadcast
  347  000012c8          	_cond_broadcast:
  348  000012c8  44000459	trap	#0x459
  349  000012cc  4be00000	jr	r31
  350  000012d0  54000000	nop
  351  000012d4          	.endproc _cond_broadcast
  353  000012d4          	.proc _mbox_create
  354  000012d4          	.global _mbox_create
  355  000012d4          	_mbox_create:
  356  000012d4  44000460	trap	#0x460
  357  000012d8  4be00000	jr	r31
  358  000012dc  54000000	nop
  359  000012e0          	.endproc _mbox_create
  361  000012e0          	.proc _mbox_open
  362  000012e0          	.global _mbox_open
  363  000012e0          	_mbox_open:
  364  000012e0  44000461	trap	#0x461
  365  000012e4  4be00000	jr	r31
  366  000012e8  54000000	nop
  367  000012ec          	.endproc _mbox_open
  369  000012ec          	.proc _mbox_close
  370  000012ec          	.global _mbox_close
  371  000012ec          	_mbox_close:
  372  000012ec  44000462	trap	#0x462
  373  000012f0  4be00000	jr	r31
  374  000012f4  54000000	nop
  375  000012f8          	.endproc _mbox_close
  377  000012f8          	.proc _mbox_send
  378  000012f8          	.global _mbox_send
  379  000012f8          	_mbox_send:
  380  000012f8  44000463	trap	#0x463
  381  000012fc  4be00000	jr	r31
  382  00001300  54000000	nop
  383  00001304          	.endproc _mbox_send
  385  00001304          	.proc _mbox_recv
  386  00001304          	.global _mbox_recv
  387  00001304          	_mbox_recv:
  388  00001304  44000464	trap	#0x464
  389  00001308  4be00000	jr	r31
  390  0000130c  54000000	nop
  391  00001310          	.endproc _mbox_recv
  393  00001310          	.proc _sleep
  394  00001310          	.global _sleep
  395  00001310          	_sleep:
  396  00001310  44000465	trap	#0x465
  397  00001314  4be00000	jr	r31
  398  00001318  54000000	nop
  399  0000131c          	.endproc _sleep
  401  0000131c          	.proc _yield
  402  0000131c          	.global _yield
  403  0000131c          	_yield:
  404  0000131c  44000466	trap	#0x466
  405  00001320  4be00000	jr	r31
  406  00001324  54000000	nop
  407  00001328          	.endproc _yield
  410  00001328          	.proc _Exit
  411  00001328          	.global _Exit
  412  00001328          	_Exit:
  413  00001328  44000500	trap	#0x500
  414  0000132c  4be00000	jr	r31
  415  00001330  54000000	nop
  416  00001334          	.endproc _Exit
  419  00001334          	.proc _malloc
  420  00001334          	.global _malloc
  421  00001334          	_malloc:
  422  00001334  44000467	trap	#0x467
  423  00001338  4be00000	jr	r31
  424  0000133c          	.endproc _malloc
  427  0000133c          	.proc _mfree
  428  0000133c          	.global _mfree
  429  0000133c          	_mfree:
  430  0000133c  44000468	trap	#0x468
  431  00001340  4be00000	jr	r31
  432  00001344          	.endproc _mfree
  433                      ; Compiled by GCC
  435  00001344          	.align 2
  436  00001344          	.proc _isspace
  437  00001344          	.global _isspace
  438  00001344          	_isspace:
  439                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  440  00001344  afbefffc	sw	-4(r29),r30; push fp
  441  00001348  001df020	add	r30,r0,r29; fp = sp
  442  0000134c  afbffff8	sw	-8(r29),r31; push ret addr
  443  00001350  2fbd0018	subui	r29,r29,#24; alloc local storage
  444  00001354  afa20000	sw	0(r29),r2
  445  00001358  afa30004	sw	4(r29),r3
  446  0000135c  afa40008	sw	8(r29),r4
  447  00001360  83c20003	lb	r2,3(r30)
  448  00001364  20010000	addi	r1,r0,#0
  449  00001368  304300ff	andi	r3,r2,#0x00ff
  450  0000136c  60640020	seqi	r4,r3,#32
  451  00001370  1480002c	bnez	r4,L3_LF2
  452  00001374  54000000	nop; delay slot nop
  453  00001378  304300ff	andi	r3,r2,#0x00ff
  454  0000137c  60640009	seqi	r4,r3,#9
  455  00001380  1480001c	bnez	r4,L3_LF2
  456  00001384  54000000	nop; delay slot nop
  457  00001388  304300ff	andi	r3,r2,#0x00ff
  458  0000138c  6064000a	seqi	r4,r3,#10
  459  00001390  1480000c	bnez	r4,L3_LF2
  460  00001394  54000000	nop; delay slot nop
  461  00001398  08000008	j	L2_LF2
  462  0000139c  54000000	nop; delay slot nop
  463  000013a0          	L3_LF2:
  464  000013a0  20010001	addi	r1,r0,#1
  465  000013a4          	L2_LF2:
  466  000013a4  08000004	j	L1_LF2
  467  000013a8  54000000	nop; delay slot nop
  468  000013ac          	L1_LF2:
  469  000013ac  8fa20000	lw	r2,0(r29)
  470  000013b0  8fa30004	lw	r3,4(r29)
  471  000013b4  8fa40008	lw	r4,8(r29)
  472  000013b8  8fdffff8	lw	r31,-8(r30)
  473  000013bc  001ee820	add	r29,r0,r30
  474  000013c0  8fdefffc	lw	r30,-4(r30)
  475  000013c4  4be00000	jr	r31
  476  000013c8  54000000	nop
  477  000013cc          	.endproc _isspace
  478  000013cc          	.align 2
  479  000013cc          	.proc _isxdigit
  480  000013cc          	.global _isxdigit
  481  000013cc          	_isxdigit:
  482                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  483  000013cc  afbefffc	sw	-4(r29),r30; push fp
  484  000013d0  001df020	add	r30,r0,r29; fp = sp
  485  000013d4  afbffff8	sw	-8(r29),r31; push ret addr
  486  000013d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  487  000013dc  afa20000	sw	0(r29),r2
  488  000013e0  afa30004	sw	4(r29),r3
  489  000013e4  afa40008	sw	8(r29),r4
  490  000013e8  83c20003	lb	r2,3(r30)
  491  000013ec  20010000	addi	r1,r0,#0
  492  000013f0  304300ff	andi	r3,r2,#0x00ff
  493  000013f4  6c64002f	sgtui	r4,r3,#47
  494  000013f8  1080001c	beqz	r4,L7_LF2
  495  000013fc  54000000	nop; delay slot nop
  496  00001400  304300ff	andi	r3,r2,#0x00ff
  497  00001404  70640039	sleui	r4,r3,#57
  498  00001408  1480005c	bnez	r4,L6_LF2
  499  0000140c  54000000	nop; delay slot nop
  500  00001410  08000004	j	L7_LF2
  501  00001414  54000000	nop; delay slot nop
  502  00001418          	L7_LF2:
  503  00001418  304300ff	andi	r3,r2,#0x00ff
  504  0000141c  6c640060	sgtui	r4,r3,#96
  505  00001420  1080001c	beqz	r4,L8_LF2
  506  00001424  54000000	nop; delay slot nop
  507  00001428  304300ff	andi	r3,r2,#0x00ff
  508  0000142c  70640066	sleui	r4,r3,#102
  509  00001430  14800034	bnez	r4,L6_LF2
  510  00001434  54000000	nop; delay slot nop
  511  00001438  08000004	j	L8_LF2
  512  0000143c  54000000	nop; delay slot nop
  513  00001440          	L8_LF2:
  514  00001440  304300ff	andi	r3,r2,#0x00ff
  515  00001444  6c640040	sgtui	r4,r3,#64
  516  00001448  10800020	beqz	r4,L5_LF2
  517  0000144c  54000000	nop; delay slot nop
  518  00001450  304300ff	andi	r3,r2,#0x00ff
  519  00001454  70640041	sleui	r4,r3,#65
  520  00001458  1480000c	bnez	r4,L6_LF2
  521  0000145c  54000000	nop; delay slot nop
  522  00001460  08000008	j	L5_LF2
  523  00001464  54000000	nop; delay slot nop
  524  00001468          	L6_LF2:
  525  00001468  20010001	addi	r1,r0,#1
  526  0000146c          	L5_LF2:
  527  0000146c  08000004	j	L4_LF2
  528  00001470  54000000	nop; delay slot nop
  529  00001474          	L4_LF2:
  530  00001474  8fa20000	lw	r2,0(r29)
  531  00001478  8fa30004	lw	r3,4(r29)
  532  0000147c  8fa40008	lw	r4,8(r29)
  533  00001480  8fdffff8	lw	r31,-8(r30)
  534  00001484  001ee820	add	r29,r0,r30
  535  00001488  8fdefffc	lw	r30,-4(r30)
  536  0000148c  4be00000	jr	r31
  537  00001490  54000000	nop
  538  00001494          	.endproc _isxdigit
  539  00001494          	.align 2
  540  00001494          	.proc _dstrcpy
  541  00001494          	.global _dstrcpy
  542  00001494          	_dstrcpy:
  543                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  544  00001494  afbefffc	sw	-4(r29),r30; push fp
  545  00001498  001df020	add	r30,r0,r29; fp = sp
  546  0000149c  afbffff8	sw	-8(r29),r31; push ret addr
  547  000014a0  2fbd0018	subui	r29,r29,#24; alloc local storage
  548  000014a4  afa20000	sw	0(r29),r2
  549  000014a8  afa30004	sw	4(r29),r3
  550  000014ac  8fc10000	lw	r1,(r30)
  551  000014b0  afc1fff4	sw	-12(r30),r1
  552  000014b4          	L10_LF2:
  553  000014b4  8fc10000	lw	r1,(r30)
  554  000014b8  20220001	addi	r2,r1,#1
  555  000014bc  afc20000	sw	(r30),r2
  556  000014c0  8fc20004	lw	r2,4(r30)
  557  000014c4  20430001	addi	r3,r2,#1
  558  000014c8  afc30004	sw	4(r30),r3
  559  000014cc  80420000	lb	r2,(r2)
  560  000014d0  a0220000	sb	(r1),r2
  561  000014d4  a3c2fff3	sb	-13(r30),r2
  562  000014d8          	L12_LF2:
  563  000014d8  93c1fff3	lbu	r1,-13(r30)
  564  000014dc  64220000	snei	r2,r1,#0
  565  000014e0  1440000c	bnez	r2,L13_LF2
  566  000014e4  54000000	nop; delay slot nop
  567  000014e8  0800000c	j	L11_LF2
  568  000014ec  54000000	nop; delay slot nop
  569  000014f0          	L13_LF2:
  570  000014f0  0bffffc0	j	L10_LF2
  571  000014f4  54000000	nop; delay slot nop
  572  000014f8          	L11_LF2:
  573  000014f8  8fc1fff4	lw	r1,-12(r30)
  574  000014fc  08000004	j	L9_LF2
  575  00001500  54000000	nop; delay slot nop
  576  00001504          	L9_LF2:
  577  00001504  8fa20000	lw	r2,0(r29)
  578  00001508  8fa30004	lw	r3,4(r29)
  579  0000150c  8fdffff8	lw	r31,-8(r30)
  580  00001510  001ee820	add	r29,r0,r30
  581  00001514  8fdefffc	lw	r30,-4(r30)
  582  00001518  4be00000	jr	r31
  583  0000151c  54000000	nop
  584  00001520          	.endproc _dstrcpy
  585  00001520          	.align 2
  586  00001520          	.proc _dstrncpy
  587  00001520          	.global _dstrncpy
  588  00001520          	_dstrncpy:
  589                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  590  00001520  afbefffc	sw	-4(r29),r30; push fp
  591  00001524  001df020	add	r30,r0,r29; fp = sp
  592  00001528  afbffff8	sw	-8(r29),r31; push ret addr
  593  0000152c  2fbd0018	subui	r29,r29,#24; alloc local storage
  594  00001530  afa20000	sw	0(r29),r2
  595  00001534  afa30004	sw	4(r29),r3
  596  00001538  8fc10000	lw	r1,(r30)
  597  0000153c  afc1fff4	sw	-12(r30),r1
  598  00001540          	L15_LF2:
  599  00001540  8fc10008	lw	r1,8(r30)
  600  00001544  2022ffff	addi	r2,r1,#-1
  601  00001548  afc20008	sw	8(r30),r2
  602  0000154c  70210000	slei	r1,r1,#0
  603  00001550  1020000c	beqz	r1,L18_LF2
  604  00001554  54000000	nop; delay slot nop
  605  00001558  08000048	j	L16_LF2
  606  0000155c  54000000	nop; delay slot nop
  607  00001560          	L18_LF2:
  608  00001560  8fc10000	lw	r1,(r30)
  609  00001564  20220001	addi	r2,r1,#1
  610  00001568  afc20000	sw	(r30),r2
  611  0000156c  8fc20004	lw	r2,4(r30)
  612  00001570  20430001	addi	r3,r2,#1
  613  00001574  afc30004	sw	4(r30),r3
  614  00001578  80420000	lb	r2,(r2)
  615  0000157c  a0220000	sb	(r1),r2
  616  00001580  a3c2fff3	sb	-13(r30),r2
  617  00001584          	L17_LF2:
  618  00001584  93c1fff3	lbu	r1,-13(r30)
  619  00001588  64220000	snei	r2,r1,#0
  620  0000158c  1440000c	bnez	r2,L19_LF2
  621  00001590  54000000	nop; delay slot nop
  622  00001594  0800000c	j	L16_LF2
  623  00001598  54000000	nop; delay slot nop
  624  0000159c          	L19_LF2:
  625  0000159c  0bffffa0	j	L15_LF2
  626  000015a0  54000000	nop; delay slot nop
  627  000015a4          	L16_LF2:
  628  000015a4  8fc1fff4	lw	r1,-12(r30)
  629  000015a8  08000004	j	L14_LF2
  630  000015ac  54000000	nop; delay slot nop
  631  000015b0          	L14_LF2:
  632  000015b0  8fa20000	lw	r2,0(r29)
  633  000015b4  8fa30004	lw	r3,4(r29)
  634  000015b8  8fdffff8	lw	r31,-8(r30)
  635  000015bc  001ee820	add	r29,r0,r30
  636  000015c0  8fdefffc	lw	r30,-4(r30)
  637  000015c4  4be00000	jr	r31
  638  000015c8  54000000	nop
  639  000015cc          	.endproc _dstrncpy
  640  000015cc          	.align 2
  641  000015cc          	.proc _dstrcat
  642  000015cc          	.global _dstrcat
  643  000015cc          	_dstrcat:
  644                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  645  000015cc  afbefffc	sw	-4(r29),r30; push fp
  646  000015d0  001df020	add	r30,r0,r29; fp = sp
  647  000015d4  afbffff8	sw	-8(r29),r31; push ret addr
  648  000015d8  2fbd0018	subui	r29,r29,#24; alloc local storage
  649  000015dc  afa20000	sw	0(r29),r2
  650  000015e0  8fc10000	lw	r1,(r30)
  651  000015e4  afc1fff4	sw	-12(r30),r1
  652  000015e8          	L21_LF2:
  653  000015e8  8fc10000	lw	r1,(r30)
  654  000015ec  90220000	lbu	r2,(r1)
  655  000015f0  64410000	snei	r1,r2,#0
  656  000015f4  1420000c	bnez	r1,L23_LF2
  657  000015f8  54000000	nop; delay slot nop
  658  000015fc  0800001c	j	L22_LF2
  659  00001600  54000000	nop; delay slot nop
  660  00001604          	L23_LF2:
  661  00001604  8fc20000	lw	r2,(r30)
  662  00001608  20410001	addi	r1,r2,#1
  663  0000160c  00011020	add	r2,r0,r1
  664  00001610  afc20000	sw	(r30),r2
  665  00001614  0bffffd0	j	L21_LF2
  666  00001618  54000000	nop; delay slot nop
  667  0000161c          	L22_LF2:
  668  0000161c  23bdfff8	addi	r29,r29,#-8
  669  00001620  001d0820	add	r1,r0,r29
  670  00001624  8fc20000	lw	r2,(r30)
  671  00001628  ac220000	sw	(r1),r2
  672  0000162c  8fc20004	lw	r2,4(r30)
  673  00001630  ac220004	sw	4(r1),r2
  674  00001634  0ffffe5c	jal	_dstrcpy
  675  00001638  54000000	nop; delay slot nop
  676  0000163c  23bd0008	addi	r29,r29,#8
  677  00001640  8fc1fff4	lw	r1,-12(r30)
  678  00001644  08000004	j	L20_LF2
  679  00001648  54000000	nop; delay slot nop
  680  0000164c          	L20_LF2:
  681  0000164c  8fa20000	lw	r2,0(r29)
  682  00001650  8fdffff8	lw	r31,-8(r30)
  683  00001654  001ee820	add	r29,r0,r30
  684  00001658  8fdefffc	lw	r30,-4(r30)
  685  0000165c  4be00000	jr	r31
  686  00001660  54000000	nop
  687  00001664          	.endproc _dstrcat
  688  00001664          	.align 2
  689  00001664          	.proc _dstrncmp
  690  00001664          	.global _dstrncmp
  691  00001664          	_dstrncmp:
  692                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  693  00001664  afbefffc	sw	-4(r29),r30; push fp
  694  00001668  001df020	add	r30,r0,r29; fp = sp
  695  0000166c  afbffff8	sw	-8(r29),r31; push ret addr
  696  00001670  2fbd0018	subui	r29,r29,#24; alloc local storage
  697  00001674  afa20000	sw	0(r29),r2
  698  00001678  afa30004	sw	4(r29),r3
  699  0000167c  54000000	nop
  700  00001680  20010000	addi	r1,r0,#0
  701  00001684  afc1fff4	sw	-12(r30),r1
  702  00001688          	L25_LF2:
  703  00001688  8fc1fff4	lw	r1,-12(r30)
  704  0000168c  8fc20008	lw	r2,8(r30)
  705  00001690  0022082a	slt	r1,r1,r2
  706  00001694  1420000c	bnez	r1,L28_LF2
  707  00001698  54000000	nop; delay slot nop
  708  0000169c  08000088	j	L26_LF2
  709  000016a0  54000000	nop; delay slot nop
  710  000016a4          	L28_LF2:
  711  000016a4  8fc10004	lw	r1,4(r30)
  712  000016a8  90220000	lbu	r2,(r1)
  713  000016ac  64410000	snei	r1,r2,#0
  714  000016b0  14200018	bnez	r1,L29_LF2
  715  000016b4  54000000	nop; delay slot nop
  716  000016b8  20010000	addi	r1,r0,#0
  717  000016bc  080000d8	j	L24_LF2
  718  000016c0  54000000	nop; delay slot nop
  719  000016c4  08000028	j	L30_LF2
  720  000016c8  54000000	nop; delay slot nop
  721  000016cc          	L29_LF2:
  722  000016cc  8fc10000	lw	r1,(r30)
  723  000016d0  8fc20004	lw	r2,4(r30)
  724  000016d4  90210000	lbu	r1,(r1)
  725  000016d8  90420000	lbu	r2,(r2)
  726  000016dc  00220829	sne	r1,r1,r2
  727  000016e0  1020000c	beqz	r1,L30_LF2
  728  000016e4  54000000	nop; delay slot nop
  729  000016e8  0800003c	j	L26_LF2
  730  000016ec  54000000	nop; delay slot nop
  731  000016f0          	L31_LF2:
  732  000016f0          	L30_LF2:
  733  000016f0  8fc20000	lw	r2,(r30)
  734  000016f4  20410001	addi	r1,r2,#1
  735  000016f8  00011020	add	r2,r0,r1
  736  000016fc  afc20000	sw	(r30),r2
  737  00001700  8fc20004	lw	r2,4(r30)
  738  00001704  20410001	addi	r1,r2,#1
  739  00001708  00011020	add	r2,r0,r1
  740  0000170c  afc20004	sw	4(r30),r2
  741  00001710          	L27_LF2:
  742  00001710  8fc2fff4	lw	r2,-12(r30)
  743  00001714  20410001	addi	r1,r2,#1
  744  00001718  00011020	add	r2,r0,r1
  745  0000171c  afc2fff4	sw	-12(r30),r2
  746  00001720  0bffff64	j	L25_LF2
  747  00001724  54000000	nop; delay slot nop
  748  00001728          	L26_LF2:
  749  00001728  8fc1fff4	lw	r1,-12(r30)
  750  0000172c  8fc20008	lw	r2,8(r30)
  751  00001730  00220828	seq	r1,r1,r2
  752  00001734  10200018	beqz	r1,L32_LF2
  753  00001738  54000000	nop; delay slot nop
  754  0000173c  20010000	addi	r1,r0,#0
  755  00001740  08000054	j	L24_LF2
  756  00001744  54000000	nop; delay slot nop
  757  00001748  0800004c	j	L33_LF2
  758  0000174c  54000000	nop; delay slot nop
  759  00001750          	L32_LF2:
  760  00001750  8fc20000	lw	r2,(r30)
  761  00001754  90410000	lbu	r1,(r2)
  762  00001758  8fc20004	lw	r2,4(r30)
  763  0000175c  90430000	lbu	r3,(r2)
  764  00001760  00230822	sub	r1,r1,r3
  765  00001764  74220000	sgei	r2,r1,#0
  766  00001768  10400020	beqz	r2,L34_LF2
  767  0000176c  54000000	nop; delay slot nop
  768  00001770  8fc10000	lw	r1,(r30)
  769  00001774  8fc20004	lw	r2,4(r30)
  770  00001778  90210000	lbu	r1,(r1)
  771  0000177c  90420000	lbu	r2,(r2)
  772  00001780  00220829	sne	r1,r1,r2
  773  00001784  08000008	j	L35_LF2
  774  00001788  54000000	nop; delay slot nop
  775  0000178c          	L34_LF2:
  776  0000178c  2001ffff	addi	r1,r0,#-1
  777  00001790          	L35_LF2:
  778  00001790  08000004	j	L24_LF2
  779  00001794  54000000	nop; delay slot nop
  780  00001798          	L33_LF2:
  781  00001798          	L24_LF2:
  782  00001798  8fa20000	lw	r2,0(r29)
  783  0000179c  8fa30004	lw	r3,4(r29)
  784  000017a0  8fdffff8	lw	r31,-8(r30)
  785  000017a4  001ee820	add	r29,r0,r30
  786  000017a8  8fdefffc	lw	r30,-4(r30)
  787  000017ac  4be00000	jr	r31
  788  000017b0  54000000	nop
  789  000017b4          	.endproc _dstrncmp
  790  000017b4          	.align 2
  791  000017b4          	.proc _dstrlen
  792  000017b4          	.global _dstrlen
  793  000017b4          	_dstrlen:
  794                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  795  000017b4  afbefffc	sw	-4(r29),r30; push fp
  796  000017b8  001df020	add	r30,r0,r29; fp = sp
  797  000017bc  afbffff8	sw	-8(r29),r31; push ret addr
  798  000017c0  2fbd0018	subui	r29,r29,#24; alloc local storage
  799  000017c4  afa20000	sw	0(r29),r2
  800  000017c8  20010000	addi	r1,r0,#0
  801  000017cc  afc1fff4	sw	-12(r30),r1
  802  000017d0          	L37_LF2:
  803  000017d0  8fc10000	lw	r1,(r30)
  804  000017d4  20220001	addi	r2,r1,#1
  805  000017d8  afc20000	sw	(r30),r2
  806  000017dc  90210000	lbu	r1,(r1)
  807  000017e0  64220000	snei	r2,r1,#0
  808  000017e4  1440000c	bnez	r2,L39_LF2
  809  000017e8  54000000	nop; delay slot nop
  810  000017ec  0800001c	j	L38_LF2
  811  000017f0  54000000	nop; delay slot nop
  812  000017f4          	L39_LF2:
  813  000017f4  8fc2fff4	lw	r2,-12(r30)
  814  000017f8  20410001	addi	r1,r2,#1
  815  000017fc  00011020	add	r2,r0,r1
  816  00001800  afc2fff4	sw	-12(r30),r2
  817  00001804  0bffffc8	j	L37_LF2
  818  00001808  54000000	nop; delay slot nop
  819  0000180c          	L38_LF2:
  820  0000180c  8fc1fff4	lw	r1,-12(r30)
  821  00001810  08000004	j	L36_LF2
  822  00001814  54000000	nop; delay slot nop
  823  00001818          	L36_LF2:
  824  00001818  8fa20000	lw	r2,0(r29)
  825  0000181c  8fdffff8	lw	r31,-8(r30)
  826  00001820  001ee820	add	r29,r0,r30
  827  00001824  8fdefffc	lw	r30,-4(r30)
  828  00001828  4be00000	jr	r31
  829  0000182c  54000000	nop
  830  00001830          	.endproc _dstrlen
  831  00001830          	.align 2
  832  00001830          	.proc _dstrstr
  833  00001830          	.global _dstrstr
  834  00001830          	_dstrstr:
  835                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  836  00001830  afbefffc	sw	-4(r29),r30; push fp
  837  00001834  001df020	add	r30,r0,r29; fp = sp
  838  00001838  afbffff8	sw	-8(r29),r31; push ret addr
  839  0000183c  2fbd0018	subui	r29,r29,#24; alloc local storage
  840  00001840  afa20000	sw	0(r29),r2
  841  00001844  23bdfff8	addi	r29,r29,#-8
  842  00001848  001d0820	add	r1,r0,r29
  843  0000184c  8fc20004	lw	r2,4(r30)
  844  00001850  ac220000	sw	(r1),r2
  845  00001854  0fffff5c	jal	_dstrlen
  846  00001858  54000000	nop; delay slot nop
  847  0000185c  23bd0008	addi	r29,r29,#8
  848  00001860  afc1fff4	sw	-12(r30),r1
  849  00001864          	L41_LF2:
  850  00001864  8fc10000	lw	r1,(r30)
  851  00001868  90220000	lbu	r2,(r1)
  852  0000186c  64410000	snei	r1,r2,#0
  853  00001870  1420000c	bnez	r1,L43_LF2
  854  00001874  54000000	nop; delay slot nop
  855  00001878  08000060	j	L42_LF2
  856  0000187c  54000000	nop; delay slot nop
  857  00001880          	L43_LF2:
  858  00001880  23bdfff0	addi	r29,r29,#-16
  859  00001884  001d0820	add	r1,r0,r29
  860  00001888  8fc20000	lw	r2,(r30)
  861  0000188c  ac220000	sw	(r1),r2
  862  00001890  8fc20004	lw	r2,4(r30)
  863  00001894  ac220004	sw	4(r1),r2
  864  00001898  8fc2fff4	lw	r2,-12(r30)
  865  0000189c  ac220008	sw	8(r1),r2
  866  000018a0  0ffffdc0	jal	_dstrncmp
  867  000018a4  54000000	nop; delay slot nop
  868  000018a8  23bd0010	addi	r29,r29,#16
  869  000018ac  64220000	snei	r2,r1,#0
  870  000018b0  14400010	bnez	r2,L44_LF2
  871  000018b4  54000000	nop; delay slot nop
  872  000018b8  8fc10000	lw	r1,(r30)
  873  000018bc  08000028	j	L40_LF2
  874  000018c0  54000000	nop; delay slot nop
  875  000018c4          	L44_LF2:
  876  000018c4  8fc20000	lw	r2,(r30)
  877  000018c8  20410001	addi	r1,r2,#1
  878  000018cc  00011020	add	r2,r0,r1
  879  000018d0  afc20000	sw	(r30),r2
  880  000018d4  0bffff8c	j	L41_LF2
  881  000018d8  54000000	nop; delay slot nop
  882  000018dc          	L42_LF2:
  883  000018dc  20010000	addi	r1,r0,#0
  884  000018e0  08000004	j	L40_LF2
  885  000018e4  54000000	nop; delay slot nop
  886  000018e8          	L40_LF2:
  887  000018e8  8fa20000	lw	r2,0(r29)
  888  000018ec  8fdffff8	lw	r31,-8(r30)
  889  000018f0  001ee820	add	r29,r0,r30
  890  000018f4  8fdefffc	lw	r30,-4(r30)
  891  000018f8  4be00000	jr	r31
  892  000018fc  54000000	nop
  893  00001900          	.endproc _dstrstr
  894  00001900          	.align 2
  895  00001900          	.proc _dmindex
  896  00001900          	.global _dmindex
  897  00001900          	_dmindex:
  898                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  899  00001900  afbefffc	sw	-4(r29),r30; push fp
  900  00001904  001df020	add	r30,r0,r29; fp = sp
  901  00001908  afbffff8	sw	-8(r29),r31; push ret addr
  902  0000190c  2fbd0018	subui	r29,r29,#24; alloc local storage
  903  00001910  afa20000	sw	0(r29),r2
  904  00001914  54000000	nop
  905  00001918          	L46_LF2:
  906  00001918  8fc10000	lw	r1,(r30)
  907  0000191c  90220000	lbu	r2,(r1)
  908  00001920  64410000	snei	r1,r2,#0
  909  00001924  1420000c	bnez	r1,L48_LF2
  910  00001928  54000000	nop; delay slot nop
  911  0000192c  08000070	j	L47_LF2
  912  00001930  54000000	nop; delay slot nop
  913  00001934          	L48_LF2:
  914  00001934  8fc10004	lw	r1,4(r30)
  915  00001938  afc1fff4	sw	-12(r30),r1
  916  0000193c          	L49_LF2:
  917  0000193c  8fc1fff4	lw	r1,-12(r30)
  918  00001940  90220000	lbu	r2,(r1)
  919  00001944  64410000	snei	r1,r2,#0
  920  00001948  1420000c	bnez	r1,L52_LF2
  921  0000194c  54000000	nop; delay slot nop
  922  00001950  08000044	j	L50_LF2
  923  00001954  54000000	nop; delay slot nop
  924  00001958          	L52_LF2:
  925  00001958  8fc10000	lw	r1,(r30)
  926  0000195c  8fc2fff4	lw	r2,-12(r30)
  927  00001960  90210000	lbu	r1,(r1)
  928  00001964  90420000	lbu	r2,(r2)
  929  00001968  00220828	seq	r1,r1,r2
  930  0000196c  10200010	beqz	r1,L51_LF2
  931  00001970  54000000	nop; delay slot nop
  932  00001974  8fc10000	lw	r1,(r30)
  933  00001978  08000030	j	L45_LF2
  934  0000197c  54000000	nop; delay slot nop
  935  00001980          	L53_LF2:
  936  00001980          	L51_LF2:
  937  00001980  8fc2fff4	lw	r2,-12(r30)
  938  00001984  20410001	addi	r1,r2,#1
  939  00001988  00011020	add	r2,r0,r1
  940  0000198c  afc2fff4	sw	-12(r30),r2
  941  00001990  0bffffa8	j	L49_LF2
  942  00001994  54000000	nop; delay slot nop
  943  00001998          	L50_LF2:
  944  00001998  0bffff7c	j	L46_LF2
  945  0000199c  54000000	nop; delay slot nop
  946  000019a0          	L47_LF2:
  947  000019a0  20010000	addi	r1,r0,#0
  948  000019a4  08000004	j	L45_LF2
  949  000019a8  54000000	nop; delay slot nop
  950  000019ac          	L45_LF2:
  951  000019ac  8fa20000	lw	r2,0(r29)
  952  000019b0  8fdffff8	lw	r31,-8(r30)
  953  000019b4  001ee820	add	r29,r0,r30
  954  000019b8  8fdefffc	lw	r30,-4(r30)
  955  000019bc  4be00000	jr	r31
  956  000019c0  54000000	nop
  957  000019c4          	.endproc _dmindex
  958  000019c4          	.align 2
  959  000019c4          	.proc _dindex
  960  000019c4          	.global _dindex
  961  000019c4          	_dindex:
  962                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  963  000019c4  afbefffc	sw	-4(r29),r30; push fp
  964  000019c8  001df020	add	r30,r0,r29; fp = sp
  965  000019cc  afbffff8	sw	-8(r29),r31; push ret addr
  966  000019d0  2fbd0010	subui	r29,r29,#16; alloc local storage
  967  000019d4  afa20000	sw	0(r29),r2
  968  000019d8  54000000	nop
  969  000019dc          	L55_LF2:
  970  000019dc  8fc10000	lw	r1,(r30)
  971  000019e0  90220000	lbu	r2,(r1)
  972  000019e4  64410000	snei	r1,r2,#0
  973  000019e8  1420000c	bnez	r1,L57_LF2
  974  000019ec  54000000	nop; delay slot nop
  975  000019f0  08000040	j	L56_LF2
  976  000019f4  54000000	nop; delay slot nop
  977  000019f8          	L57_LF2:
  978  000019f8  8fc10000	lw	r1,(r30)
  979  000019fc  90220000	lbu	r2,(r1)
  980  00001a00  8fc10004	lw	r1,4(r30)
  981  00001a04  00411028	seq	r2,r2,r1
  982  00001a08  10400010	beqz	r2,L58_LF2
  983  00001a0c  54000000	nop; delay slot nop
  984  00001a10  8fc10000	lw	r1,(r30)
  985  00001a14  08000028	j	L54_LF2
  986  00001a18  54000000	nop; delay slot nop
  987  00001a1c          	L58_LF2:
  988  00001a1c  8fc20000	lw	r2,(r30)
  989  00001a20  20410001	addi	r1,r2,#1
  990  00001a24  00011020	add	r2,r0,r1
  991  00001a28  afc20000	sw	(r30),r2
  992  00001a2c  0bffffac	j	L55_LF2
  993  00001a30  54000000	nop; delay slot nop
  994  00001a34          	L56_LF2:
  995  00001a34  20010000	addi	r1,r0,#0
  996  00001a38  08000004	j	L54_LF2
  997  00001a3c  54000000	nop; delay slot nop
  998  00001a40          	L54_LF2:
  999  00001a40  8fa20000	lw	r2,0(r29)
 1000  00001a44  8fdffff8	lw	r31,-8(r30)
 1001  00001a48  001ee820	add	r29,r0,r30
 1002  00001a4c  8fdefffc	lw	r30,-4(r30)
 1003  00001a50  4be00000	jr	r31
 1004  00001a54  54000000	nop
 1005  00001a58          	.endproc _dindex
 1006  00001a58          	.align 2
 1007  00001a58          	.proc _ditoa
 1008  00001a58          	.global _ditoa
 1009  00001a58          	_ditoa:
 1010                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1011  00001a58  afbefffc	sw	-4(r29),r30; push fp
 1012  00001a5c  001df020	add	r30,r0,r29; fp = sp
 1013  00001a60  afbffff8	sw	-8(r29),r31; push ret addr
 1014  00001a64  2fbd0018	subui	r29,r29,#24; alloc local storage
 1015  00001a68  afa20000	sw	0(r29),r2
 1016  00001a6c  afa30004	sw	4(r29),r3
 1017  00001a70  8fc10000	lw	r1,(r30)
 1018  00001a74  68220000	slti	r2,r1,#0
 1019  00001a78  1040002c	beqz	r2,L60_LF2
 1020  00001a7c  54000000	nop; delay slot nop
 1021  00001a80  8fc10004	lw	r1,4(r30)
 1022  00001a84  20220001	addi	r2,r1,#1
 1023  00001a88  afc20004	sw	4(r30),r2
 1024  00001a8c  2002002d	addi	r2,r0,(#0x2d)&0xff
 1025  00001a90  a0220000	sb	(r1),r2
 1026  00001a94  8fc10000	lw	r1,(r30)
 1027  00001a98  00011022	sub	r2,r0,r1
 1028  00001a9c  afc20000	sw	(r30),r2
 1029  00001aa0  08000118	j	L61_LF2
 1030  00001aa4  54000000	nop; delay slot nop
 1031  00001aa8          	L60_LF2:
 1032  00001aa8  8fc10000	lw	r1,(r30)
 1033  00001aac  64220000	snei	r2,r1,#0
 1034  00001ab0  14400020	bnez	r2,L62_LF2
 1035  00001ab4  54000000	nop; delay slot nop
 1036  00001ab8  8fc10004	lw	r1,4(r30)
 1037  00001abc  20220001	addi	r2,r1,#1
 1038  00001ac0  afc20004	sw	4(r30),r2
 1039  00001ac4  20020030	addi	r2,r0,(#0x30)&0xff
 1040  00001ac8  a0220000	sb	(r1),r2
 1041  00001acc  080000ec	j	L61_LF2
 1042  00001ad0  54000000	nop; delay slot nop
 1043  00001ad4          	L62_LF2:
 1044  00001ad4  20010001	addi	r1,r0,#1
 1045  00001ad8  afc1fff4	sw	-12(r30),r1
 1046  00001adc          	L64_LF2:
 1047  00001adc  8fc1fff4	lw	r1,-12(r30)
 1048  00001ae0  8fc20000	lw	r2,(r30)
 1049  00001ae4  0022082c	sle	r1,r1,r2
 1050  00001ae8  1420000c	bnez	r1,L66_LF2
 1051  00001aec  54000000	nop; delay slot nop
 1052  00001af0  08000024	j	L65_LF2
 1053  00001af4  54000000	nop; delay slot nop
 1054  00001af8          	L67_LF2:
 1055  00001af8          	L66_LF2:
 1056  00001af8  8fc1fff4	lw	r1,-12(r30)
 1057  00001afc  00011820	add	r3,r0,r1
 1058  00001b00  50620002	slli	r2,r3,#0x2
 1059  00001b04  00411020	add	r2,r2,r1
 1060  00001b08  50410001	slli	r1,r2,#0x1
 1061  00001b0c  afc1fff4	sw	-12(r30),r1
 1062  00001b10  0bffffc8	j	L64_LF2
 1063  00001b14  54000000	nop; delay slot nop
 1064  00001b18          	L65_LF2:
 1065  00001b18  54000000	nop
 1066  00001b1c          	L68_LF2:
 1067  00001b1c  8fc1fff4	lw	r1,-12(r30)
 1068  00001b20  2002000a	addi	r2,r0,#10
 1069  00001b24  00200035	movi2fp	f0,r1
 1070  00001b28  00400835	movi2fp	f1,r2
 1071  00001b2c  0401000f	div	f0,f0,f1
 1072  00001b30  00000834	movfp2i	r1,f0
 1073  00001b34  afc1fff4	sw	-12(r30),r1
 1074  00001b38  8fc10004	lw	r1,4(r30)
 1075  00001b3c  20220001	addi	r2,r1,#1
 1076  00001b40  afc20004	sw	4(r30),r2
 1077  00001b44  8fc20000	lw	r2,(r30)
 1078  00001b48  8fc3fff4	lw	r3,-12(r30)
 1079  00001b4c  00400035	movi2fp	f0,r2
 1080  00001b50  00600835	movi2fp	f1,r3
 1081  00001b54  0401000f	div	f0,f0,f1
 1082  00001b58  00001034	movfp2i	r2,f0
 1083  00001b5c  00021820	add	r3,r0,r2
 1084  00001b60  20620030	addi	r2,r3,#48
 1085  00001b64  a0220000	sb	(r1),r2
 1086  00001b68  8fc10000	lw	r1,(r30)
 1087  00001b6c  8fc3fff4	lw	r3,-12(r30)
 1088  00001b70  00200035	movi2fp	f0,r1
 1089  00001b74  00600835	movi2fp	f1,r3
 1090  00001b78  0401000f	div	f0,f0,f1
 1091  00001b7c  00001034	movfp2i	r2,f0
 1092  00001b80  8fc3fff4	lw	r3,-12(r30)
 1093  00001b84  00400035	movi2fp	f0,r2
 1094  00001b88  00600835	movi2fp	f1,r3
 1095  00001b8c  0401000e	mult	f0,f0,f1
 1096  00001b90  00001034	movfp2i	r2,f0
 1097  00001b94  00220822	sub	r1,r1,r2
 1098  00001b98  afc10000	sw	(r30),r1
 1099  00001b9c          	L70_LF2:
 1100  00001b9c  8fc1fff4	lw	r1,-12(r30)
 1101  00001ba0  6c220001	sgti	r2,r1,#1
 1102  00001ba4  1440000c	bnez	r2,L71_LF2
 1103  00001ba8  54000000	nop; delay slot nop
 1104  00001bac  0800000c	j	L61_LF2
 1105  00001bb0  54000000	nop; delay slot nop
 1106  00001bb4          	L71_LF2:
 1107  00001bb4  0bffff64	j	L68_LF2
 1108  00001bb8  54000000	nop; delay slot nop
 1109  00001bbc          	L69_LF2:
 1110  00001bbc          	L63_LF2:
 1111  00001bbc          	L61_LF2:
 1112  00001bbc  8fc10004	lw	r1,4(r30)
 1113  00001bc0  20020000	addi	r2,r0,(#0x0)&0xff
 1114  00001bc4  a0220000	sb	(r1),r2
 1115  00001bc8          	L59_LF2:
 1116  00001bc8  8fa20000	lw	r2,0(r29)
 1117  00001bcc  8fa30004	lw	r3,4(r29)
 1118  00001bd0  8fdffff8	lw	r31,-8(r30)
 1119  00001bd4  001ee820	add	r29,r0,r30
 1120  00001bd8  8fdefffc	lw	r30,-4(r30)
 1121  00001bdc  4be00000	jr	r31
 1122  00001be0  54000000	nop
 1123  00001be4          	.endproc _ditoa
 1124  00001be4          	.align 2
 1125  00001be4          	.proc _dstrtol
 1126  00001be4          	.global _dstrtol
 1127  00001be4          	_dstrtol:
 1128                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1129  00001be4  afbefffc	sw	-4(r29),r30; push fp
 1130  00001be8  001df020	add	r30,r0,r29; fp = sp
 1131  00001bec  afbffff8	sw	-8(r29),r31; push ret addr
 1132  00001bf0  2fbd0020	subui	r29,r29,#32; alloc local storage
 1133  00001bf4  afa20000	sw	0(r29),r2
 1134  00001bf8  20010000	addi	r1,r0,#0
 1135  00001bfc  afc1fff4	sw	-12(r30),r1
 1136  00001c00          	L73_LF2:
 1137  00001c00  8fc10000	lw	r1,(r30)
 1138  00001c04  90220000	lbu	r2,(r1)
 1139  00001c08  60410020	seqi	r1,r2,#32
 1140  00001c0c  14200034	bnez	r1,L75_LF2
 1141  00001c10  54000000	nop; delay slot nop
 1142  00001c14  8fc10000	lw	r1,(r30)
 1143  00001c18  90220000	lbu	r2,(r1)
 1144  00001c1c  60410009	seqi	r1,r2,#9
 1145  00001c20  14200020	bnez	r1,L75_LF2
 1146  00001c24  54000000	nop; delay slot nop
 1147  00001c28  8fc10000	lw	r1,(r30)
 1148  00001c2c  90220000	lbu	r2,(r1)
 1149  00001c30  6041000a	seqi	r1,r2,#10
 1150  00001c34  1420000c	bnez	r1,L75_LF2
 1151  00001c38  54000000	nop; delay slot nop
 1152  00001c3c  0800001c	j	L74_LF2
 1153  00001c40  54000000	nop; delay slot nop
 1154  00001c44          	L75_LF2:
 1155  00001c44  8fc20000	lw	r2,(r30)
 1156  00001c48  20410001	addi	r1,r2,#1
 1157  00001c4c  00011020	add	r2,r0,r1
 1158  00001c50  afc20000	sw	(r30),r2
 1159  00001c54  0bffffa8	j	L73_LF2
 1160  00001c58  54000000	nop; delay slot nop
 1161  00001c5c          	L74_LF2:
 1162  00001c5c  8fc10004	lw	r1,4(r30)
 1163  00001c60  64220000	snei	r2,r1,#0
 1164  00001c64  10400010	beqz	r2,L76_LF2
 1165  00001c68  54000000	nop; delay slot nop
 1166  00001c6c  8fc10004	lw	r1,4(r30)
 1167  00001c70  8fc20000	lw	r2,(r30)
 1168  00001c74  ac220000	sw	(r1),r2
 1169  00001c78          	L76_LF2:
 1170  00001c78  8fc10000	lw	r1,(r30)
 1171  00001c7c  90220000	lbu	r2,(r1)
 1172  00001c80  64410000	snei	r1,r2,#0
 1173  00001c84  14200010	bnez	r1,L77_LF2
 1174  00001c88  54000000	nop; delay slot nop
 1175  00001c8c  8fc1fff4	lw	r1,-12(r30)
 1176  00001c90  08000294	j	L72_LF2
 1177  00001c94  54000000	nop; delay slot nop
 1178  00001c98          	L77_LF2:
 1179  00001c98  8fc10000	lw	r1,(r30)
 1180  00001c9c  90220000	lbu	r2,(r1)
 1181  00001ca0  6041002d	seqi	r1,r2,#45
 1182  00001ca4  10200024	beqz	r1,L78_LF2
 1183  00001ca8  54000000	nop; delay slot nop
 1184  00001cac  2001ffff	addi	r1,r0,#-1
 1185  00001cb0  afc1ffec	sw	-20(r30),r1
 1186  00001cb4  8fc20000	lw	r2,(r30)
 1187  00001cb8  20410001	addi	r1,r2,#1
 1188  00001cbc  00011020	add	r2,r0,r1
 1189  00001cc0  afc20000	sw	(r30),r2
 1190  00001cc4  0800000c	j	L79_LF2
 1191  00001cc8  54000000	nop; delay slot nop
 1192  00001ccc          	L78_LF2:
 1193  00001ccc  20010001	addi	r1,r0,#1
 1194  00001cd0  afc1ffec	sw	-20(r30),r1
 1195  00001cd4          	L79_LF2:
 1196  00001cd4  8fc10008	lw	r1,8(r30)
 1197  00001cd8  64220000	snei	r2,r1,#0
 1198  00001cdc  14400090	bnez	r2,L80_LF2
 1199  00001ce0  54000000	nop; delay slot nop
 1200  00001ce4  8fc10000	lw	r1,(r30)
 1201  00001ce8  90220000	lbu	r2,(r1)
 1202  00001cec  60410030	seqi	r1,r2,#48
 1203  00001cf0  10200074	beqz	r1,L81_LF2
 1204  00001cf4  54000000	nop; delay slot nop
 1205  00001cf8  8fc20000	lw	r2,(r30)
 1206  00001cfc  20410001	addi	r1,r2,#1
 1207  00001d00  00011020	add	r2,r0,r1
 1208  00001d04  afc20000	sw	(r30),r2
 1209  00001d08  8fc10000	lw	r1,(r30)
 1210  00001d0c  90220000	lbu	r2,(r1)
 1211  00001d10  60410078	seqi	r1,r2,#120
 1212  00001d14  14200020	bnez	r1,L83_LF2
 1213  00001d18  54000000	nop; delay slot nop
 1214  00001d1c  8fc10000	lw	r1,(r30)
 1215  00001d20  90220000	lbu	r2,(r1)
 1216  00001d24  60410058	seqi	r1,r2,#88
 1217  00001d28  1420000c	bnez	r1,L83_LF2
 1218  00001d2c  54000000	nop; delay slot nop
 1219  00001d30  08000024	j	L82_LF2
 1220  00001d34  54000000	nop; delay slot nop
 1221  00001d38          	L83_LF2:
 1222  00001d38  20010010	addi	r1,r0,#16
 1223  00001d3c  afc10008	sw	8(r30),r1
 1224  00001d40  8fc20000	lw	r2,(r30)
 1225  00001d44  20410001	addi	r1,r2,#1
 1226  00001d48  00011020	add	r2,r0,r1
 1227  00001d4c  afc20000	sw	(r30),r2
 1228  00001d50  0800000c	j	L84_LF2
 1229  00001d54  54000000	nop; delay slot nop
 1230  00001d58          	L82_LF2:
 1231  00001d58  20010008	addi	r1,r0,#8
 1232  00001d5c  afc10008	sw	8(r30),r1
 1233  00001d60          	L84_LF2:
 1234  00001d60  0800000c	j	L80_LF2
 1235  00001d64  54000000	nop; delay slot nop
 1236  00001d68          	L81_LF2:
 1237  00001d68  2001000a	addi	r1,r0,#10
 1238  00001d6c  afc10008	sw	8(r30),r1
 1239  00001d70          	L85_LF2:
 1240  00001d70          	L80_LF2:
 1241  00001d70  8fc10008	lw	r1,8(r30)
 1242  00001d74  70220000	slei	r2,r1,#0
 1243  00001d78  1440001c	bnez	r2,L87_LF2
 1244  00001d7c  54000000	nop; delay slot nop
 1245  00001d80  8fc10008	lw	r1,8(r30)
 1246  00001d84  6c220010	sgti	r2,r1,#16
 1247  00001d88  1440000c	bnez	r2,L87_LF2
 1248  00001d8c  54000000	nop; delay slot nop
 1249  00001d90  08000010	j	L86_LF2
 1250  00001d94  54000000	nop; delay slot nop
 1251  00001d98          	L87_LF2:
 1252  00001d98  8fc1fff4	lw	r1,-12(r30)
 1253  00001d9c  08000188	j	L72_LF2
 1254  00001da0  54000000	nop; delay slot nop
 1255  00001da4          	L86_LF2:
 1256  00001da4  54000000	nop
 1257  00001da8          	L88_LF2:
 1258  00001da8  8fc10000	lw	r1,(r30)
 1259  00001dac  90220000	lbu	r2,(r1)
 1260  00001db0  6c41002f	sgtui	r1,r2,#47
 1261  00001db4  10200030	beqz	r1,L91_LF2
 1262  00001db8  54000000	nop; delay slot nop
 1263  00001dbc  8fc10000	lw	r1,(r30)
 1264  00001dc0  90220000	lbu	r2,(r1)
 1265  00001dc4  70410039	sleui	r1,r2,#57
 1266  00001dc8  1020001c	beqz	r1,L91_LF2
 1267  00001dcc  54000000	nop; delay slot nop
 1268  00001dd0  8fc10000	lw	r1,(r30)
 1269  00001dd4  90220000	lbu	r2,(r1)
 1270  00001dd8  2041ffd0	addi	r1,r2,#-48
 1271  00001ddc  afc1fff0	sw	-16(r30),r1
 1272  00001de0  0800008c	j	L92_LF2
 1273  00001de4  54000000	nop; delay slot nop
 1274  00001de8          	L91_LF2:
 1275  00001de8  8fc10000	lw	r1,(r30)
 1276  00001dec  90220000	lbu	r2,(r1)
 1277  00001df0  6c410060	sgtui	r1,r2,#96
 1278  00001df4  10200030	beqz	r1,L93_LF2
 1279  00001df8  54000000	nop; delay slot nop
 1280  00001dfc  8fc10000	lw	r1,(r30)
 1281  00001e00  90220000	lbu	r2,(r1)
 1282  00001e04  7041007a	sleui	r1,r2,#122
 1283  00001e08  1020001c	beqz	r1,L93_LF2
 1284  00001e0c  54000000	nop; delay slot nop
 1285  00001e10  8fc10000	lw	r1,(r30)
 1286  00001e14  90220000	lbu	r2,(r1)
 1287  00001e18  2041ffa9	addi	r1,r2,#-87
 1288  00001e1c  afc1fff0	sw	-16(r30),r1
 1289  00001e20  0800004c	j	L92_LF2
 1290  00001e24  54000000	nop; delay slot nop
 1291  00001e28          	L93_LF2:
 1292  00001e28  8fc10000	lw	r1,(r30)
 1293  00001e2c  90220000	lbu	r2,(r1)
 1294  00001e30  6c410040	sgtui	r1,r2,#64
 1295  00001e34  10200030	beqz	r1,L95_LF2
 1296  00001e38  54000000	nop; delay slot nop
 1297  00001e3c  8fc10000	lw	r1,(r30)
 1298  00001e40  90220000	lbu	r2,(r1)
 1299  00001e44  7041005a	sleui	r1,r2,#90
 1300  00001e48  1020001c	beqz	r1,L95_LF2
 1301  00001e4c  54000000	nop; delay slot nop
 1302  00001e50  8fc10000	lw	r1,(r30)
 1303  00001e54  90220000	lbu	r2,(r1)
 1304  00001e58  2041ffc9	addi	r1,r2,#-55
 1305  00001e5c  afc1fff0	sw	-16(r30),r1
 1306  00001e60  0800000c	j	L92_LF2
 1307  00001e64  54000000	nop; delay slot nop
 1308  00001e68          	L95_LF2:
 1309  00001e68  200103e8	addi	r1,r0,#1000
 1310  00001e6c  afc1fff0	sw	-16(r30),r1
 1311  00001e70          	L96_LF2:
 1312  00001e70          	L94_LF2:
 1313  00001e70          	L92_LF2:
 1314  00001e70  8fc1fff0	lw	r1,-16(r30)
 1315  00001e74  8fc20008	lw	r2,8(r30)
 1316  00001e78  0022082a	slt	r1,r1,r2
 1317  00001e7c  10200040	beqz	r1,L90_LF2
 1318  00001e80  54000000	nop; delay slot nop
 1319  00001e84  8fc1fff4	lw	r1,-12(r30)
 1320  00001e88  8fc20008	lw	r2,8(r30)
 1321  00001e8c  00200035	movi2fp	f0,r1
 1322  00001e90  00400835	movi2fp	f1,r2
 1323  00001e94  0401000e	mult	f0,f0,f1
 1324  00001e98  00000834	movfp2i	r1,f0
 1325  00001e9c  afc1fff4	sw	-12(r30),r1
 1326  00001ea0  8fc1fff4	lw	r1,-12(r30)
 1327  00001ea4  8fc2fff0	lw	r2,-16(r30)
 1328  00001ea8  00220820	add	r1,r1,r2
 1329  00001eac  afc1fff4	sw	-12(r30),r1
 1330  00001eb0  8fc20000	lw	r2,(r30)
 1331  00001eb4  20410001	addi	r1,r2,#1
 1332  00001eb8  00011020	add	r2,r0,r1
 1333  00001ebc  afc20000	sw	(r30),r2
 1334  00001ec0          	L97_LF2:
 1335  00001ec0          	L90_LF2:
 1336  00001ec0  8fc1fff0	lw	r1,-16(r30)
 1337  00001ec4  8fc20008	lw	r2,8(r30)
 1338  00001ec8  0022082a	slt	r1,r1,r2
 1339  00001ecc  1420000c	bnez	r1,L98_LF2
 1340  00001ed0  54000000	nop; delay slot nop
 1341  00001ed4  0800000c	j	L89_LF2
 1342  00001ed8  54000000	nop; delay slot nop
 1343  00001edc          	L98_LF2:
 1344  00001edc  0bfffec8	j	L88_LF2
 1345  00001ee0  54000000	nop; delay slot nop
 1346  00001ee4          	L89_LF2:
 1347  00001ee4  8fc10004	lw	r1,4(r30)
 1348  00001ee8  64220000	snei	r2,r1,#0
 1349  00001eec  10400010	beqz	r2,L99_LF2
 1350  00001ef0  54000000	nop; delay slot nop
 1351  00001ef4  8fc10004	lw	r1,4(r30)
 1352  00001ef8  8fc20000	lw	r2,(r30)
 1353  00001efc  ac220000	sw	(r1),r2
 1354  00001f00          	L99_LF2:
 1355  00001f00  8fc1fff4	lw	r1,-12(r30)
 1356  00001f04  8fc2ffec	lw	r2,-20(r30)
 1357  00001f08  00200035	movi2fp	f0,r1
 1358  00001f0c  00400835	movi2fp	f1,r2
 1359  00001f10  0401000e	mult	f0,f0,f1
 1360  00001f14  00000834	movfp2i	r1,f0
 1361  00001f18  afc1fff4	sw	-12(r30),r1
 1362  00001f1c  8fc1fff4	lw	r1,-12(r30)
 1363  00001f20  08000004	j	L72_LF2
 1364  00001f24  54000000	nop; delay slot nop
 1365  00001f28          	L72_LF2:
 1366  00001f28  8fa20000	lw	r2,0(r29)
 1367  00001f2c  8fdffff8	lw	r31,-8(r30)
 1368  00001f30  001ee820	add	r29,r0,r30
 1369  00001f34  8fdefffc	lw	r30,-4(r30)
 1370  00001f38  4be00000	jr	r31
 1371  00001f3c  54000000	nop
 1372  00001f40          	.endproc _dstrtol
 1373  00001f40          	.align 2
 1374  00001f40          	.proc _bcopy
 1375  00001f40          	.global _bcopy
 1376  00001f40          	_bcopy:
 1377                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1378  00001f40  afbefffc	sw	-4(r29),r30; push fp
 1379  00001f44  001df020	add	r30,r0,r29; fp = sp
 1380  00001f48  afbffff8	sw	-8(r29),r31; push ret addr
 1381  00001f4c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1382  00001f50  afa20000	sw	0(r29),r2
 1383  00001f54  afa30004	sw	4(r29),r3
 1384  00001f58  54000000	nop
 1385  00001f5c          	L101_LF2:
 1386  00001f5c  8fc10008	lw	r1,8(r30)
 1387  00001f60  2022ffff	addi	r2,r1,#-1
 1388  00001f64  afc20008	sw	8(r30),r2
 1389  00001f68  6c210000	sgti	r1,r1,#0
 1390  00001f6c  1420000c	bnez	r1,L103_LF2
 1391  00001f70  54000000	nop; delay slot nop
 1392  00001f74  0800002c	j	L102_LF2
 1393  00001f78  54000000	nop; delay slot nop
 1394  00001f7c          	L103_LF2:
 1395  00001f7c  8fc10004	lw	r1,4(r30)
 1396  00001f80  20220001	addi	r2,r1,#1
 1397  00001f84  afc20004	sw	4(r30),r2
 1398  00001f88  8fc20000	lw	r2,(r30)
 1399  00001f8c  20430001	addi	r3,r2,#1
 1400  00001f90  afc30000	sw	(r30),r3
 1401  00001f94  80420000	lb	r2,(r2)
 1402  00001f98  a0220000	sb	(r1),r2
 1403  00001f9c  0bffffbc	j	L101_LF2
 1404  00001fa0  54000000	nop; delay slot nop
 1405  00001fa4          	L102_LF2:
 1406  00001fa4          	L100_LF2:
 1407  00001fa4  8fa20000	lw	r2,0(r29)
 1408  00001fa8  8fa30004	lw	r3,4(r29)
 1409  00001fac  8fdffff8	lw	r31,-8(r30)
 1410  00001fb0  001ee820	add	r29,r0,r30
 1411  00001fb4  8fdefffc	lw	r30,-4(r30)
 1412  00001fb8  4be00000	jr	r31
 1413  00001fbc  54000000	nop
 1414  00001fc0          	.endproc _bcopy
 1415  00001fc0          	.align 2
 1416  00001fc0          	.proc _bzero
 1417  00001fc0          	.global _bzero
 1418  00001fc0          	_bzero:
 1419                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1420  00001fc0  afbefffc	sw	-4(r29),r30; push fp
 1421  00001fc4  001df020	add	r30,r0,r29; fp = sp
 1422  00001fc8  afbffff8	sw	-8(r29),r31; push ret addr
 1423  00001fcc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1424  00001fd0  afa20000	sw	0(r29),r2
 1425  00001fd4  54000000	nop
 1426  00001fd8          	L105_LF2:
 1427  00001fd8  8fc10004	lw	r1,4(r30)
 1428  00001fdc  2022ffff	addi	r2,r1,#-1
 1429  00001fe0  afc20004	sw	4(r30),r2
 1430  00001fe4  6c210000	sgti	r1,r1,#0
 1431  00001fe8  1420000c	bnez	r1,L107_LF2
 1432  00001fec  54000000	nop; delay slot nop
 1433  00001ff0  08000020	j	L106_LF2
 1434  00001ff4  54000000	nop; delay slot nop
 1435  00001ff8          	L107_LF2:
 1436  00001ff8  8fc10000	lw	r1,(r30)
 1437  00001ffc  20220001	addi	r2,r1,#1
 1438  00002000  afc20000	sw	(r30),r2
 1439  00002004  20020000	addi	r2,r0,(#0x0)&0xff
 1440  00002008  a0220000	sb	(r1),r2
 1441  0000200c  0bffffc8	j	L105_LF2
 1442  00002010  54000000	nop; delay slot nop
 1443  00002014          	L106_LF2:
 1444  00002014          	L104_LF2:
 1445  00002014  8fa20000	lw	r2,0(r29)
 1446  00002018  8fdffff8	lw	r31,-8(r30)
 1447  0000201c  001ee820	add	r29,r0,r30
 1448  00002020  8fdefffc	lw	r30,-4(r30)
 1449  00002024  4be00000	jr	r31
 1450  00002028  54000000	nop
 1451  0000202c          	.endproc _bzero
 1452  0000202c          	.align 2
 1453  0000202c          	.proc _min
 1454  0000202c          	.global _min
 1455  0000202c          	_min:
 1456                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1457  0000202c  afbefffc	sw	-4(r29),r30; push fp
 1458  00002030  001df020	add	r30,r0,r29; fp = sp
 1459  00002034  afbffff8	sw	-8(r29),r31; push ret addr
 1460  00002038  2fbd0010	subui	r29,r29,#16; alloc local storage
 1461  0000203c  afa20000	sw	0(r29),r2
 1462  00002040  afa30004	sw	4(r29),r3
 1463  00002044  8fc10000	lw	r1,(r30)
 1464  00002048  8fc20004	lw	r2,4(r30)
 1465  0000204c  0022182c	sle	r3,r1,r2
 1466  00002050  14600008	bnez	r3,L109_LF2
 1467  00002054  54000000	nop; delay slot nop
 1468  00002058  8fc10004	lw	r1,4(r30)
 1469  0000205c          	L109_LF2:
 1470  0000205c  08000004	j	L108_LF2
 1471  00002060  54000000	nop; delay slot nop
 1472  00002064          	L108_LF2:
 1473  00002064  8fa20000	lw	r2,0(r29)
 1474  00002068  8fa30004	lw	r3,4(r29)
 1475  0000206c  8fdffff8	lw	r31,-8(r30)
 1476  00002070  001ee820	add	r29,r0,r30
 1477  00002074  8fdefffc	lw	r30,-4(r30)
 1478  00002078  4be00000	jr	r31
 1479  0000207c  54000000	nop
 1480  00002080          	.endproc _min
 1481  00002080          	.align 2
 1482  00002080          	.proc _max
 1483  00002080          	.global _max
 1484  00002080          	_max:
 1485                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1486  00002080  afbefffc	sw	-4(r29),r30; push fp
 1487  00002084  001df020	add	r30,r0,r29; fp = sp
 1488  00002088  afbffff8	sw	-8(r29),r31; push ret addr
 1489  0000208c  2fbd0010	subui	r29,r29,#16; alloc local storage
 1490  00002090  afa20000	sw	0(r29),r2
 1491  00002094  afa30004	sw	4(r29),r3
 1492  00002098  8fc10000	lw	r1,(r30)
 1493  0000209c  8fc20004	lw	r2,4(r30)
 1494  000020a0  0022182d	sge	r3,r1,r2
 1495  000020a4  14600008	bnez	r3,L111_LF2
 1496  000020a8  54000000	nop; delay slot nop
 1497  000020ac  8fc10004	lw	r1,4(r30)
 1498  000020b0          	L111_LF2:
 1499  000020b0  08000004	j	L110_LF2
 1500  000020b4  54000000	nop; delay slot nop
 1501  000020b8          	L110_LF2:
 1502  000020b8  8fa20000	lw	r2,0(r29)
 1503  000020bc  8fa30004	lw	r3,4(r29)
 1504  000020c0  8fdffff8	lw	r31,-8(r30)
 1505  000020c4  001ee820	add	r29,r0,r30
 1506  000020c8  8fdefffc	lw	r30,-4(r30)
 1507  000020cc  4be00000	jr	r31
 1508  000020d0  54000000	nop
 1509  000020d4          	.endproc _max
 1510                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1511                      ;;;
 1512                      ;;; Most of the traps are called in files from libtraps.
 1515  000020d4          	.align 2
 1516  000020d4          	.proc _exit
 1517  000020d4          	.global _exit
 1518  000020d4          	_exit:
 1519  000020d4  44000300	trap	#0x300
 1520  000020d8  4be00000	jr	r31
 1521  000020dc  54000000	nop
 1522  000020e0          	.endproc _exit
 1524                      ; for the benefit of gcc.
 1525  000020e0          	.proc ___main
 1526  000020e0          	.global ___main
 1527  000020e0          	___main:
 1528  000020e0  4be00000	jr	r31
 1529  000020e4  54000000	nop
 1530  000020e8          	.endproc ___main
 1531  000020e8          	.text
 1532  000020e8          	.global _etext
 1533  000020e8          	_etext:
 1534  000020e8          	.align 3
 1535  000020e8          	.data
 1536  00003079          	.global _edata
 1537  00003079          	_edata:
