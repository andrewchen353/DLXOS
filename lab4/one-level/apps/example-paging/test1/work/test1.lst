 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 446
    4                      ; Text size: 4320
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  2d2d2d2d	.ascii "--------------------Running test 1.0 (accessing large_data) ----------"
   82  00003004  2d2d2d2d	
   82  00003008  2d2d2d2d	
   82  0000300c  2d2d2d2d	
   82  00003010  2d2d2d2d	
   82  00003014  52756e6e	
   82  00003018  696e6720	
   82  0000301c  74657374	
   82  00003020  20312e30	
   82  00003024  20286163	
   82  00003028  63657373	
   82  0000302c  696e6720	
   82  00003030  6c617267	
   82  00003034  655f6461	
   82  00003038  74612920	
   82  0000303c  2d2d2d2d	
   82  00003040  2d2d2d2d	
   82  00003044  2d2d    	
   83  00003046  2d2d2d2d	.ascii "-----------\n\000"
   83  0000304a  2d2d2d2d	
   83  0000304e  2d2d2d0a	
   83  00003052  00      	
   84  00003053          	.align 2
   85  00003054          	LC1_LF0:
   86  00003054  6c617267	.ascii "large_data[1000 * 256 - 1] = %d\n\000"
   86  00003058  655f6461	
   86  0000305c  74615b31	
   86  00003060  30303020	
   86  00003064  2a203235	
   86  00003068  36202d20	
   86  0000306c  315d203d	
   86  00003070  2025640a	
   86  00003074  00      	
   87  00003075          	.align 2
   88  00003078          	LC2_LF0:
   89  00003078  2d2d2d2d	.ascii "--------------------End test 1.1 (successful output: output = 17 ) ---"
   89  0000307c  2d2d2d2d	
   89  00003080  2d2d2d2d	
   89  00003084  2d2d2d2d	
   89  00003088  2d2d2d2d	
   89  0000308c  456e6420	
   89  00003090  74657374	
   89  00003094  20312e31	
   89  00003098  20287375	
   89  0000309c  63636573	
   89  000030a0  7366756c	
   89  000030a4  206f7574	
   89  000030a8  7075743a	
   89  000030ac  206f7574	
   89  000030b0  70757420	
   89  000030b4  3d203137	
   89  000030b8  2029202d	
   89  000030bc  2d2d    	
   90  000030be  2d2d2d2d	.ascii "------------------\n\n\000"
   90  000030c2  2d2d2d2d	
   90  000030c6  2d2d2d2d	
   90  000030ca  2d2d2d2d	
   90  000030ce  2d2d0a0a	
   90  000030d2  00      	
   91  000030d3          	.align 2
   92  000030d4          	LC3_LF0:
   93  000030d4  2d2d2d2d	.ascii "--------------------Running test 1.2 (accessing large_data beyond size"
   93  000030d8  2d2d2d2d	
   93  000030dc  2d2d2d2d	
   93  000030e0  2d2d2d2d	
   93  000030e4  2d2d2d2d	
   93  000030e8  52756e6e	
   93  000030ec  696e6720	
   93  000030f0  74657374	
   93  000030f4  20312e32	
   93  000030f8  20286163	
   93  000030fc  63657373	
   93  00003100  696e6720	
   93  00003104  6c617267	
   93  00003108  655f6461	
   93  0000310c  74612062	
   93  00003110  65796f6e	
   93  00003114  64207369	
   93  00003118  7a65    	
   94  0000311a  29202d2d	.ascii ") ---------------------\n\000"
   94  0000311e  2d2d2d2d	
   94  00003122  2d2d2d2d	
   94  00003126  2d2d2d2d	
   94  0000312a  2d2d2d2d	
   94  0000312e  2d2d2d0a	
   94  00003132  00      	
   95  00003133          	.align 2
   96  00003134          	LC4_LF0:
   97  00003134  6c617267	.ascii "large_data[1000 * 256] = %d\n\000"
   97  00003138  655f6461	
   97  0000313c  74615b31	
   97  00003140  30303020	
   97  00003144  2a203235	
   97  00003148  365d203d	
   97  0000314c  2025640a	
   97  00003150  00      	
   98  00003151          	.align 2
   99  00003154          	LC5_LF0:
  100  00003154  2d2d2d2d	.ascii "--------------------End test 1.2 (Your code is incorrect if you see th"
  100  00003158  2d2d2d2d	
  100  0000315c  2d2d2d2d	
  100  00003160  2d2d2d2d	
  100  00003164  2d2d2d2d	
  100  00003168  456e6420	
  100  0000316c  74657374	
  100  00003170  20312e32	
  100  00003174  2028596f	
  100  00003178  75722063	
  100  0000317c  6f646520	
  100  00003180  69732069	
  100  00003184  6e636f72	
  100  00003188  72656374	
  100  0000318c  20696620	
  100  00003190  796f7520	
  100  00003194  73656520	
  100  00003198  7468    	
  101  0000319a  6973206c	.ascii "is line :-)) ---------------------\n\000"
  101  0000319e  696e6520	
  101  000031a2  3a2d2929	
  101  000031a6  202d2d2d	
  101  000031aa  2d2d2d2d	
  101  000031ae  2d2d2d2d	
  101  000031b2  2d2d2d2d	
  101  000031b6  2d2d2d2d	
  101  000031ba  2d2d0a00	
  102  000031be          	.text
  103  000010d4          	.align 2
  104  000010d4          	.proc _main
  105  000010d4          	.global _main
  106  000010d4          	_main:
  107                      ;  Function 'main'; 1024000 bytes of locals, 0 regs to save.
  108  000010d4  afbefffc	sw	-4(r29),r30; push fp
  109  000010d8  001df020	add	r30,r0,r29; fp = sp
  110  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  111  000010e0  3c01000f	lhi	r1,#15; alloc local storage = 1024008
  112  000010e4  2421a008	addui	r1,r1,#0xa008
  113  000010e8  03a1e823	subu	r29,r29,r1
  114  000010ec  8fc20004	lw	r2,4(r30)
  115  000010f0  0c000fe4	jal	___main
  116  000010f4  54000000	nop; not filled.
  117  000010f8  23bdfff0	addi	r29,r29,#-16
  118  000010fc  8c420004	lw	r2,4(r2)
  119  00001100  afa20000	sw	(r29),r2
  120  00001104  20030000	addi	r3,r0,#0
  121  00001108  afa30004	sw	4(r29),r3
  122  0000110c  2003000a	addi	r3,r0,#10
  123  00001110  afa30008	sw	8(r29),r3
  124  00001114  0c000ac4	jal	_dstrtol
  125  00001118  54000000	nop; not filled.
  126  0000111c  00011020	add	r2,r0,r1
  127  00001120  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
  128  00001124  24633000	addui	r3,r3,(LC0_LF0)&0xffff
  129  00001128  afa30000	sw	(r29),r3
  130  0000112c  0c0000e8	jal	_Printf
  131  00001130  54000000	nop; not filled.
  132  00001134  20030011	addi	r3,r0,#17
  133  00001138  afc3fff4	sw	-12(r30),r3
  134  0000113c  3c030000	lhi	r3,((LC1_LF0)>>16)&0xffff
  135  00001140  24633054	addui	r3,r3,(LC1_LF0)&0xffff
  136  00001144  afa30000	sw	(r29),r3
  137  00001148  8fc1fff4	lw	r1,-12(r30)
  138  0000114c  afa10004	sw	4(r29),r1
  139  00001150  0c0000c4	jal	_Printf
  140  00001154  54000000	nop; not filled.
  141  00001158  3c030000	lhi	r3,((LC2_LF0)>>16)&0xffff
  142  0000115c  24633078	addui	r3,r3,(LC2_LF0)&0xffff
  143  00001160  afa30000	sw	(r29),r3
  144  00001164  0c0000b0	jal	_Printf
  145  00001168  54000000	nop; not filled.
  146  0000116c  3c030000	lhi	r3,((LC3_LF0)>>16)&0xffff
  147  00001170  246330d4	addui	r3,r3,(LC3_LF0)&0xffff
  148  00001174  afa30000	sw	(r29),r3
  149  00001178  0c00009c	jal	_Printf
  150  0000117c  54000000	nop; not filled.
  151  00001180  afa20000	sw	(r29),r2
  152  00001184  0c0000e4	jal	_sem_signal
  153  00001188  54000000	nop; not filled.
  154  0000118c  20030012	addi	r3,r0,#18
  155  00001190  afc303f8	sw	1016(r30),r3
  156  00001194  3c030000	lhi	r3,((LC4_LF0)>>16)&0xffff
  157  00001198  24633134	addui	r3,r3,(LC4_LF0)&0xffff
  158  0000119c  afa30000	sw	(r29),r3
  159  000011a0  8fc1fff8	lw	r1,-8(r30)
  160  000011a4  afa10004	sw	4(r29),r1
  161  000011a8  0c00006c	jal	_Printf
  162  000011ac  54000000	nop; not filled.
  163  000011b0  3c030000	lhi	r3,((LC5_LF0)>>16)&0xffff
  164  000011b4  24633154	addui	r3,r3,(LC5_LF0)&0xffff
  165  000011b8  afa30000	sw	(r29),r3
  166  000011bc  0c000058	jal	_Printf
  167  000011c0  54000000	nop; not filled.
  168  000011c4  23bd0010	addi	r29,r29,#16
  169  000011c8  0c000f00	jal	_exit
  170  000011cc  54000000	nop
  171  000011d0          	.endproc _main
  172                      ;;;
  173                      ;;; Stub functions for DLX traps.
  174                      ;;;
  175                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  176                      ;;;
  177                      ;;; The traps such as Open and Close
  178                      ;;; (note the capital letters) are for use by user programs.  The traps
  179                      ;;; with names such as open and close (lower case) are for use by the OS.
  180                      ;;;
  183  000011d0          	.align 2
  185                      ;;; The following are the traps to be used by user-level programs
  186                      ;;;
  188  000011d0          	.align 2
  189  000011d0          	.proc _Open
  190  000011d0          	.global _Open
  191  000011d0          	_Open:
  192                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  193                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  194                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  195  000011d0  44000213	trap	#0x213
  196  000011d4  4be00000	jr	r31
  197  000011d8  54000000	nop
  198  000011dc          	.endproc _Open
  200  000011dc          	.proc _Close
  201  000011dc          	.global _Close
  202  000011dc          	_Close:
  203  000011dc  44000214	trap	#0x214
  204  000011e0  4be00000	jr	r31
  205  000011e4  54000000	nop
  206  000011e8          	.endproc _Close
  208  000011e8          	.proc _Read
  209  000011e8          	.global _Read
  210  000011e8          	_Read:
  211  000011e8  44000210	trap	#0x210
  212  000011ec  4be00000	jr	r31
  213  000011f0  54000000	nop
  214  000011f4          	.endproc _Read
  216  000011f4          	.proc _Write
  217  000011f4          	.global _Write
  218  000011f4          	_Write:
  219  000011f4  44000211	trap	#0x211
  220  000011f8  4be00000	jr	r31
  221  000011fc  54000000	nop
  222  00001200          	.endproc _Write
  224  00001200          	.proc _Lseek
  225  00001200          	.global _Lseek
  226  00001200          	_Lseek:
  227  00001200  44000212	trap	#0x212
  228  00001204  4be00000	jr	r31
  229  00001208  54000000	nop
  230  0000120c          	.endproc _Lseek
  232  0000120c          	.proc _Putchar
  233  0000120c          	.global _Putchar
  234  0000120c          	_Putchar:
  235  0000120c  44000280	trap	#0x280
  236  00001210  4be00000	jr	r31
  237  00001214  54000000	nop
  238  00001218          	.endproc _Putchar
  240  00001218          	.proc _Printf
  241  00001218          	.global _Printf
  242  00001218          	_Printf:
  243  00001218  44000201	trap	#0x201
  244  0000121c  4be00000	jr	r31
  245  00001220  54000000	nop
  246  00001224          	.endproc _Printf
  248  00001224          	.proc _getpid
  249  00001224          	.global _getpid
  250  00001224          	_getpid:
  251  00001224  44000431	trap	#0x431
  252  00001228  4be00000	jr	r31
  253  0000122c  54000000	nop
  254  00001230          	.endproc _getpid
  256  00001230          	.proc _process_create
  257  00001230          	.global _process_create
  258  00001230          	_process_create:
  259  00001230  44000432	trap	#0x432
  260  00001234  4be00000	jr	r31
  261  00001238  54000000	nop
  262  0000123c          	.endproc _process_create
  264  0000123c          	.proc _shmget
  265  0000123c          	.global _shmget
  266  0000123c          	_shmget:
  267  0000123c  44000440	trap	#0x440
  268  00001240  4be00000	jr	r31
  269  00001244  54000000	nop
  270  00001248          	.endproc _shmget
  272  00001248          	.proc _shmat
  273  00001248          	.global _shmat
  274  00001248          	_shmat:
  275  00001248  44000441	trap	#0x441
  276  0000124c  4be00000	jr	r31
  277  00001250  54000000	nop
  278  00001254          	.endproc _shmat
  280  00001254          	.proc _sem_create
  281  00001254          	.global _sem_create
  282  00001254          	_sem_create:
  283  00001254  44000450	trap	#0x450
  284  00001258  4be00000	jr	r31
  285  0000125c  54000000	nop
  286  00001260          	.endproc _sem_create
  288  00001260          	.proc _sem_wait
  289  00001260          	.global _sem_wait
  290  00001260          	_sem_wait:
  291  00001260  44000451	trap	#0x451
  292  00001264  4be00000	jr	r31
  293  00001268  54000000	nop
  294  0000126c          	.endproc _sem_wait
  296  0000126c          	.proc _sem_signal
  297  0000126c          	.global _sem_signal
  298  0000126c          	_sem_signal:
  299  0000126c  44000452	trap	#0x452
  300  00001270  4be00000	jr	r31
  301  00001274  54000000	nop
  302  00001278          	.endproc _sem_signal
  304  00001278          	.proc _lock_create
  305  00001278          	.global _lock_create
  306  00001278          	_lock_create:
  307  00001278  44000453	trap	#0x453
  308  0000127c  4be00000	jr	r31
  309  00001280  54000000	nop
  310  00001284          	.endproc _lock_create
  312  00001284          	.proc _lock_acquire
  313  00001284          	.global _lock_acquire
  314  00001284          	_lock_acquire:
  315  00001284  44000454	trap	#0x454
  316  00001288  4be00000	jr	r31
  317  0000128c  54000000	nop
  318  00001290          	.endproc _lock_acquire
  320  00001290          	.proc _lock_release
  321  00001290          	.global _lock_release
  322  00001290          	_lock_release:
  323  00001290  44000455	trap	#0x455
  324  00001294  4be00000	jr	r31
  325  00001298  54000000	nop
  326  0000129c          	.endproc _lock_release
  328  0000129c          	.proc _cond_create
  329  0000129c          	.global _cond_create
  330  0000129c          	_cond_create:
  331  0000129c  44000456	trap	#0x456
  332  000012a0  4be00000	jr	r31
  333  000012a4  54000000	nop
  334  000012a8          	.endproc _cond_create
  336  000012a8          	.proc _cond_wait
  337  000012a8          	.global _cond_wait
  338  000012a8          	_cond_wait:
  339  000012a8  44000457	trap	#0x457
  340  000012ac  4be00000	jr	r31
  341  000012b0  54000000	nop
  342  000012b4          	.endproc _cond_wait
  344  000012b4          	.proc _cond_signal
  345  000012b4          	.global _cond_signal
  346  000012b4          	_cond_signal:
  347  000012b4  44000458	trap	#0x458
  348  000012b8  4be00000	jr	r31
  349  000012bc  54000000	nop
  350  000012c0          	.endproc _cond_signal
  352  000012c0          	.proc _cond_broadcast
  353  000012c0          	.global _cond_broadcast
  354  000012c0          	_cond_broadcast:
  355  000012c0  44000459	trap	#0x459
  356  000012c4  4be00000	jr	r31
  357  000012c8  54000000	nop
  358  000012cc          	.endproc _cond_broadcast
  360  000012cc          	.proc _mbox_create
  361  000012cc          	.global _mbox_create
  362  000012cc          	_mbox_create:
  363  000012cc  44000460	trap	#0x460
  364  000012d0  4be00000	jr	r31
  365  000012d4  54000000	nop
  366  000012d8          	.endproc _mbox_create
  368  000012d8          	.proc _mbox_open
  369  000012d8          	.global _mbox_open
  370  000012d8          	_mbox_open:
  371  000012d8  44000461	trap	#0x461
  372  000012dc  4be00000	jr	r31
  373  000012e0  54000000	nop
  374  000012e4          	.endproc _mbox_open
  376  000012e4          	.proc _mbox_close
  377  000012e4          	.global _mbox_close
  378  000012e4          	_mbox_close:
  379  000012e4  44000462	trap	#0x462
  380  000012e8  4be00000	jr	r31
  381  000012ec  54000000	nop
  382  000012f0          	.endproc _mbox_close
  384  000012f0          	.proc _mbox_send
  385  000012f0          	.global _mbox_send
  386  000012f0          	_mbox_send:
  387  000012f0  44000463	trap	#0x463
  388  000012f4  4be00000	jr	r31
  389  000012f8  54000000	nop
  390  000012fc          	.endproc _mbox_send
  392  000012fc          	.proc _mbox_recv
  393  000012fc          	.global _mbox_recv
  394  000012fc          	_mbox_recv:
  395  000012fc  44000464	trap	#0x464
  396  00001300  4be00000	jr	r31
  397  00001304  54000000	nop
  398  00001308          	.endproc _mbox_recv
  400  00001308          	.proc _sleep
  401  00001308          	.global _sleep
  402  00001308          	_sleep:
  403  00001308  44000465	trap	#0x465
  404  0000130c  4be00000	jr	r31
  405  00001310  54000000	nop
  406  00001314          	.endproc _sleep
  408  00001314          	.proc _yield
  409  00001314          	.global _yield
  410  00001314          	_yield:
  411  00001314  44000466	trap	#0x466
  412  00001318  4be00000	jr	r31
  413  0000131c  54000000	nop
  414  00001320          	.endproc _yield
  417  00001320          	.proc _Exit
  418  00001320          	.global _Exit
  419  00001320          	_Exit:
  420  00001320  44000500	trap	#0x500
  421  00001324  4be00000	jr	r31
  422  00001328  54000000	nop
  423  0000132c          	.endproc _Exit
  426  0000132c          	.proc _malloc
  427  0000132c          	.global _malloc
  428  0000132c          	_malloc:
  429  0000132c  44000467	trap	#0x467
  430  00001330  4be00000	jr	r31
  431  00001334          	.endproc _malloc
  434  00001334          	.proc _mfree
  435  00001334          	.global _mfree
  436  00001334          	_mfree:
  437  00001334  44000468	trap	#0x468
  438  00001338  4be00000	jr	r31
  439  0000133c          	.endproc _mfree
  440                      ; Compiled by GCC
  442  0000133c          	.align 2
  443  0000133c          	.proc _isspace
  444  0000133c          	.global _isspace
  445  0000133c          	_isspace:
  446                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  447  0000133c  afbefffc	sw	-4(r29),r30; push fp
  448  00001340  001df020	add	r30,r0,r29; fp = sp
  449  00001344  afbffff8	sw	-8(r29),r31; push ret addr
  450  00001348  2fbd0018	subui	r29,r29,#24; alloc local storage
  451  0000134c  afa20000	sw	0(r29),r2
  452  00001350  afa30004	sw	4(r29),r3
  453  00001354  afa40008	sw	8(r29),r4
  454  00001358  83c20003	lb	r2,3(r30)
  455  0000135c  20010000	addi	r1,r0,#0
  456  00001360  304300ff	andi	r3,r2,#0x00ff
  457  00001364  60640020	seqi	r4,r3,#32
  458  00001368  1480002c	bnez	r4,L3_LF2
  459  0000136c  54000000	nop; delay slot nop
  460  00001370  304300ff	andi	r3,r2,#0x00ff
  461  00001374  60640009	seqi	r4,r3,#9
  462  00001378  1480001c	bnez	r4,L3_LF2
  463  0000137c  54000000	nop; delay slot nop
  464  00001380  304300ff	andi	r3,r2,#0x00ff
  465  00001384  6064000a	seqi	r4,r3,#10
  466  00001388  1480000c	bnez	r4,L3_LF2
  467  0000138c  54000000	nop; delay slot nop
  468  00001390  08000008	j	L2_LF2
  469  00001394  54000000	nop; delay slot nop
  470  00001398          	L3_LF2:
  471  00001398  20010001	addi	r1,r0,#1
  472  0000139c          	L2_LF2:
  473  0000139c  08000004	j	L1_LF2
  474  000013a0  54000000	nop; delay slot nop
  475  000013a4          	L1_LF2:
  476  000013a4  8fa20000	lw	r2,0(r29)
  477  000013a8  8fa30004	lw	r3,4(r29)
  478  000013ac  8fa40008	lw	r4,8(r29)
  479  000013b0  8fdffff8	lw	r31,-8(r30)
  480  000013b4  001ee820	add	r29,r0,r30
  481  000013b8  8fdefffc	lw	r30,-4(r30)
  482  000013bc  4be00000	jr	r31
  483  000013c0  54000000	nop
  484  000013c4          	.endproc _isspace
  485  000013c4          	.align 2
  486  000013c4          	.proc _isxdigit
  487  000013c4          	.global _isxdigit
  488  000013c4          	_isxdigit:
  489                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  490  000013c4  afbefffc	sw	-4(r29),r30; push fp
  491  000013c8  001df020	add	r30,r0,r29; fp = sp
  492  000013cc  afbffff8	sw	-8(r29),r31; push ret addr
  493  000013d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  494  000013d4  afa20000	sw	0(r29),r2
  495  000013d8  afa30004	sw	4(r29),r3
  496  000013dc  afa40008	sw	8(r29),r4
  497  000013e0  83c20003	lb	r2,3(r30)
  498  000013e4  20010000	addi	r1,r0,#0
  499  000013e8  304300ff	andi	r3,r2,#0x00ff
  500  000013ec  6c64002f	sgtui	r4,r3,#47
  501  000013f0  1080001c	beqz	r4,L7_LF2
  502  000013f4  54000000	nop; delay slot nop
  503  000013f8  304300ff	andi	r3,r2,#0x00ff
  504  000013fc  70640039	sleui	r4,r3,#57
  505  00001400  1480005c	bnez	r4,L6_LF2
  506  00001404  54000000	nop; delay slot nop
  507  00001408  08000004	j	L7_LF2
  508  0000140c  54000000	nop; delay slot nop
  509  00001410          	L7_LF2:
  510  00001410  304300ff	andi	r3,r2,#0x00ff
  511  00001414  6c640060	sgtui	r4,r3,#96
  512  00001418  1080001c	beqz	r4,L8_LF2
  513  0000141c  54000000	nop; delay slot nop
  514  00001420  304300ff	andi	r3,r2,#0x00ff
  515  00001424  70640066	sleui	r4,r3,#102
  516  00001428  14800034	bnez	r4,L6_LF2
  517  0000142c  54000000	nop; delay slot nop
  518  00001430  08000004	j	L8_LF2
  519  00001434  54000000	nop; delay slot nop
  520  00001438          	L8_LF2:
  521  00001438  304300ff	andi	r3,r2,#0x00ff
  522  0000143c  6c640040	sgtui	r4,r3,#64
  523  00001440  10800020	beqz	r4,L5_LF2
  524  00001444  54000000	nop; delay slot nop
  525  00001448  304300ff	andi	r3,r2,#0x00ff
  526  0000144c  70640041	sleui	r4,r3,#65
  527  00001450  1480000c	bnez	r4,L6_LF2
  528  00001454  54000000	nop; delay slot nop
  529  00001458  08000008	j	L5_LF2
  530  0000145c  54000000	nop; delay slot nop
  531  00001460          	L6_LF2:
  532  00001460  20010001	addi	r1,r0,#1
  533  00001464          	L5_LF2:
  534  00001464  08000004	j	L4_LF2
  535  00001468  54000000	nop; delay slot nop
  536  0000146c          	L4_LF2:
  537  0000146c  8fa20000	lw	r2,0(r29)
  538  00001470  8fa30004	lw	r3,4(r29)
  539  00001474  8fa40008	lw	r4,8(r29)
  540  00001478  8fdffff8	lw	r31,-8(r30)
  541  0000147c  001ee820	add	r29,r0,r30
  542  00001480  8fdefffc	lw	r30,-4(r30)
  543  00001484  4be00000	jr	r31
  544  00001488  54000000	nop
  545  0000148c          	.endproc _isxdigit
  546  0000148c          	.align 2
  547  0000148c          	.proc _dstrcpy
  548  0000148c          	.global _dstrcpy
  549  0000148c          	_dstrcpy:
  550                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  551  0000148c  afbefffc	sw	-4(r29),r30; push fp
  552  00001490  001df020	add	r30,r0,r29; fp = sp
  553  00001494  afbffff8	sw	-8(r29),r31; push ret addr
  554  00001498  2fbd0018	subui	r29,r29,#24; alloc local storage
  555  0000149c  afa20000	sw	0(r29),r2
  556  000014a0  afa30004	sw	4(r29),r3
  557  000014a4  8fc10000	lw	r1,(r30)
  558  000014a8  afc1fff4	sw	-12(r30),r1
  559  000014ac          	L10_LF2:
  560  000014ac  8fc10000	lw	r1,(r30)
  561  000014b0  20220001	addi	r2,r1,#1
  562  000014b4  afc20000	sw	(r30),r2
  563  000014b8  8fc20004	lw	r2,4(r30)
  564  000014bc  20430001	addi	r3,r2,#1
  565  000014c0  afc30004	sw	4(r30),r3
  566  000014c4  80420000	lb	r2,(r2)
  567  000014c8  a0220000	sb	(r1),r2
  568  000014cc  a3c2fff3	sb	-13(r30),r2
  569  000014d0          	L12_LF2:
  570  000014d0  93c1fff3	lbu	r1,-13(r30)
  571  000014d4  64220000	snei	r2,r1,#0
  572  000014d8  1440000c	bnez	r2,L13_LF2
  573  000014dc  54000000	nop; delay slot nop
  574  000014e0  0800000c	j	L11_LF2
  575  000014e4  54000000	nop; delay slot nop
  576  000014e8          	L13_LF2:
  577  000014e8  0bffffc0	j	L10_LF2
  578  000014ec  54000000	nop; delay slot nop
  579  000014f0          	L11_LF2:
  580  000014f0  8fc1fff4	lw	r1,-12(r30)
  581  000014f4  08000004	j	L9_LF2
  582  000014f8  54000000	nop; delay slot nop
  583  000014fc          	L9_LF2:
  584  000014fc  8fa20000	lw	r2,0(r29)
  585  00001500  8fa30004	lw	r3,4(r29)
  586  00001504  8fdffff8	lw	r31,-8(r30)
  587  00001508  001ee820	add	r29,r0,r30
  588  0000150c  8fdefffc	lw	r30,-4(r30)
  589  00001510  4be00000	jr	r31
  590  00001514  54000000	nop
  591  00001518          	.endproc _dstrcpy
  592  00001518          	.align 2
  593  00001518          	.proc _dstrncpy
  594  00001518          	.global _dstrncpy
  595  00001518          	_dstrncpy:
  596                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  597  00001518  afbefffc	sw	-4(r29),r30; push fp
  598  0000151c  001df020	add	r30,r0,r29; fp = sp
  599  00001520  afbffff8	sw	-8(r29),r31; push ret addr
  600  00001524  2fbd0018	subui	r29,r29,#24; alloc local storage
  601  00001528  afa20000	sw	0(r29),r2
  602  0000152c  afa30004	sw	4(r29),r3
  603  00001530  8fc10000	lw	r1,(r30)
  604  00001534  afc1fff4	sw	-12(r30),r1
  605  00001538          	L15_LF2:
  606  00001538  8fc10008	lw	r1,8(r30)
  607  0000153c  2022ffff	addi	r2,r1,#-1
  608  00001540  afc20008	sw	8(r30),r2
  609  00001544  70210000	slei	r1,r1,#0
  610  00001548  1020000c	beqz	r1,L18_LF2
  611  0000154c  54000000	nop; delay slot nop
  612  00001550  08000048	j	L16_LF2
  613  00001554  54000000	nop; delay slot nop
  614  00001558          	L18_LF2:
  615  00001558  8fc10000	lw	r1,(r30)
  616  0000155c  20220001	addi	r2,r1,#1
  617  00001560  afc20000	sw	(r30),r2
  618  00001564  8fc20004	lw	r2,4(r30)
  619  00001568  20430001	addi	r3,r2,#1
  620  0000156c  afc30004	sw	4(r30),r3
  621  00001570  80420000	lb	r2,(r2)
  622  00001574  a0220000	sb	(r1),r2
  623  00001578  a3c2fff3	sb	-13(r30),r2
  624  0000157c          	L17_LF2:
  625  0000157c  93c1fff3	lbu	r1,-13(r30)
  626  00001580  64220000	snei	r2,r1,#0
  627  00001584  1440000c	bnez	r2,L19_LF2
  628  00001588  54000000	nop; delay slot nop
  629  0000158c  0800000c	j	L16_LF2
  630  00001590  54000000	nop; delay slot nop
  631  00001594          	L19_LF2:
  632  00001594  0bffffa0	j	L15_LF2
  633  00001598  54000000	nop; delay slot nop
  634  0000159c          	L16_LF2:
  635  0000159c  8fc1fff4	lw	r1,-12(r30)
  636  000015a0  08000004	j	L14_LF2
  637  000015a4  54000000	nop; delay slot nop
  638  000015a8          	L14_LF2:
  639  000015a8  8fa20000	lw	r2,0(r29)
  640  000015ac  8fa30004	lw	r3,4(r29)
  641  000015b0  8fdffff8	lw	r31,-8(r30)
  642  000015b4  001ee820	add	r29,r0,r30
  643  000015b8  8fdefffc	lw	r30,-4(r30)
  644  000015bc  4be00000	jr	r31
  645  000015c0  54000000	nop
  646  000015c4          	.endproc _dstrncpy
  647  000015c4          	.align 2
  648  000015c4          	.proc _dstrcat
  649  000015c4          	.global _dstrcat
  650  000015c4          	_dstrcat:
  651                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  652  000015c4  afbefffc	sw	-4(r29),r30; push fp
  653  000015c8  001df020	add	r30,r0,r29; fp = sp
  654  000015cc  afbffff8	sw	-8(r29),r31; push ret addr
  655  000015d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  656  000015d4  afa20000	sw	0(r29),r2
  657  000015d8  8fc10000	lw	r1,(r30)
  658  000015dc  afc1fff4	sw	-12(r30),r1
  659  000015e0          	L21_LF2:
  660  000015e0  8fc10000	lw	r1,(r30)
  661  000015e4  90220000	lbu	r2,(r1)
  662  000015e8  64410000	snei	r1,r2,#0
  663  000015ec  1420000c	bnez	r1,L23_LF2
  664  000015f0  54000000	nop; delay slot nop
  665  000015f4  0800001c	j	L22_LF2
  666  000015f8  54000000	nop; delay slot nop
  667  000015fc          	L23_LF2:
  668  000015fc  8fc20000	lw	r2,(r30)
  669  00001600  20410001	addi	r1,r2,#1
  670  00001604  00011020	add	r2,r0,r1
  671  00001608  afc20000	sw	(r30),r2
  672  0000160c  0bffffd0	j	L21_LF2
  673  00001610  54000000	nop; delay slot nop
  674  00001614          	L22_LF2:
  675  00001614  23bdfff8	addi	r29,r29,#-8
  676  00001618  001d0820	add	r1,r0,r29
  677  0000161c  8fc20000	lw	r2,(r30)
  678  00001620  ac220000	sw	(r1),r2
  679  00001624  8fc20004	lw	r2,4(r30)
  680  00001628  ac220004	sw	4(r1),r2
  681  0000162c  0ffffe5c	jal	_dstrcpy
  682  00001630  54000000	nop; delay slot nop
  683  00001634  23bd0008	addi	r29,r29,#8
  684  00001638  8fc1fff4	lw	r1,-12(r30)
  685  0000163c  08000004	j	L20_LF2
  686  00001640  54000000	nop; delay slot nop
  687  00001644          	L20_LF2:
  688  00001644  8fa20000	lw	r2,0(r29)
  689  00001648  8fdffff8	lw	r31,-8(r30)
  690  0000164c  001ee820	add	r29,r0,r30
  691  00001650  8fdefffc	lw	r30,-4(r30)
  692  00001654  4be00000	jr	r31
  693  00001658  54000000	nop
  694  0000165c          	.endproc _dstrcat
  695  0000165c          	.align 2
  696  0000165c          	.proc _dstrncmp
  697  0000165c          	.global _dstrncmp
  698  0000165c          	_dstrncmp:
  699                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  700  0000165c  afbefffc	sw	-4(r29),r30; push fp
  701  00001660  001df020	add	r30,r0,r29; fp = sp
  702  00001664  afbffff8	sw	-8(r29),r31; push ret addr
  703  00001668  2fbd0018	subui	r29,r29,#24; alloc local storage
  704  0000166c  afa20000	sw	0(r29),r2
  705  00001670  afa30004	sw	4(r29),r3
  706  00001674  54000000	nop
  707  00001678  20010000	addi	r1,r0,#0
  708  0000167c  afc1fff4	sw	-12(r30),r1
  709  00001680          	L25_LF2:
  710  00001680  8fc1fff4	lw	r1,-12(r30)
  711  00001684  8fc20008	lw	r2,8(r30)
  712  00001688  0022082a	slt	r1,r1,r2
  713  0000168c  1420000c	bnez	r1,L28_LF2
  714  00001690  54000000	nop; delay slot nop
  715  00001694  08000088	j	L26_LF2
  716  00001698  54000000	nop; delay slot nop
  717  0000169c          	L28_LF2:
  718  0000169c  8fc10004	lw	r1,4(r30)
  719  000016a0  90220000	lbu	r2,(r1)
  720  000016a4  64410000	snei	r1,r2,#0
  721  000016a8  14200018	bnez	r1,L29_LF2
  722  000016ac  54000000	nop; delay slot nop
  723  000016b0  20010000	addi	r1,r0,#0
  724  000016b4  080000d8	j	L24_LF2
  725  000016b8  54000000	nop; delay slot nop
  726  000016bc  08000028	j	L30_LF2
  727  000016c0  54000000	nop; delay slot nop
  728  000016c4          	L29_LF2:
  729  000016c4  8fc10000	lw	r1,(r30)
  730  000016c8  8fc20004	lw	r2,4(r30)
  731  000016cc  90210000	lbu	r1,(r1)
  732  000016d0  90420000	lbu	r2,(r2)
  733  000016d4  00220829	sne	r1,r1,r2
  734  000016d8  1020000c	beqz	r1,L30_LF2
  735  000016dc  54000000	nop; delay slot nop
  736  000016e0  0800003c	j	L26_LF2
  737  000016e4  54000000	nop; delay slot nop
  738  000016e8          	L31_LF2:
  739  000016e8          	L30_LF2:
  740  000016e8  8fc20000	lw	r2,(r30)
  741  000016ec  20410001	addi	r1,r2,#1
  742  000016f0  00011020	add	r2,r0,r1
  743  000016f4  afc20000	sw	(r30),r2
  744  000016f8  8fc20004	lw	r2,4(r30)
  745  000016fc  20410001	addi	r1,r2,#1
  746  00001700  00011020	add	r2,r0,r1
  747  00001704  afc20004	sw	4(r30),r2
  748  00001708          	L27_LF2:
  749  00001708  8fc2fff4	lw	r2,-12(r30)
  750  0000170c  20410001	addi	r1,r2,#1
  751  00001710  00011020	add	r2,r0,r1
  752  00001714  afc2fff4	sw	-12(r30),r2
  753  00001718  0bffff64	j	L25_LF2
  754  0000171c  54000000	nop; delay slot nop
  755  00001720          	L26_LF2:
  756  00001720  8fc1fff4	lw	r1,-12(r30)
  757  00001724  8fc20008	lw	r2,8(r30)
  758  00001728  00220828	seq	r1,r1,r2
  759  0000172c  10200018	beqz	r1,L32_LF2
  760  00001730  54000000	nop; delay slot nop
  761  00001734  20010000	addi	r1,r0,#0
  762  00001738  08000054	j	L24_LF2
  763  0000173c  54000000	nop; delay slot nop
  764  00001740  0800004c	j	L33_LF2
  765  00001744  54000000	nop; delay slot nop
  766  00001748          	L32_LF2:
  767  00001748  8fc20000	lw	r2,(r30)
  768  0000174c  90410000	lbu	r1,(r2)
  769  00001750  8fc20004	lw	r2,4(r30)
  770  00001754  90430000	lbu	r3,(r2)
  771  00001758  00230822	sub	r1,r1,r3
  772  0000175c  74220000	sgei	r2,r1,#0
  773  00001760  10400020	beqz	r2,L34_LF2
  774  00001764  54000000	nop; delay slot nop
  775  00001768  8fc10000	lw	r1,(r30)
  776  0000176c  8fc20004	lw	r2,4(r30)
  777  00001770  90210000	lbu	r1,(r1)
  778  00001774  90420000	lbu	r2,(r2)
  779  00001778  00220829	sne	r1,r1,r2
  780  0000177c  08000008	j	L35_LF2
  781  00001780  54000000	nop; delay slot nop
  782  00001784          	L34_LF2:
  783  00001784  2001ffff	addi	r1,r0,#-1
  784  00001788          	L35_LF2:
  785  00001788  08000004	j	L24_LF2
  786  0000178c  54000000	nop; delay slot nop
  787  00001790          	L33_LF2:
  788  00001790          	L24_LF2:
  789  00001790  8fa20000	lw	r2,0(r29)
  790  00001794  8fa30004	lw	r3,4(r29)
  791  00001798  8fdffff8	lw	r31,-8(r30)
  792  0000179c  001ee820	add	r29,r0,r30
  793  000017a0  8fdefffc	lw	r30,-4(r30)
  794  000017a4  4be00000	jr	r31
  795  000017a8  54000000	nop
  796  000017ac          	.endproc _dstrncmp
  797  000017ac          	.align 2
  798  000017ac          	.proc _dstrlen
  799  000017ac          	.global _dstrlen
  800  000017ac          	_dstrlen:
  801                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  802  000017ac  afbefffc	sw	-4(r29),r30; push fp
  803  000017b0  001df020	add	r30,r0,r29; fp = sp
  804  000017b4  afbffff8	sw	-8(r29),r31; push ret addr
  805  000017b8  2fbd0018	subui	r29,r29,#24; alloc local storage
  806  000017bc  afa20000	sw	0(r29),r2
  807  000017c0  20010000	addi	r1,r0,#0
  808  000017c4  afc1fff4	sw	-12(r30),r1
  809  000017c8          	L37_LF2:
  810  000017c8  8fc10000	lw	r1,(r30)
  811  000017cc  20220001	addi	r2,r1,#1
  812  000017d0  afc20000	sw	(r30),r2
  813  000017d4  90210000	lbu	r1,(r1)
  814  000017d8  64220000	snei	r2,r1,#0
  815  000017dc  1440000c	bnez	r2,L39_LF2
  816  000017e0  54000000	nop; delay slot nop
  817  000017e4  0800001c	j	L38_LF2
  818  000017e8  54000000	nop; delay slot nop
  819  000017ec          	L39_LF2:
  820  000017ec  8fc2fff4	lw	r2,-12(r30)
  821  000017f0  20410001	addi	r1,r2,#1
  822  000017f4  00011020	add	r2,r0,r1
  823  000017f8  afc2fff4	sw	-12(r30),r2
  824  000017fc  0bffffc8	j	L37_LF2
  825  00001800  54000000	nop; delay slot nop
  826  00001804          	L38_LF2:
  827  00001804  8fc1fff4	lw	r1,-12(r30)
  828  00001808  08000004	j	L36_LF2
  829  0000180c  54000000	nop; delay slot nop
  830  00001810          	L36_LF2:
  831  00001810  8fa20000	lw	r2,0(r29)
  832  00001814  8fdffff8	lw	r31,-8(r30)
  833  00001818  001ee820	add	r29,r0,r30
  834  0000181c  8fdefffc	lw	r30,-4(r30)
  835  00001820  4be00000	jr	r31
  836  00001824  54000000	nop
  837  00001828          	.endproc _dstrlen
  838  00001828          	.align 2
  839  00001828          	.proc _dstrstr
  840  00001828          	.global _dstrstr
  841  00001828          	_dstrstr:
  842                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  843  00001828  afbefffc	sw	-4(r29),r30; push fp
  844  0000182c  001df020	add	r30,r0,r29; fp = sp
  845  00001830  afbffff8	sw	-8(r29),r31; push ret addr
  846  00001834  2fbd0018	subui	r29,r29,#24; alloc local storage
  847  00001838  afa20000	sw	0(r29),r2
  848  0000183c  23bdfff8	addi	r29,r29,#-8
  849  00001840  001d0820	add	r1,r0,r29
  850  00001844  8fc20004	lw	r2,4(r30)
  851  00001848  ac220000	sw	(r1),r2
  852  0000184c  0fffff5c	jal	_dstrlen
  853  00001850  54000000	nop; delay slot nop
  854  00001854  23bd0008	addi	r29,r29,#8
  855  00001858  afc1fff4	sw	-12(r30),r1
  856  0000185c          	L41_LF2:
  857  0000185c  8fc10000	lw	r1,(r30)
  858  00001860  90220000	lbu	r2,(r1)
  859  00001864  64410000	snei	r1,r2,#0
  860  00001868  1420000c	bnez	r1,L43_LF2
  861  0000186c  54000000	nop; delay slot nop
  862  00001870  08000060	j	L42_LF2
  863  00001874  54000000	nop; delay slot nop
  864  00001878          	L43_LF2:
  865  00001878  23bdfff0	addi	r29,r29,#-16
  866  0000187c  001d0820	add	r1,r0,r29
  867  00001880  8fc20000	lw	r2,(r30)
  868  00001884  ac220000	sw	(r1),r2
  869  00001888  8fc20004	lw	r2,4(r30)
  870  0000188c  ac220004	sw	4(r1),r2
  871  00001890  8fc2fff4	lw	r2,-12(r30)
  872  00001894  ac220008	sw	8(r1),r2
  873  00001898  0ffffdc0	jal	_dstrncmp
  874  0000189c  54000000	nop; delay slot nop
  875  000018a0  23bd0010	addi	r29,r29,#16
  876  000018a4  64220000	snei	r2,r1,#0
  877  000018a8  14400010	bnez	r2,L44_LF2
  878  000018ac  54000000	nop; delay slot nop
  879  000018b0  8fc10000	lw	r1,(r30)
  880  000018b4  08000028	j	L40_LF2
  881  000018b8  54000000	nop; delay slot nop
  882  000018bc          	L44_LF2:
  883  000018bc  8fc20000	lw	r2,(r30)
  884  000018c0  20410001	addi	r1,r2,#1
  885  000018c4  00011020	add	r2,r0,r1
  886  000018c8  afc20000	sw	(r30),r2
  887  000018cc  0bffff8c	j	L41_LF2
  888  000018d0  54000000	nop; delay slot nop
  889  000018d4          	L42_LF2:
  890  000018d4  20010000	addi	r1,r0,#0
  891  000018d8  08000004	j	L40_LF2
  892  000018dc  54000000	nop; delay slot nop
  893  000018e0          	L40_LF2:
  894  000018e0  8fa20000	lw	r2,0(r29)
  895  000018e4  8fdffff8	lw	r31,-8(r30)
  896  000018e8  001ee820	add	r29,r0,r30
  897  000018ec  8fdefffc	lw	r30,-4(r30)
  898  000018f0  4be00000	jr	r31
  899  000018f4  54000000	nop
  900  000018f8          	.endproc _dstrstr
  901  000018f8          	.align 2
  902  000018f8          	.proc _dmindex
  903  000018f8          	.global _dmindex
  904  000018f8          	_dmindex:
  905                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  906  000018f8  afbefffc	sw	-4(r29),r30; push fp
  907  000018fc  001df020	add	r30,r0,r29; fp = sp
  908  00001900  afbffff8	sw	-8(r29),r31; push ret addr
  909  00001904  2fbd0018	subui	r29,r29,#24; alloc local storage
  910  00001908  afa20000	sw	0(r29),r2
  911  0000190c  54000000	nop
  912  00001910          	L46_LF2:
  913  00001910  8fc10000	lw	r1,(r30)
  914  00001914  90220000	lbu	r2,(r1)
  915  00001918  64410000	snei	r1,r2,#0
  916  0000191c  1420000c	bnez	r1,L48_LF2
  917  00001920  54000000	nop; delay slot nop
  918  00001924  08000070	j	L47_LF2
  919  00001928  54000000	nop; delay slot nop
  920  0000192c          	L48_LF2:
  921  0000192c  8fc10004	lw	r1,4(r30)
  922  00001930  afc1fff4	sw	-12(r30),r1
  923  00001934          	L49_LF2:
  924  00001934  8fc1fff4	lw	r1,-12(r30)
  925  00001938  90220000	lbu	r2,(r1)
  926  0000193c  64410000	snei	r1,r2,#0
  927  00001940  1420000c	bnez	r1,L52_LF2
  928  00001944  54000000	nop; delay slot nop
  929  00001948  08000044	j	L50_LF2
  930  0000194c  54000000	nop; delay slot nop
  931  00001950          	L52_LF2:
  932  00001950  8fc10000	lw	r1,(r30)
  933  00001954  8fc2fff4	lw	r2,-12(r30)
  934  00001958  90210000	lbu	r1,(r1)
  935  0000195c  90420000	lbu	r2,(r2)
  936  00001960  00220828	seq	r1,r1,r2
  937  00001964  10200010	beqz	r1,L51_LF2
  938  00001968  54000000	nop; delay slot nop
  939  0000196c  8fc10000	lw	r1,(r30)
  940  00001970  08000030	j	L45_LF2
  941  00001974  54000000	nop; delay slot nop
  942  00001978          	L53_LF2:
  943  00001978          	L51_LF2:
  944  00001978  8fc2fff4	lw	r2,-12(r30)
  945  0000197c  20410001	addi	r1,r2,#1
  946  00001980  00011020	add	r2,r0,r1
  947  00001984  afc2fff4	sw	-12(r30),r2
  948  00001988  0bffffa8	j	L49_LF2
  949  0000198c  54000000	nop; delay slot nop
  950  00001990          	L50_LF2:
  951  00001990  0bffff7c	j	L46_LF2
  952  00001994  54000000	nop; delay slot nop
  953  00001998          	L47_LF2:
  954  00001998  20010000	addi	r1,r0,#0
  955  0000199c  08000004	j	L45_LF2
  956  000019a0  54000000	nop; delay slot nop
  957  000019a4          	L45_LF2:
  958  000019a4  8fa20000	lw	r2,0(r29)
  959  000019a8  8fdffff8	lw	r31,-8(r30)
  960  000019ac  001ee820	add	r29,r0,r30
  961  000019b0  8fdefffc	lw	r30,-4(r30)
  962  000019b4  4be00000	jr	r31
  963  000019b8  54000000	nop
  964  000019bc          	.endproc _dmindex
  965  000019bc          	.align 2
  966  000019bc          	.proc _dindex
  967  000019bc          	.global _dindex
  968  000019bc          	_dindex:
  969                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  970  000019bc  afbefffc	sw	-4(r29),r30; push fp
  971  000019c0  001df020	add	r30,r0,r29; fp = sp
  972  000019c4  afbffff8	sw	-8(r29),r31; push ret addr
  973  000019c8  2fbd0010	subui	r29,r29,#16; alloc local storage
  974  000019cc  afa20000	sw	0(r29),r2
  975  000019d0  54000000	nop
  976  000019d4          	L55_LF2:
  977  000019d4  8fc10000	lw	r1,(r30)
  978  000019d8  90220000	lbu	r2,(r1)
  979  000019dc  64410000	snei	r1,r2,#0
  980  000019e0  1420000c	bnez	r1,L57_LF2
  981  000019e4  54000000	nop; delay slot nop
  982  000019e8  08000040	j	L56_LF2
  983  000019ec  54000000	nop; delay slot nop
  984  000019f0          	L57_LF2:
  985  000019f0  8fc10000	lw	r1,(r30)
  986  000019f4  90220000	lbu	r2,(r1)
  987  000019f8  8fc10004	lw	r1,4(r30)
  988  000019fc  00411028	seq	r2,r2,r1
  989  00001a00  10400010	beqz	r2,L58_LF2
  990  00001a04  54000000	nop; delay slot nop
  991  00001a08  8fc10000	lw	r1,(r30)
  992  00001a0c  08000028	j	L54_LF2
  993  00001a10  54000000	nop; delay slot nop
  994  00001a14          	L58_LF2:
  995  00001a14  8fc20000	lw	r2,(r30)
  996  00001a18  20410001	addi	r1,r2,#1
  997  00001a1c  00011020	add	r2,r0,r1
  998  00001a20  afc20000	sw	(r30),r2
  999  00001a24  0bffffac	j	L55_LF2
 1000  00001a28  54000000	nop; delay slot nop
 1001  00001a2c          	L56_LF2:
 1002  00001a2c  20010000	addi	r1,r0,#0
 1003  00001a30  08000004	j	L54_LF2
 1004  00001a34  54000000	nop; delay slot nop
 1005  00001a38          	L54_LF2:
 1006  00001a38  8fa20000	lw	r2,0(r29)
 1007  00001a3c  8fdffff8	lw	r31,-8(r30)
 1008  00001a40  001ee820	add	r29,r0,r30
 1009  00001a44  8fdefffc	lw	r30,-4(r30)
 1010  00001a48  4be00000	jr	r31
 1011  00001a4c  54000000	nop
 1012  00001a50          	.endproc _dindex
 1013  00001a50          	.align 2
 1014  00001a50          	.proc _ditoa
 1015  00001a50          	.global _ditoa
 1016  00001a50          	_ditoa:
 1017                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
 1018  00001a50  afbefffc	sw	-4(r29),r30; push fp
 1019  00001a54  001df020	add	r30,r0,r29; fp = sp
 1020  00001a58  afbffff8	sw	-8(r29),r31; push ret addr
 1021  00001a5c  2fbd0018	subui	r29,r29,#24; alloc local storage
 1022  00001a60  afa20000	sw	0(r29),r2
 1023  00001a64  afa30004	sw	4(r29),r3
 1024  00001a68  8fc10000	lw	r1,(r30)
 1025  00001a6c  68220000	slti	r2,r1,#0
 1026  00001a70  1040002c	beqz	r2,L60_LF2
 1027  00001a74  54000000	nop; delay slot nop
 1028  00001a78  8fc10004	lw	r1,4(r30)
 1029  00001a7c  20220001	addi	r2,r1,#1
 1030  00001a80  afc20004	sw	4(r30),r2
 1031  00001a84  2002002d	addi	r2,r0,(#0x2d)&0xff
 1032  00001a88  a0220000	sb	(r1),r2
 1033  00001a8c  8fc10000	lw	r1,(r30)
 1034  00001a90  00011022	sub	r2,r0,r1
 1035  00001a94  afc20000	sw	(r30),r2
 1036  00001a98  08000118	j	L61_LF2
 1037  00001a9c  54000000	nop; delay slot nop
 1038  00001aa0          	L60_LF2:
 1039  00001aa0  8fc10000	lw	r1,(r30)
 1040  00001aa4  64220000	snei	r2,r1,#0
 1041  00001aa8  14400020	bnez	r2,L62_LF2
 1042  00001aac  54000000	nop; delay slot nop
 1043  00001ab0  8fc10004	lw	r1,4(r30)
 1044  00001ab4  20220001	addi	r2,r1,#1
 1045  00001ab8  afc20004	sw	4(r30),r2
 1046  00001abc  20020030	addi	r2,r0,(#0x30)&0xff
 1047  00001ac0  a0220000	sb	(r1),r2
 1048  00001ac4  080000ec	j	L61_LF2
 1049  00001ac8  54000000	nop; delay slot nop
 1050  00001acc          	L62_LF2:
 1051  00001acc  20010001	addi	r1,r0,#1
 1052  00001ad0  afc1fff4	sw	-12(r30),r1
 1053  00001ad4          	L64_LF2:
 1054  00001ad4  8fc1fff4	lw	r1,-12(r30)
 1055  00001ad8  8fc20000	lw	r2,(r30)
 1056  00001adc  0022082c	sle	r1,r1,r2
 1057  00001ae0  1420000c	bnez	r1,L66_LF2
 1058  00001ae4  54000000	nop; delay slot nop
 1059  00001ae8  08000024	j	L65_LF2
 1060  00001aec  54000000	nop; delay slot nop
 1061  00001af0          	L67_LF2:
 1062  00001af0          	L66_LF2:
 1063  00001af0  8fc1fff4	lw	r1,-12(r30)
 1064  00001af4  00011820	add	r3,r0,r1
 1065  00001af8  50620002	slli	r2,r3,#0x2
 1066  00001afc  00411020	add	r2,r2,r1
 1067  00001b00  50410001	slli	r1,r2,#0x1
 1068  00001b04  afc1fff4	sw	-12(r30),r1
 1069  00001b08  0bffffc8	j	L64_LF2
 1070  00001b0c  54000000	nop; delay slot nop
 1071  00001b10          	L65_LF2:
 1072  00001b10  54000000	nop
 1073  00001b14          	L68_LF2:
 1074  00001b14  8fc1fff4	lw	r1,-12(r30)
 1075  00001b18  2002000a	addi	r2,r0,#10
 1076  00001b1c  00200035	movi2fp	f0,r1
 1077  00001b20  00400835	movi2fp	f1,r2
 1078  00001b24  0401000f	div	f0,f0,f1
 1079  00001b28  00000834	movfp2i	r1,f0
 1080  00001b2c  afc1fff4	sw	-12(r30),r1
 1081  00001b30  8fc10004	lw	r1,4(r30)
 1082  00001b34  20220001	addi	r2,r1,#1
 1083  00001b38  afc20004	sw	4(r30),r2
 1084  00001b3c  8fc20000	lw	r2,(r30)
 1085  00001b40  8fc3fff4	lw	r3,-12(r30)
 1086  00001b44  00400035	movi2fp	f0,r2
 1087  00001b48  00600835	movi2fp	f1,r3
 1088  00001b4c  0401000f	div	f0,f0,f1
 1089  00001b50  00001034	movfp2i	r2,f0
 1090  00001b54  00021820	add	r3,r0,r2
 1091  00001b58  20620030	addi	r2,r3,#48
 1092  00001b5c  a0220000	sb	(r1),r2
 1093  00001b60  8fc10000	lw	r1,(r30)
 1094  00001b64  8fc3fff4	lw	r3,-12(r30)
 1095  00001b68  00200035	movi2fp	f0,r1
 1096  00001b6c  00600835	movi2fp	f1,r3
 1097  00001b70  0401000f	div	f0,f0,f1
 1098  00001b74  00001034	movfp2i	r2,f0
 1099  00001b78  8fc3fff4	lw	r3,-12(r30)
 1100  00001b7c  00400035	movi2fp	f0,r2
 1101  00001b80  00600835	movi2fp	f1,r3
 1102  00001b84  0401000e	mult	f0,f0,f1
 1103  00001b88  00001034	movfp2i	r2,f0
 1104  00001b8c  00220822	sub	r1,r1,r2
 1105  00001b90  afc10000	sw	(r30),r1
 1106  00001b94          	L70_LF2:
 1107  00001b94  8fc1fff4	lw	r1,-12(r30)
 1108  00001b98  6c220001	sgti	r2,r1,#1
 1109  00001b9c  1440000c	bnez	r2,L71_LF2
 1110  00001ba0  54000000	nop; delay slot nop
 1111  00001ba4  0800000c	j	L61_LF2
 1112  00001ba8  54000000	nop; delay slot nop
 1113  00001bac          	L71_LF2:
 1114  00001bac  0bffff64	j	L68_LF2
 1115  00001bb0  54000000	nop; delay slot nop
 1116  00001bb4          	L69_LF2:
 1117  00001bb4          	L63_LF2:
 1118  00001bb4          	L61_LF2:
 1119  00001bb4  8fc10004	lw	r1,4(r30)
 1120  00001bb8  20020000	addi	r2,r0,(#0x0)&0xff
 1121  00001bbc  a0220000	sb	(r1),r2
 1122  00001bc0          	L59_LF2:
 1123  00001bc0  8fa20000	lw	r2,0(r29)
 1124  00001bc4  8fa30004	lw	r3,4(r29)
 1125  00001bc8  8fdffff8	lw	r31,-8(r30)
 1126  00001bcc  001ee820	add	r29,r0,r30
 1127  00001bd0  8fdefffc	lw	r30,-4(r30)
 1128  00001bd4  4be00000	jr	r31
 1129  00001bd8  54000000	nop
 1130  00001bdc          	.endproc _ditoa
 1131  00001bdc          	.align 2
 1132  00001bdc          	.proc _dstrtol
 1133  00001bdc          	.global _dstrtol
 1134  00001bdc          	_dstrtol:
 1135                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1136  00001bdc  afbefffc	sw	-4(r29),r30; push fp
 1137  00001be0  001df020	add	r30,r0,r29; fp = sp
 1138  00001be4  afbffff8	sw	-8(r29),r31; push ret addr
 1139  00001be8  2fbd0020	subui	r29,r29,#32; alloc local storage
 1140  00001bec  afa20000	sw	0(r29),r2
 1141  00001bf0  20010000	addi	r1,r0,#0
 1142  00001bf4  afc1fff4	sw	-12(r30),r1
 1143  00001bf8          	L73_LF2:
 1144  00001bf8  8fc10000	lw	r1,(r30)
 1145  00001bfc  90220000	lbu	r2,(r1)
 1146  00001c00  60410020	seqi	r1,r2,#32
 1147  00001c04  14200034	bnez	r1,L75_LF2
 1148  00001c08  54000000	nop; delay slot nop
 1149  00001c0c  8fc10000	lw	r1,(r30)
 1150  00001c10  90220000	lbu	r2,(r1)
 1151  00001c14  60410009	seqi	r1,r2,#9
 1152  00001c18  14200020	bnez	r1,L75_LF2
 1153  00001c1c  54000000	nop; delay slot nop
 1154  00001c20  8fc10000	lw	r1,(r30)
 1155  00001c24  90220000	lbu	r2,(r1)
 1156  00001c28  6041000a	seqi	r1,r2,#10
 1157  00001c2c  1420000c	bnez	r1,L75_LF2
 1158  00001c30  54000000	nop; delay slot nop
 1159  00001c34  0800001c	j	L74_LF2
 1160  00001c38  54000000	nop; delay slot nop
 1161  00001c3c          	L75_LF2:
 1162  00001c3c  8fc20000	lw	r2,(r30)
 1163  00001c40  20410001	addi	r1,r2,#1
 1164  00001c44  00011020	add	r2,r0,r1
 1165  00001c48  afc20000	sw	(r30),r2
 1166  00001c4c  0bffffa8	j	L73_LF2
 1167  00001c50  54000000	nop; delay slot nop
 1168  00001c54          	L74_LF2:
 1169  00001c54  8fc10004	lw	r1,4(r30)
 1170  00001c58  64220000	snei	r2,r1,#0
 1171  00001c5c  10400010	beqz	r2,L76_LF2
 1172  00001c60  54000000	nop; delay slot nop
 1173  00001c64  8fc10004	lw	r1,4(r30)
 1174  00001c68  8fc20000	lw	r2,(r30)
 1175  00001c6c  ac220000	sw	(r1),r2
 1176  00001c70          	L76_LF2:
 1177  00001c70  8fc10000	lw	r1,(r30)
 1178  00001c74  90220000	lbu	r2,(r1)
 1179  00001c78  64410000	snei	r1,r2,#0
 1180  00001c7c  14200010	bnez	r1,L77_LF2
 1181  00001c80  54000000	nop; delay slot nop
 1182  00001c84  8fc1fff4	lw	r1,-12(r30)
 1183  00001c88  08000294	j	L72_LF2
 1184  00001c8c  54000000	nop; delay slot nop
 1185  00001c90          	L77_LF2:
 1186  00001c90  8fc10000	lw	r1,(r30)
 1187  00001c94  90220000	lbu	r2,(r1)
 1188  00001c98  6041002d	seqi	r1,r2,#45
 1189  00001c9c  10200024	beqz	r1,L78_LF2
 1190  00001ca0  54000000	nop; delay slot nop
 1191  00001ca4  2001ffff	addi	r1,r0,#-1
 1192  00001ca8  afc1ffec	sw	-20(r30),r1
 1193  00001cac  8fc20000	lw	r2,(r30)
 1194  00001cb0  20410001	addi	r1,r2,#1
 1195  00001cb4  00011020	add	r2,r0,r1
 1196  00001cb8  afc20000	sw	(r30),r2
 1197  00001cbc  0800000c	j	L79_LF2
 1198  00001cc0  54000000	nop; delay slot nop
 1199  00001cc4          	L78_LF2:
 1200  00001cc4  20010001	addi	r1,r0,#1
 1201  00001cc8  afc1ffec	sw	-20(r30),r1
 1202  00001ccc          	L79_LF2:
 1203  00001ccc  8fc10008	lw	r1,8(r30)
 1204  00001cd0  64220000	snei	r2,r1,#0
 1205  00001cd4  14400090	bnez	r2,L80_LF2
 1206  00001cd8  54000000	nop; delay slot nop
 1207  00001cdc  8fc10000	lw	r1,(r30)
 1208  00001ce0  90220000	lbu	r2,(r1)
 1209  00001ce4  60410030	seqi	r1,r2,#48
 1210  00001ce8  10200074	beqz	r1,L81_LF2
 1211  00001cec  54000000	nop; delay slot nop
 1212  00001cf0  8fc20000	lw	r2,(r30)
 1213  00001cf4  20410001	addi	r1,r2,#1
 1214  00001cf8  00011020	add	r2,r0,r1
 1215  00001cfc  afc20000	sw	(r30),r2
 1216  00001d00  8fc10000	lw	r1,(r30)
 1217  00001d04  90220000	lbu	r2,(r1)
 1218  00001d08  60410078	seqi	r1,r2,#120
 1219  00001d0c  14200020	bnez	r1,L83_LF2
 1220  00001d10  54000000	nop; delay slot nop
 1221  00001d14  8fc10000	lw	r1,(r30)
 1222  00001d18  90220000	lbu	r2,(r1)
 1223  00001d1c  60410058	seqi	r1,r2,#88
 1224  00001d20  1420000c	bnez	r1,L83_LF2
 1225  00001d24  54000000	nop; delay slot nop
 1226  00001d28  08000024	j	L82_LF2
 1227  00001d2c  54000000	nop; delay slot nop
 1228  00001d30          	L83_LF2:
 1229  00001d30  20010010	addi	r1,r0,#16
 1230  00001d34  afc10008	sw	8(r30),r1
 1231  00001d38  8fc20000	lw	r2,(r30)
 1232  00001d3c  20410001	addi	r1,r2,#1
 1233  00001d40  00011020	add	r2,r0,r1
 1234  00001d44  afc20000	sw	(r30),r2
 1235  00001d48  0800000c	j	L84_LF2
 1236  00001d4c  54000000	nop; delay slot nop
 1237  00001d50          	L82_LF2:
 1238  00001d50  20010008	addi	r1,r0,#8
 1239  00001d54  afc10008	sw	8(r30),r1
 1240  00001d58          	L84_LF2:
 1241  00001d58  0800000c	j	L80_LF2
 1242  00001d5c  54000000	nop; delay slot nop
 1243  00001d60          	L81_LF2:
 1244  00001d60  2001000a	addi	r1,r0,#10
 1245  00001d64  afc10008	sw	8(r30),r1
 1246  00001d68          	L85_LF2:
 1247  00001d68          	L80_LF2:
 1248  00001d68  8fc10008	lw	r1,8(r30)
 1249  00001d6c  70220000	slei	r2,r1,#0
 1250  00001d70  1440001c	bnez	r2,L87_LF2
 1251  00001d74  54000000	nop; delay slot nop
 1252  00001d78  8fc10008	lw	r1,8(r30)
 1253  00001d7c  6c220010	sgti	r2,r1,#16
 1254  00001d80  1440000c	bnez	r2,L87_LF2
 1255  00001d84  54000000	nop; delay slot nop
 1256  00001d88  08000010	j	L86_LF2
 1257  00001d8c  54000000	nop; delay slot nop
 1258  00001d90          	L87_LF2:
 1259  00001d90  8fc1fff4	lw	r1,-12(r30)
 1260  00001d94  08000188	j	L72_LF2
 1261  00001d98  54000000	nop; delay slot nop
 1262  00001d9c          	L86_LF2:
 1263  00001d9c  54000000	nop
 1264  00001da0          	L88_LF2:
 1265  00001da0  8fc10000	lw	r1,(r30)
 1266  00001da4  90220000	lbu	r2,(r1)
 1267  00001da8  6c41002f	sgtui	r1,r2,#47
 1268  00001dac  10200030	beqz	r1,L91_LF2
 1269  00001db0  54000000	nop; delay slot nop
 1270  00001db4  8fc10000	lw	r1,(r30)
 1271  00001db8  90220000	lbu	r2,(r1)
 1272  00001dbc  70410039	sleui	r1,r2,#57
 1273  00001dc0  1020001c	beqz	r1,L91_LF2
 1274  00001dc4  54000000	nop; delay slot nop
 1275  00001dc8  8fc10000	lw	r1,(r30)
 1276  00001dcc  90220000	lbu	r2,(r1)
 1277  00001dd0  2041ffd0	addi	r1,r2,#-48
 1278  00001dd4  afc1fff0	sw	-16(r30),r1
 1279  00001dd8  0800008c	j	L92_LF2
 1280  00001ddc  54000000	nop; delay slot nop
 1281  00001de0          	L91_LF2:
 1282  00001de0  8fc10000	lw	r1,(r30)
 1283  00001de4  90220000	lbu	r2,(r1)
 1284  00001de8  6c410060	sgtui	r1,r2,#96
 1285  00001dec  10200030	beqz	r1,L93_LF2
 1286  00001df0  54000000	nop; delay slot nop
 1287  00001df4  8fc10000	lw	r1,(r30)
 1288  00001df8  90220000	lbu	r2,(r1)
 1289  00001dfc  7041007a	sleui	r1,r2,#122
 1290  00001e00  1020001c	beqz	r1,L93_LF2
 1291  00001e04  54000000	nop; delay slot nop
 1292  00001e08  8fc10000	lw	r1,(r30)
 1293  00001e0c  90220000	lbu	r2,(r1)
 1294  00001e10  2041ffa9	addi	r1,r2,#-87
 1295  00001e14  afc1fff0	sw	-16(r30),r1
 1296  00001e18  0800004c	j	L92_LF2
 1297  00001e1c  54000000	nop; delay slot nop
 1298  00001e20          	L93_LF2:
 1299  00001e20  8fc10000	lw	r1,(r30)
 1300  00001e24  90220000	lbu	r2,(r1)
 1301  00001e28  6c410040	sgtui	r1,r2,#64
 1302  00001e2c  10200030	beqz	r1,L95_LF2
 1303  00001e30  54000000	nop; delay slot nop
 1304  00001e34  8fc10000	lw	r1,(r30)
 1305  00001e38  90220000	lbu	r2,(r1)
 1306  00001e3c  7041005a	sleui	r1,r2,#90
 1307  00001e40  1020001c	beqz	r1,L95_LF2
 1308  00001e44  54000000	nop; delay slot nop
 1309  00001e48  8fc10000	lw	r1,(r30)
 1310  00001e4c  90220000	lbu	r2,(r1)
 1311  00001e50  2041ffc9	addi	r1,r2,#-55
 1312  00001e54  afc1fff0	sw	-16(r30),r1
 1313  00001e58  0800000c	j	L92_LF2
 1314  00001e5c  54000000	nop; delay slot nop
 1315  00001e60          	L95_LF2:
 1316  00001e60  200103e8	addi	r1,r0,#1000
 1317  00001e64  afc1fff0	sw	-16(r30),r1
 1318  00001e68          	L96_LF2:
 1319  00001e68          	L94_LF2:
 1320  00001e68          	L92_LF2:
 1321  00001e68  8fc1fff0	lw	r1,-16(r30)
 1322  00001e6c  8fc20008	lw	r2,8(r30)
 1323  00001e70  0022082a	slt	r1,r1,r2
 1324  00001e74  10200040	beqz	r1,L90_LF2
 1325  00001e78  54000000	nop; delay slot nop
 1326  00001e7c  8fc1fff4	lw	r1,-12(r30)
 1327  00001e80  8fc20008	lw	r2,8(r30)
 1328  00001e84  00200035	movi2fp	f0,r1
 1329  00001e88  00400835	movi2fp	f1,r2
 1330  00001e8c  0401000e	mult	f0,f0,f1
 1331  00001e90  00000834	movfp2i	r1,f0
 1332  00001e94  afc1fff4	sw	-12(r30),r1
 1333  00001e98  8fc1fff4	lw	r1,-12(r30)
 1334  00001e9c  8fc2fff0	lw	r2,-16(r30)
 1335  00001ea0  00220820	add	r1,r1,r2
 1336  00001ea4  afc1fff4	sw	-12(r30),r1
 1337  00001ea8  8fc20000	lw	r2,(r30)
 1338  00001eac  20410001	addi	r1,r2,#1
 1339  00001eb0  00011020	add	r2,r0,r1
 1340  00001eb4  afc20000	sw	(r30),r2
 1341  00001eb8          	L97_LF2:
 1342  00001eb8          	L90_LF2:
 1343  00001eb8  8fc1fff0	lw	r1,-16(r30)
 1344  00001ebc  8fc20008	lw	r2,8(r30)
 1345  00001ec0  0022082a	slt	r1,r1,r2
 1346  00001ec4  1420000c	bnez	r1,L98_LF2
 1347  00001ec8  54000000	nop; delay slot nop
 1348  00001ecc  0800000c	j	L89_LF2
 1349  00001ed0  54000000	nop; delay slot nop
 1350  00001ed4          	L98_LF2:
 1351  00001ed4  0bfffec8	j	L88_LF2
 1352  00001ed8  54000000	nop; delay slot nop
 1353  00001edc          	L89_LF2:
 1354  00001edc  8fc10004	lw	r1,4(r30)
 1355  00001ee0  64220000	snei	r2,r1,#0
 1356  00001ee4  10400010	beqz	r2,L99_LF2
 1357  00001ee8  54000000	nop; delay slot nop
 1358  00001eec  8fc10004	lw	r1,4(r30)
 1359  00001ef0  8fc20000	lw	r2,(r30)
 1360  00001ef4  ac220000	sw	(r1),r2
 1361  00001ef8          	L99_LF2:
 1362  00001ef8  8fc1fff4	lw	r1,-12(r30)
 1363  00001efc  8fc2ffec	lw	r2,-20(r30)
 1364  00001f00  00200035	movi2fp	f0,r1
 1365  00001f04  00400835	movi2fp	f1,r2
 1366  00001f08  0401000e	mult	f0,f0,f1
 1367  00001f0c  00000834	movfp2i	r1,f0
 1368  00001f10  afc1fff4	sw	-12(r30),r1
 1369  00001f14  8fc1fff4	lw	r1,-12(r30)
 1370  00001f18  08000004	j	L72_LF2
 1371  00001f1c  54000000	nop; delay slot nop
 1372  00001f20          	L72_LF2:
 1373  00001f20  8fa20000	lw	r2,0(r29)
 1374  00001f24  8fdffff8	lw	r31,-8(r30)
 1375  00001f28  001ee820	add	r29,r0,r30
 1376  00001f2c  8fdefffc	lw	r30,-4(r30)
 1377  00001f30  4be00000	jr	r31
 1378  00001f34  54000000	nop
 1379  00001f38          	.endproc _dstrtol
 1380  00001f38          	.align 2
 1381  00001f38          	.proc _bcopy
 1382  00001f38          	.global _bcopy
 1383  00001f38          	_bcopy:
 1384                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1385  00001f38  afbefffc	sw	-4(r29),r30; push fp
 1386  00001f3c  001df020	add	r30,r0,r29; fp = sp
 1387  00001f40  afbffff8	sw	-8(r29),r31; push ret addr
 1388  00001f44  2fbd0010	subui	r29,r29,#16; alloc local storage
 1389  00001f48  afa20000	sw	0(r29),r2
 1390  00001f4c  afa30004	sw	4(r29),r3
 1391  00001f50  54000000	nop
 1392  00001f54          	L101_LF2:
 1393  00001f54  8fc10008	lw	r1,8(r30)
 1394  00001f58  2022ffff	addi	r2,r1,#-1
 1395  00001f5c  afc20008	sw	8(r30),r2
 1396  00001f60  6c210000	sgti	r1,r1,#0
 1397  00001f64  1420000c	bnez	r1,L103_LF2
 1398  00001f68  54000000	nop; delay slot nop
 1399  00001f6c  0800002c	j	L102_LF2
 1400  00001f70  54000000	nop; delay slot nop
 1401  00001f74          	L103_LF2:
 1402  00001f74  8fc10004	lw	r1,4(r30)
 1403  00001f78  20220001	addi	r2,r1,#1
 1404  00001f7c  afc20004	sw	4(r30),r2
 1405  00001f80  8fc20000	lw	r2,(r30)
 1406  00001f84  20430001	addi	r3,r2,#1
 1407  00001f88  afc30000	sw	(r30),r3
 1408  00001f8c  80420000	lb	r2,(r2)
 1409  00001f90  a0220000	sb	(r1),r2
 1410  00001f94  0bffffbc	j	L101_LF2
 1411  00001f98  54000000	nop; delay slot nop
 1412  00001f9c          	L102_LF2:
 1413  00001f9c          	L100_LF2:
 1414  00001f9c  8fa20000	lw	r2,0(r29)
 1415  00001fa0  8fa30004	lw	r3,4(r29)
 1416  00001fa4  8fdffff8	lw	r31,-8(r30)
 1417  00001fa8  001ee820	add	r29,r0,r30
 1418  00001fac  8fdefffc	lw	r30,-4(r30)
 1419  00001fb0  4be00000	jr	r31
 1420  00001fb4  54000000	nop
 1421  00001fb8          	.endproc _bcopy
 1422  00001fb8          	.align 2
 1423  00001fb8          	.proc _bzero
 1424  00001fb8          	.global _bzero
 1425  00001fb8          	_bzero:
 1426                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1427  00001fb8  afbefffc	sw	-4(r29),r30; push fp
 1428  00001fbc  001df020	add	r30,r0,r29; fp = sp
 1429  00001fc0  afbffff8	sw	-8(r29),r31; push ret addr
 1430  00001fc4  2fbd0010	subui	r29,r29,#16; alloc local storage
 1431  00001fc8  afa20000	sw	0(r29),r2
 1432  00001fcc  54000000	nop
 1433  00001fd0          	L105_LF2:
 1434  00001fd0  8fc10004	lw	r1,4(r30)
 1435  00001fd4  2022ffff	addi	r2,r1,#-1
 1436  00001fd8  afc20004	sw	4(r30),r2
 1437  00001fdc  6c210000	sgti	r1,r1,#0
 1438  00001fe0  1420000c	bnez	r1,L107_LF2
 1439  00001fe4  54000000	nop; delay slot nop
 1440  00001fe8  08000020	j	L106_LF2
 1441  00001fec  54000000	nop; delay slot nop
 1442  00001ff0          	L107_LF2:
 1443  00001ff0  8fc10000	lw	r1,(r30)
 1444  00001ff4  20220001	addi	r2,r1,#1
 1445  00001ff8  afc20000	sw	(r30),r2
 1446  00001ffc  20020000	addi	r2,r0,(#0x0)&0xff
 1447  00002000  a0220000	sb	(r1),r2
 1448  00002004  0bffffc8	j	L105_LF2
 1449  00002008  54000000	nop; delay slot nop
 1450  0000200c          	L106_LF2:
 1451  0000200c          	L104_LF2:
 1452  0000200c  8fa20000	lw	r2,0(r29)
 1453  00002010  8fdffff8	lw	r31,-8(r30)
 1454  00002014  001ee820	add	r29,r0,r30
 1455  00002018  8fdefffc	lw	r30,-4(r30)
 1456  0000201c  4be00000	jr	r31
 1457  00002020  54000000	nop
 1458  00002024          	.endproc _bzero
 1459  00002024          	.align 2
 1460  00002024          	.proc _min
 1461  00002024          	.global _min
 1462  00002024          	_min:
 1463                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1464  00002024  afbefffc	sw	-4(r29),r30; push fp
 1465  00002028  001df020	add	r30,r0,r29; fp = sp
 1466  0000202c  afbffff8	sw	-8(r29),r31; push ret addr
 1467  00002030  2fbd0010	subui	r29,r29,#16; alloc local storage
 1468  00002034  afa20000	sw	0(r29),r2
 1469  00002038  afa30004	sw	4(r29),r3
 1470  0000203c  8fc10000	lw	r1,(r30)
 1471  00002040  8fc20004	lw	r2,4(r30)
 1472  00002044  0022182c	sle	r3,r1,r2
 1473  00002048  14600008	bnez	r3,L109_LF2
 1474  0000204c  54000000	nop; delay slot nop
 1475  00002050  8fc10004	lw	r1,4(r30)
 1476  00002054          	L109_LF2:
 1477  00002054  08000004	j	L108_LF2
 1478  00002058  54000000	nop; delay slot nop
 1479  0000205c          	L108_LF2:
 1480  0000205c  8fa20000	lw	r2,0(r29)
 1481  00002060  8fa30004	lw	r3,4(r29)
 1482  00002064  8fdffff8	lw	r31,-8(r30)
 1483  00002068  001ee820	add	r29,r0,r30
 1484  0000206c  8fdefffc	lw	r30,-4(r30)
 1485  00002070  4be00000	jr	r31
 1486  00002074  54000000	nop
 1487  00002078          	.endproc _min
 1488  00002078          	.align 2
 1489  00002078          	.proc _max
 1490  00002078          	.global _max
 1491  00002078          	_max:
 1492                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1493  00002078  afbefffc	sw	-4(r29),r30; push fp
 1494  0000207c  001df020	add	r30,r0,r29; fp = sp
 1495  00002080  afbffff8	sw	-8(r29),r31; push ret addr
 1496  00002084  2fbd0010	subui	r29,r29,#16; alloc local storage
 1497  00002088  afa20000	sw	0(r29),r2
 1498  0000208c  afa30004	sw	4(r29),r3
 1499  00002090  8fc10000	lw	r1,(r30)
 1500  00002094  8fc20004	lw	r2,4(r30)
 1501  00002098  0022182d	sge	r3,r1,r2
 1502  0000209c  14600008	bnez	r3,L111_LF2
 1503  000020a0  54000000	nop; delay slot nop
 1504  000020a4  8fc10004	lw	r1,4(r30)
 1505  000020a8          	L111_LF2:
 1506  000020a8  08000004	j	L110_LF2
 1507  000020ac  54000000	nop; delay slot nop
 1508  000020b0          	L110_LF2:
 1509  000020b0  8fa20000	lw	r2,0(r29)
 1510  000020b4  8fa30004	lw	r3,4(r29)
 1511  000020b8  8fdffff8	lw	r31,-8(r30)
 1512  000020bc  001ee820	add	r29,r0,r30
 1513  000020c0  8fdefffc	lw	r30,-4(r30)
 1514  000020c4  4be00000	jr	r31
 1515  000020c8  54000000	nop
 1516  000020cc          	.endproc _max
 1517                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1518                      ;;;
 1519                      ;;; Most of the traps are called in files from libtraps.
 1522  000020cc          	.align 2
 1523  000020cc          	.proc _exit
 1524  000020cc          	.global _exit
 1525  000020cc          	_exit:
 1526  000020cc  44000300	trap	#0x300
 1527  000020d0  4be00000	jr	r31
 1528  000020d4  54000000	nop
 1529  000020d8          	.endproc _exit
 1531                      ; for the benefit of gcc.
 1532  000020d8          	.proc ___main
 1533  000020d8          	.global ___main
 1534  000020d8          	___main:
 1535  000020d8  4be00000	jr	r31
 1536  000020dc  54000000	nop
 1537  000020e0          	.endproc ___main
 1538  000020e0          	.text
 1539  000020e0          	.global _etext
 1540  000020e0          	_etext:
 1541  000020e0          	.align 3
 1542  000020e0          	.data
 1543  000031be          	.global _edata
 1544  000031be          	_edata:
