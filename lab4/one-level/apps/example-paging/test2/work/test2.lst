 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 24576
    3                      ; Data size: 243
    4                      ; Text size: 4280
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x3000
    8                      ; Compiled by GCC
    9  00003000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.data
   80  00003000          	.align 2
   81  00003000          	LC0_LF0:
   82  00003000  2d2d2d2d	.ascii "--------------------Running test 2.0 (accessing illegal address) -----"
   82  00003004  2d2d2d2d	
   82  00003008  2d2d2d2d	
   82  0000300c  2d2d2d2d	
   82  00003010  2d2d2d2d	
   82  00003014  52756e6e	
   82  00003018  696e6720	
   82  0000301c  74657374	
   82  00003020  20322e30	
   82  00003024  20286163	
   82  00003028  63657373	
   82  0000302c  696e6720	
   82  00003030  696c6c65	
   82  00003034  67616c20	
   82  00003038  61646472	
   82  0000303c  65737329	
   82  00003040  202d2d2d	
   82  00003044  2d2d    	
   83  00003046  2d2d2d2d	.ascii "----------------\n\000"
   83  0000304a  2d2d2d2d	
   83  0000304e  2d2d2d2d	
   83  00003052  2d2d2d2d	
   83  00003056  0a00    	
   84  00003058          	.align 2
   85  00003058          	LC1_LF0:
   86  00003058  54657374	.ascii "Test (%d): accessing 0xFFFF0000\n\000"
   86  0000305c  20282564	
   86  00003060  293a2061	
   86  00003064  63636573	
   86  00003068  73696e67	
   86  0000306c  20307846	
   86  00003070  46464630	
   86  00003074  3030300a	
   86  00003078  00      	
   87  00003079          	.align 2
   88  0000307c          	LC2_LF0:
   89  0000307c  25640a00	.ascii "%d\n\000"
   90  00003080          	.align 2
   91  00003080          	LC3_LF0:
   92  00003080  2d2d2d2d	.ascii "--------------------End test 2.0 (Your code is incorrect if you see th"
   92  00003084  2d2d2d2d	
   92  00003088  2d2d2d2d	
   92  0000308c  2d2d2d2d	
   92  00003090  2d2d2d2d	
   92  00003094  456e6420	
   92  00003098  74657374	
   92  0000309c  20322e30	
   92  000030a0  2028596f	
   92  000030a4  75722063	
   92  000030a8  6f646520	
   92  000030ac  69732069	
   92  000030b0  6e636f72	
   92  000030b4  72656374	
   92  000030b8  20696620	
   92  000030bc  796f7520	
   92  000030c0  73656520	
   92  000030c4  7468    	
   93  000030c6  6973206c	.ascii "is line printed. :-)) ---------------------\n\000"
   93  000030ca  696e6520	
   93  000030ce  7072696e	
   93  000030d2  7465642e	
   93  000030d6  203a2d29	
   93  000030da  29202d2d	
   93  000030de  2d2d2d2d	
   93  000030e2  2d2d2d2d	
   93  000030e6  2d2d2d2d	
   93  000030ea  2d2d2d2d	
   93  000030ee  2d2d2d0a	
   93  000030f2  00      	
   94  000030f3          	.text
   95  000010d4          	.align 2
   96  000010d4          	.proc _main
   97  000010d4          	.global _main
   98  000010d4          	_main:
   99                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
  100  000010d4  afbefffc	sw	-4(r29),r30; push fp
  101  000010d8  001df020	add	r30,r0,r29; fp = sp
  102  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
  103  000010e0  2fbd0008	subui	r29,r29,#8; alloc local storage
  104  000010e4  8fc20004	lw	r2,4(r30)
  105  000010e8  0c000fb8	jal	___main
  106  000010ec  54000000	nop; not filled.
  107  000010f0  23bdfff0	addi	r29,r29,#-16
  108  000010f4  8c420004	lw	r2,4(r2)
  109  000010f8  afa20000	sw	(r29),r2
  110  000010fc  20030000	addi	r3,r0,#0
  111  00001100  afa30004	sw	4(r29),r3
  112  00001104  2003000a	addi	r3,r0,#10
  113  00001108  afa30008	sw	8(r29),r3
  114  0000110c  0c000a98	jal	_dstrtol
  115  00001110  54000000	nop; not filled.
  116  00001114  00011020	add	r2,r0,r1
  117  00001118  3c030000	lhi	r3,((LC0_LF0)>>16)&0xffff
  118  0000111c  24633000	addui	r3,r3,(LC0_LF0)&0xffff
  119  00001120  afa30000	sw	(r29),r3
  120  00001124  0c0000bc	jal	_Printf
  121  00001128  54000000	nop; not filled.
  122  0000112c  0c0000c0	jal	_getpid
  123  00001130  54000000	nop; not filled.
  124  00001134  3c030000	lhi	r3,((LC1_LF0)>>16)&0xffff
  125  00001138  24633058	addui	r3,r3,(LC1_LF0)&0xffff
  126  0000113c  afa30000	sw	(r29),r3
  127  00001140  afa10004	sw	4(r29),r1
  128  00001144  0c00009c	jal	_Printf
  129  00001148  54000000	nop; not filled.
  130  0000114c  3c030000	lhi	r3,((LC2_LF0)>>16)&0xffff
  131  00001150  2463307c	addui	r3,r3,(LC2_LF0)&0xffff
  132  00001154  afa30000	sw	(r29),r3
  133  00001158  3c01ffff	lhi	r1,#-1
  134  0000115c  24210000	addui	r1,r1,#0
  135  00001160  8c210000	lw	r1,(r1)
  136  00001164  afa10004	sw	4(r29),r1
  137  00001168  0c000f40	jal	_printf
  138  0000116c  54000000	nop; not filled.
  139  00001170  afa20000	sw	(r29),r2
  140  00001174  0c0000c0	jal	_sem_signal
  141  00001178  54000000	nop; not filled.
  142  0000117c  3c030000	lhi	r3,((LC3_LF0)>>16)&0xffff
  143  00001180  24633080	addui	r3,r3,(LC3_LF0)&0xffff
  144  00001184  afa30000	sw	(r29),r3
  145  00001188  0c000058	jal	_Printf
  146  0000118c  54000000	nop; not filled.
  147  00001190  23bd0010	addi	r29,r29,#16
  148  00001194  0c000f00	jal	_exit
  149  00001198  54000000	nop
  150  0000119c          	.endproc _main
  151                      ;;;
  152                      ;;; Stub functions for DLX traps.
  153                      ;;;
  154                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
  155                      ;;;
  156                      ;;; The traps such as Open and Close
  157                      ;;; (note the capital letters) are for use by user programs.  The traps
  158                      ;;; with names such as open and close (lower case) are for use by the OS.
  159                      ;;;
  162  0000119c          	.align 2
  164                      ;;; The following are the traps to be used by user-level programs
  165                      ;;;
  167  0000119c          	.align 2
  168  0000119c          	.proc _Open
  169  0000119c          	.global _Open
  170  0000119c          	_Open:
  171                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
  172                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
  173                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
  174  0000119c  44000213	trap	#0x213
  175  000011a0  4be00000	jr	r31
  176  000011a4  54000000	nop
  177  000011a8          	.endproc _Open
  179  000011a8          	.proc _Close
  180  000011a8          	.global _Close
  181  000011a8          	_Close:
  182  000011a8  44000214	trap	#0x214
  183  000011ac  4be00000	jr	r31
  184  000011b0  54000000	nop
  185  000011b4          	.endproc _Close
  187  000011b4          	.proc _Read
  188  000011b4          	.global _Read
  189  000011b4          	_Read:
  190  000011b4  44000210	trap	#0x210
  191  000011b8  4be00000	jr	r31
  192  000011bc  54000000	nop
  193  000011c0          	.endproc _Read
  195  000011c0          	.proc _Write
  196  000011c0          	.global _Write
  197  000011c0          	_Write:
  198  000011c0  44000211	trap	#0x211
  199  000011c4  4be00000	jr	r31
  200  000011c8  54000000	nop
  201  000011cc          	.endproc _Write
  203  000011cc          	.proc _Lseek
  204  000011cc          	.global _Lseek
  205  000011cc          	_Lseek:
  206  000011cc  44000212	trap	#0x212
  207  000011d0  4be00000	jr	r31
  208  000011d4  54000000	nop
  209  000011d8          	.endproc _Lseek
  211  000011d8          	.proc _Putchar
  212  000011d8          	.global _Putchar
  213  000011d8          	_Putchar:
  214  000011d8  44000280	trap	#0x280
  215  000011dc  4be00000	jr	r31
  216  000011e0  54000000	nop
  217  000011e4          	.endproc _Putchar
  219  000011e4          	.proc _Printf
  220  000011e4          	.global _Printf
  221  000011e4          	_Printf:
  222  000011e4  44000201	trap	#0x201
  223  000011e8  4be00000	jr	r31
  224  000011ec  54000000	nop
  225  000011f0          	.endproc _Printf
  227  000011f0          	.proc _getpid
  228  000011f0          	.global _getpid
  229  000011f0          	_getpid:
  230  000011f0  44000431	trap	#0x431
  231  000011f4  4be00000	jr	r31
  232  000011f8  54000000	nop
  233  000011fc          	.endproc _getpid
  235  000011fc          	.proc _process_create
  236  000011fc          	.global _process_create
  237  000011fc          	_process_create:
  238  000011fc  44000432	trap	#0x432
  239  00001200  4be00000	jr	r31
  240  00001204  54000000	nop
  241  00001208          	.endproc _process_create
  243  00001208          	.proc _shmget
  244  00001208          	.global _shmget
  245  00001208          	_shmget:
  246  00001208  44000440	trap	#0x440
  247  0000120c  4be00000	jr	r31
  248  00001210  54000000	nop
  249  00001214          	.endproc _shmget
  251  00001214          	.proc _shmat
  252  00001214          	.global _shmat
  253  00001214          	_shmat:
  254  00001214  44000441	trap	#0x441
  255  00001218  4be00000	jr	r31
  256  0000121c  54000000	nop
  257  00001220          	.endproc _shmat
  259  00001220          	.proc _sem_create
  260  00001220          	.global _sem_create
  261  00001220          	_sem_create:
  262  00001220  44000450	trap	#0x450
  263  00001224  4be00000	jr	r31
  264  00001228  54000000	nop
  265  0000122c          	.endproc _sem_create
  267  0000122c          	.proc _sem_wait
  268  0000122c          	.global _sem_wait
  269  0000122c          	_sem_wait:
  270  0000122c  44000451	trap	#0x451
  271  00001230  4be00000	jr	r31
  272  00001234  54000000	nop
  273  00001238          	.endproc _sem_wait
  275  00001238          	.proc _sem_signal
  276  00001238          	.global _sem_signal
  277  00001238          	_sem_signal:
  278  00001238  44000452	trap	#0x452
  279  0000123c  4be00000	jr	r31
  280  00001240  54000000	nop
  281  00001244          	.endproc _sem_signal
  283  00001244          	.proc _lock_create
  284  00001244          	.global _lock_create
  285  00001244          	_lock_create:
  286  00001244  44000453	trap	#0x453
  287  00001248  4be00000	jr	r31
  288  0000124c  54000000	nop
  289  00001250          	.endproc _lock_create
  291  00001250          	.proc _lock_acquire
  292  00001250          	.global _lock_acquire
  293  00001250          	_lock_acquire:
  294  00001250  44000454	trap	#0x454
  295  00001254  4be00000	jr	r31
  296  00001258  54000000	nop
  297  0000125c          	.endproc _lock_acquire
  299  0000125c          	.proc _lock_release
  300  0000125c          	.global _lock_release
  301  0000125c          	_lock_release:
  302  0000125c  44000455	trap	#0x455
  303  00001260  4be00000	jr	r31
  304  00001264  54000000	nop
  305  00001268          	.endproc _lock_release
  307  00001268          	.proc _cond_create
  308  00001268          	.global _cond_create
  309  00001268          	_cond_create:
  310  00001268  44000456	trap	#0x456
  311  0000126c  4be00000	jr	r31
  312  00001270  54000000	nop
  313  00001274          	.endproc _cond_create
  315  00001274          	.proc _cond_wait
  316  00001274          	.global _cond_wait
  317  00001274          	_cond_wait:
  318  00001274  44000457	trap	#0x457
  319  00001278  4be00000	jr	r31
  320  0000127c  54000000	nop
  321  00001280          	.endproc _cond_wait
  323  00001280          	.proc _cond_signal
  324  00001280          	.global _cond_signal
  325  00001280          	_cond_signal:
  326  00001280  44000458	trap	#0x458
  327  00001284  4be00000	jr	r31
  328  00001288  54000000	nop
  329  0000128c          	.endproc _cond_signal
  331  0000128c          	.proc _cond_broadcast
  332  0000128c          	.global _cond_broadcast
  333  0000128c          	_cond_broadcast:
  334  0000128c  44000459	trap	#0x459
  335  00001290  4be00000	jr	r31
  336  00001294  54000000	nop
  337  00001298          	.endproc _cond_broadcast
  339  00001298          	.proc _mbox_create
  340  00001298          	.global _mbox_create
  341  00001298          	_mbox_create:
  342  00001298  44000460	trap	#0x460
  343  0000129c  4be00000	jr	r31
  344  000012a0  54000000	nop
  345  000012a4          	.endproc _mbox_create
  347  000012a4          	.proc _mbox_open
  348  000012a4          	.global _mbox_open
  349  000012a4          	_mbox_open:
  350  000012a4  44000461	trap	#0x461
  351  000012a8  4be00000	jr	r31
  352  000012ac  54000000	nop
  353  000012b0          	.endproc _mbox_open
  355  000012b0          	.proc _mbox_close
  356  000012b0          	.global _mbox_close
  357  000012b0          	_mbox_close:
  358  000012b0  44000462	trap	#0x462
  359  000012b4  4be00000	jr	r31
  360  000012b8  54000000	nop
  361  000012bc          	.endproc _mbox_close
  363  000012bc          	.proc _mbox_send
  364  000012bc          	.global _mbox_send
  365  000012bc          	_mbox_send:
  366  000012bc  44000463	trap	#0x463
  367  000012c0  4be00000	jr	r31
  368  000012c4  54000000	nop
  369  000012c8          	.endproc _mbox_send
  371  000012c8          	.proc _mbox_recv
  372  000012c8          	.global _mbox_recv
  373  000012c8          	_mbox_recv:
  374  000012c8  44000464	trap	#0x464
  375  000012cc  4be00000	jr	r31
  376  000012d0  54000000	nop
  377  000012d4          	.endproc _mbox_recv
  379  000012d4          	.proc _sleep
  380  000012d4          	.global _sleep
  381  000012d4          	_sleep:
  382  000012d4  44000465	trap	#0x465
  383  000012d8  4be00000	jr	r31
  384  000012dc  54000000	nop
  385  000012e0          	.endproc _sleep
  387  000012e0          	.proc _yield
  388  000012e0          	.global _yield
  389  000012e0          	_yield:
  390  000012e0  44000466	trap	#0x466
  391  000012e4  4be00000	jr	r31
  392  000012e8  54000000	nop
  393  000012ec          	.endproc _yield
  396  000012ec          	.proc _Exit
  397  000012ec          	.global _Exit
  398  000012ec          	_Exit:
  399  000012ec  44000500	trap	#0x500
  400  000012f0  4be00000	jr	r31
  401  000012f4  54000000	nop
  402  000012f8          	.endproc _Exit
  405  000012f8          	.proc _malloc
  406  000012f8          	.global _malloc
  407  000012f8          	_malloc:
  408  000012f8  44000467	trap	#0x467
  409  000012fc  4be00000	jr	r31
  410  00001300          	.endproc _malloc
  413  00001300          	.proc _mfree
  414  00001300          	.global _mfree
  415  00001300          	_mfree:
  416  00001300  44000468	trap	#0x468
  417  00001304  4be00000	jr	r31
  418  00001308          	.endproc _mfree
  419                      ; Compiled by GCC
  421  00001308          	.align 2
  422  00001308          	.proc _isspace
  423  00001308          	.global _isspace
  424  00001308          	_isspace:
  425                      ;  Function 'isspace'; 0 bytes of locals, 3 regs to save.
  426  00001308  afbefffc	sw	-4(r29),r30; push fp
  427  0000130c  001df020	add	r30,r0,r29; fp = sp
  428  00001310  afbffff8	sw	-8(r29),r31; push ret addr
  429  00001314  2fbd0018	subui	r29,r29,#24; alloc local storage
  430  00001318  afa20000	sw	0(r29),r2
  431  0000131c  afa30004	sw	4(r29),r3
  432  00001320  afa40008	sw	8(r29),r4
  433  00001324  83c20003	lb	r2,3(r30)
  434  00001328  20010000	addi	r1,r0,#0
  435  0000132c  304300ff	andi	r3,r2,#0x00ff
  436  00001330  60640020	seqi	r4,r3,#32
  437  00001334  1480002c	bnez	r4,L3_LF2
  438  00001338  54000000	nop; delay slot nop
  439  0000133c  304300ff	andi	r3,r2,#0x00ff
  440  00001340  60640009	seqi	r4,r3,#9
  441  00001344  1480001c	bnez	r4,L3_LF2
  442  00001348  54000000	nop; delay slot nop
  443  0000134c  304300ff	andi	r3,r2,#0x00ff
  444  00001350  6064000a	seqi	r4,r3,#10
  445  00001354  1480000c	bnez	r4,L3_LF2
  446  00001358  54000000	nop; delay slot nop
  447  0000135c  08000008	j	L2_LF2
  448  00001360  54000000	nop; delay slot nop
  449  00001364          	L3_LF2:
  450  00001364  20010001	addi	r1,r0,#1
  451  00001368          	L2_LF2:
  452  00001368  08000004	j	L1_LF2
  453  0000136c  54000000	nop; delay slot nop
  454  00001370          	L1_LF2:
  455  00001370  8fa20000	lw	r2,0(r29)
  456  00001374  8fa30004	lw	r3,4(r29)
  457  00001378  8fa40008	lw	r4,8(r29)
  458  0000137c  8fdffff8	lw	r31,-8(r30)
  459  00001380  001ee820	add	r29,r0,r30
  460  00001384  8fdefffc	lw	r30,-4(r30)
  461  00001388  4be00000	jr	r31
  462  0000138c  54000000	nop
  463  00001390          	.endproc _isspace
  464  00001390          	.align 2
  465  00001390          	.proc _isxdigit
  466  00001390          	.global _isxdigit
  467  00001390          	_isxdigit:
  468                      ;  Function 'isxdigit'; 0 bytes of locals, 3 regs to save.
  469  00001390  afbefffc	sw	-4(r29),r30; push fp
  470  00001394  001df020	add	r30,r0,r29; fp = sp
  471  00001398  afbffff8	sw	-8(r29),r31; push ret addr
  472  0000139c  2fbd0018	subui	r29,r29,#24; alloc local storage
  473  000013a0  afa20000	sw	0(r29),r2
  474  000013a4  afa30004	sw	4(r29),r3
  475  000013a8  afa40008	sw	8(r29),r4
  476  000013ac  83c20003	lb	r2,3(r30)
  477  000013b0  20010000	addi	r1,r0,#0
  478  000013b4  304300ff	andi	r3,r2,#0x00ff
  479  000013b8  6c64002f	sgtui	r4,r3,#47
  480  000013bc  1080001c	beqz	r4,L7_LF2
  481  000013c0  54000000	nop; delay slot nop
  482  000013c4  304300ff	andi	r3,r2,#0x00ff
  483  000013c8  70640039	sleui	r4,r3,#57
  484  000013cc  1480005c	bnez	r4,L6_LF2
  485  000013d0  54000000	nop; delay slot nop
  486  000013d4  08000004	j	L7_LF2
  487  000013d8  54000000	nop; delay slot nop
  488  000013dc          	L7_LF2:
  489  000013dc  304300ff	andi	r3,r2,#0x00ff
  490  000013e0  6c640060	sgtui	r4,r3,#96
  491  000013e4  1080001c	beqz	r4,L8_LF2
  492  000013e8  54000000	nop; delay slot nop
  493  000013ec  304300ff	andi	r3,r2,#0x00ff
  494  000013f0  70640066	sleui	r4,r3,#102
  495  000013f4  14800034	bnez	r4,L6_LF2
  496  000013f8  54000000	nop; delay slot nop
  497  000013fc  08000004	j	L8_LF2
  498  00001400  54000000	nop; delay slot nop
  499  00001404          	L8_LF2:
  500  00001404  304300ff	andi	r3,r2,#0x00ff
  501  00001408  6c640040	sgtui	r4,r3,#64
  502  0000140c  10800020	beqz	r4,L5_LF2
  503  00001410  54000000	nop; delay slot nop
  504  00001414  304300ff	andi	r3,r2,#0x00ff
  505  00001418  70640041	sleui	r4,r3,#65
  506  0000141c  1480000c	bnez	r4,L6_LF2
  507  00001420  54000000	nop; delay slot nop
  508  00001424  08000008	j	L5_LF2
  509  00001428  54000000	nop; delay slot nop
  510  0000142c          	L6_LF2:
  511  0000142c  20010001	addi	r1,r0,#1
  512  00001430          	L5_LF2:
  513  00001430  08000004	j	L4_LF2
  514  00001434  54000000	nop; delay slot nop
  515  00001438          	L4_LF2:
  516  00001438  8fa20000	lw	r2,0(r29)
  517  0000143c  8fa30004	lw	r3,4(r29)
  518  00001440  8fa40008	lw	r4,8(r29)
  519  00001444  8fdffff8	lw	r31,-8(r30)
  520  00001448  001ee820	add	r29,r0,r30
  521  0000144c  8fdefffc	lw	r30,-4(r30)
  522  00001450  4be00000	jr	r31
  523  00001454  54000000	nop
  524  00001458          	.endproc _isxdigit
  525  00001458          	.align 2
  526  00001458          	.proc _dstrcpy
  527  00001458          	.global _dstrcpy
  528  00001458          	_dstrcpy:
  529                      ;  Function 'dstrcpy'; 8 bytes of locals, 2 regs to save.
  530  00001458  afbefffc	sw	-4(r29),r30; push fp
  531  0000145c  001df020	add	r30,r0,r29; fp = sp
  532  00001460  afbffff8	sw	-8(r29),r31; push ret addr
  533  00001464  2fbd0018	subui	r29,r29,#24; alloc local storage
  534  00001468  afa20000	sw	0(r29),r2
  535  0000146c  afa30004	sw	4(r29),r3
  536  00001470  8fc10000	lw	r1,(r30)
  537  00001474  afc1fff4	sw	-12(r30),r1
  538  00001478          	L10_LF2:
  539  00001478  8fc10000	lw	r1,(r30)
  540  0000147c  20220001	addi	r2,r1,#1
  541  00001480  afc20000	sw	(r30),r2
  542  00001484  8fc20004	lw	r2,4(r30)
  543  00001488  20430001	addi	r3,r2,#1
  544  0000148c  afc30004	sw	4(r30),r3
  545  00001490  80420000	lb	r2,(r2)
  546  00001494  a0220000	sb	(r1),r2
  547  00001498  a3c2fff3	sb	-13(r30),r2
  548  0000149c          	L12_LF2:
  549  0000149c  93c1fff3	lbu	r1,-13(r30)
  550  000014a0  64220000	snei	r2,r1,#0
  551  000014a4  1440000c	bnez	r2,L13_LF2
  552  000014a8  54000000	nop; delay slot nop
  553  000014ac  0800000c	j	L11_LF2
  554  000014b0  54000000	nop; delay slot nop
  555  000014b4          	L13_LF2:
  556  000014b4  0bffffc0	j	L10_LF2
  557  000014b8  54000000	nop; delay slot nop
  558  000014bc          	L11_LF2:
  559  000014bc  8fc1fff4	lw	r1,-12(r30)
  560  000014c0  08000004	j	L9_LF2
  561  000014c4  54000000	nop; delay slot nop
  562  000014c8          	L9_LF2:
  563  000014c8  8fa20000	lw	r2,0(r29)
  564  000014cc  8fa30004	lw	r3,4(r29)
  565  000014d0  8fdffff8	lw	r31,-8(r30)
  566  000014d4  001ee820	add	r29,r0,r30
  567  000014d8  8fdefffc	lw	r30,-4(r30)
  568  000014dc  4be00000	jr	r31
  569  000014e0  54000000	nop
  570  000014e4          	.endproc _dstrcpy
  571  000014e4          	.align 2
  572  000014e4          	.proc _dstrncpy
  573  000014e4          	.global _dstrncpy
  574  000014e4          	_dstrncpy:
  575                      ;  Function 'dstrncpy'; 8 bytes of locals, 2 regs to save.
  576  000014e4  afbefffc	sw	-4(r29),r30; push fp
  577  000014e8  001df020	add	r30,r0,r29; fp = sp
  578  000014ec  afbffff8	sw	-8(r29),r31; push ret addr
  579  000014f0  2fbd0018	subui	r29,r29,#24; alloc local storage
  580  000014f4  afa20000	sw	0(r29),r2
  581  000014f8  afa30004	sw	4(r29),r3
  582  000014fc  8fc10000	lw	r1,(r30)
  583  00001500  afc1fff4	sw	-12(r30),r1
  584  00001504          	L15_LF2:
  585  00001504  8fc10008	lw	r1,8(r30)
  586  00001508  2022ffff	addi	r2,r1,#-1
  587  0000150c  afc20008	sw	8(r30),r2
  588  00001510  70210000	slei	r1,r1,#0
  589  00001514  1020000c	beqz	r1,L18_LF2
  590  00001518  54000000	nop; delay slot nop
  591  0000151c  08000048	j	L16_LF2
  592  00001520  54000000	nop; delay slot nop
  593  00001524          	L18_LF2:
  594  00001524  8fc10000	lw	r1,(r30)
  595  00001528  20220001	addi	r2,r1,#1
  596  0000152c  afc20000	sw	(r30),r2
  597  00001530  8fc20004	lw	r2,4(r30)
  598  00001534  20430001	addi	r3,r2,#1
  599  00001538  afc30004	sw	4(r30),r3
  600  0000153c  80420000	lb	r2,(r2)
  601  00001540  a0220000	sb	(r1),r2
  602  00001544  a3c2fff3	sb	-13(r30),r2
  603  00001548          	L17_LF2:
  604  00001548  93c1fff3	lbu	r1,-13(r30)
  605  0000154c  64220000	snei	r2,r1,#0
  606  00001550  1440000c	bnez	r2,L19_LF2
  607  00001554  54000000	nop; delay slot nop
  608  00001558  0800000c	j	L16_LF2
  609  0000155c  54000000	nop; delay slot nop
  610  00001560          	L19_LF2:
  611  00001560  0bffffa0	j	L15_LF2
  612  00001564  54000000	nop; delay slot nop
  613  00001568          	L16_LF2:
  614  00001568  8fc1fff4	lw	r1,-12(r30)
  615  0000156c  08000004	j	L14_LF2
  616  00001570  54000000	nop; delay slot nop
  617  00001574          	L14_LF2:
  618  00001574  8fa20000	lw	r2,0(r29)
  619  00001578  8fa30004	lw	r3,4(r29)
  620  0000157c  8fdffff8	lw	r31,-8(r30)
  621  00001580  001ee820	add	r29,r0,r30
  622  00001584  8fdefffc	lw	r30,-4(r30)
  623  00001588  4be00000	jr	r31
  624  0000158c  54000000	nop
  625  00001590          	.endproc _dstrncpy
  626  00001590          	.align 2
  627  00001590          	.proc _dstrcat
  628  00001590          	.global _dstrcat
  629  00001590          	_dstrcat:
  630                      ;  Function 'dstrcat'; 8 bytes of locals, 1 regs to save.
  631  00001590  afbefffc	sw	-4(r29),r30; push fp
  632  00001594  001df020	add	r30,r0,r29; fp = sp
  633  00001598  afbffff8	sw	-8(r29),r31; push ret addr
  634  0000159c  2fbd0018	subui	r29,r29,#24; alloc local storage
  635  000015a0  afa20000	sw	0(r29),r2
  636  000015a4  8fc10000	lw	r1,(r30)
  637  000015a8  afc1fff4	sw	-12(r30),r1
  638  000015ac          	L21_LF2:
  639  000015ac  8fc10000	lw	r1,(r30)
  640  000015b0  90220000	lbu	r2,(r1)
  641  000015b4  64410000	snei	r1,r2,#0
  642  000015b8  1420000c	bnez	r1,L23_LF2
  643  000015bc  54000000	nop; delay slot nop
  644  000015c0  0800001c	j	L22_LF2
  645  000015c4  54000000	nop; delay slot nop
  646  000015c8          	L23_LF2:
  647  000015c8  8fc20000	lw	r2,(r30)
  648  000015cc  20410001	addi	r1,r2,#1
  649  000015d0  00011020	add	r2,r0,r1
  650  000015d4  afc20000	sw	(r30),r2
  651  000015d8  0bffffd0	j	L21_LF2
  652  000015dc  54000000	nop; delay slot nop
  653  000015e0          	L22_LF2:
  654  000015e0  23bdfff8	addi	r29,r29,#-8
  655  000015e4  001d0820	add	r1,r0,r29
  656  000015e8  8fc20000	lw	r2,(r30)
  657  000015ec  ac220000	sw	(r1),r2
  658  000015f0  8fc20004	lw	r2,4(r30)
  659  000015f4  ac220004	sw	4(r1),r2
  660  000015f8  0ffffe5c	jal	_dstrcpy
  661  000015fc  54000000	nop; delay slot nop
  662  00001600  23bd0008	addi	r29,r29,#8
  663  00001604  8fc1fff4	lw	r1,-12(r30)
  664  00001608  08000004	j	L20_LF2
  665  0000160c  54000000	nop; delay slot nop
  666  00001610          	L20_LF2:
  667  00001610  8fa20000	lw	r2,0(r29)
  668  00001614  8fdffff8	lw	r31,-8(r30)
  669  00001618  001ee820	add	r29,r0,r30
  670  0000161c  8fdefffc	lw	r30,-4(r30)
  671  00001620  4be00000	jr	r31
  672  00001624  54000000	nop
  673  00001628          	.endproc _dstrcat
  674  00001628          	.align 2
  675  00001628          	.proc _dstrncmp
  676  00001628          	.global _dstrncmp
  677  00001628          	_dstrncmp:
  678                      ;  Function 'dstrncmp'; 8 bytes of locals, 2 regs to save.
  679  00001628  afbefffc	sw	-4(r29),r30; push fp
  680  0000162c  001df020	add	r30,r0,r29; fp = sp
  681  00001630  afbffff8	sw	-8(r29),r31; push ret addr
  682  00001634  2fbd0018	subui	r29,r29,#24; alloc local storage
  683  00001638  afa20000	sw	0(r29),r2
  684  0000163c  afa30004	sw	4(r29),r3
  685  00001640  54000000	nop
  686  00001644  20010000	addi	r1,r0,#0
  687  00001648  afc1fff4	sw	-12(r30),r1
  688  0000164c          	L25_LF2:
  689  0000164c  8fc1fff4	lw	r1,-12(r30)
  690  00001650  8fc20008	lw	r2,8(r30)
  691  00001654  0022082a	slt	r1,r1,r2
  692  00001658  1420000c	bnez	r1,L28_LF2
  693  0000165c  54000000	nop; delay slot nop
  694  00001660  08000088	j	L26_LF2
  695  00001664  54000000	nop; delay slot nop
  696  00001668          	L28_LF2:
  697  00001668  8fc10004	lw	r1,4(r30)
  698  0000166c  90220000	lbu	r2,(r1)
  699  00001670  64410000	snei	r1,r2,#0
  700  00001674  14200018	bnez	r1,L29_LF2
  701  00001678  54000000	nop; delay slot nop
  702  0000167c  20010000	addi	r1,r0,#0
  703  00001680  080000d8	j	L24_LF2
  704  00001684  54000000	nop; delay slot nop
  705  00001688  08000028	j	L30_LF2
  706  0000168c  54000000	nop; delay slot nop
  707  00001690          	L29_LF2:
  708  00001690  8fc10000	lw	r1,(r30)
  709  00001694  8fc20004	lw	r2,4(r30)
  710  00001698  90210000	lbu	r1,(r1)
  711  0000169c  90420000	lbu	r2,(r2)
  712  000016a0  00220829	sne	r1,r1,r2
  713  000016a4  1020000c	beqz	r1,L30_LF2
  714  000016a8  54000000	nop; delay slot nop
  715  000016ac  0800003c	j	L26_LF2
  716  000016b0  54000000	nop; delay slot nop
  717  000016b4          	L31_LF2:
  718  000016b4          	L30_LF2:
  719  000016b4  8fc20000	lw	r2,(r30)
  720  000016b8  20410001	addi	r1,r2,#1
  721  000016bc  00011020	add	r2,r0,r1
  722  000016c0  afc20000	sw	(r30),r2
  723  000016c4  8fc20004	lw	r2,4(r30)
  724  000016c8  20410001	addi	r1,r2,#1
  725  000016cc  00011020	add	r2,r0,r1
  726  000016d0  afc20004	sw	4(r30),r2
  727  000016d4          	L27_LF2:
  728  000016d4  8fc2fff4	lw	r2,-12(r30)
  729  000016d8  20410001	addi	r1,r2,#1
  730  000016dc  00011020	add	r2,r0,r1
  731  000016e0  afc2fff4	sw	-12(r30),r2
  732  000016e4  0bffff64	j	L25_LF2
  733  000016e8  54000000	nop; delay slot nop
  734  000016ec          	L26_LF2:
  735  000016ec  8fc1fff4	lw	r1,-12(r30)
  736  000016f0  8fc20008	lw	r2,8(r30)
  737  000016f4  00220828	seq	r1,r1,r2
  738  000016f8  10200018	beqz	r1,L32_LF2
  739  000016fc  54000000	nop; delay slot nop
  740  00001700  20010000	addi	r1,r0,#0
  741  00001704  08000054	j	L24_LF2
  742  00001708  54000000	nop; delay slot nop
  743  0000170c  0800004c	j	L33_LF2
  744  00001710  54000000	nop; delay slot nop
  745  00001714          	L32_LF2:
  746  00001714  8fc20000	lw	r2,(r30)
  747  00001718  90410000	lbu	r1,(r2)
  748  0000171c  8fc20004	lw	r2,4(r30)
  749  00001720  90430000	lbu	r3,(r2)
  750  00001724  00230822	sub	r1,r1,r3
  751  00001728  74220000	sgei	r2,r1,#0
  752  0000172c  10400020	beqz	r2,L34_LF2
  753  00001730  54000000	nop; delay slot nop
  754  00001734  8fc10000	lw	r1,(r30)
  755  00001738  8fc20004	lw	r2,4(r30)
  756  0000173c  90210000	lbu	r1,(r1)
  757  00001740  90420000	lbu	r2,(r2)
  758  00001744  00220829	sne	r1,r1,r2
  759  00001748  08000008	j	L35_LF2
  760  0000174c  54000000	nop; delay slot nop
  761  00001750          	L34_LF2:
  762  00001750  2001ffff	addi	r1,r0,#-1
  763  00001754          	L35_LF2:
  764  00001754  08000004	j	L24_LF2
  765  00001758  54000000	nop; delay slot nop
  766  0000175c          	L33_LF2:
  767  0000175c          	L24_LF2:
  768  0000175c  8fa20000	lw	r2,0(r29)
  769  00001760  8fa30004	lw	r3,4(r29)
  770  00001764  8fdffff8	lw	r31,-8(r30)
  771  00001768  001ee820	add	r29,r0,r30
  772  0000176c  8fdefffc	lw	r30,-4(r30)
  773  00001770  4be00000	jr	r31
  774  00001774  54000000	nop
  775  00001778          	.endproc _dstrncmp
  776  00001778          	.align 2
  777  00001778          	.proc _dstrlen
  778  00001778          	.global _dstrlen
  779  00001778          	_dstrlen:
  780                      ;  Function 'dstrlen'; 8 bytes of locals, 1 regs to save.
  781  00001778  afbefffc	sw	-4(r29),r30; push fp
  782  0000177c  001df020	add	r30,r0,r29; fp = sp
  783  00001780  afbffff8	sw	-8(r29),r31; push ret addr
  784  00001784  2fbd0018	subui	r29,r29,#24; alloc local storage
  785  00001788  afa20000	sw	0(r29),r2
  786  0000178c  20010000	addi	r1,r0,#0
  787  00001790  afc1fff4	sw	-12(r30),r1
  788  00001794          	L37_LF2:
  789  00001794  8fc10000	lw	r1,(r30)
  790  00001798  20220001	addi	r2,r1,#1
  791  0000179c  afc20000	sw	(r30),r2
  792  000017a0  90210000	lbu	r1,(r1)
  793  000017a4  64220000	snei	r2,r1,#0
  794  000017a8  1440000c	bnez	r2,L39_LF2
  795  000017ac  54000000	nop; delay slot nop
  796  000017b0  0800001c	j	L38_LF2
  797  000017b4  54000000	nop; delay slot nop
  798  000017b8          	L39_LF2:
  799  000017b8  8fc2fff4	lw	r2,-12(r30)
  800  000017bc  20410001	addi	r1,r2,#1
  801  000017c0  00011020	add	r2,r0,r1
  802  000017c4  afc2fff4	sw	-12(r30),r2
  803  000017c8  0bffffc8	j	L37_LF2
  804  000017cc  54000000	nop; delay slot nop
  805  000017d0          	L38_LF2:
  806  000017d0  8fc1fff4	lw	r1,-12(r30)
  807  000017d4  08000004	j	L36_LF2
  808  000017d8  54000000	nop; delay slot nop
  809  000017dc          	L36_LF2:
  810  000017dc  8fa20000	lw	r2,0(r29)
  811  000017e0  8fdffff8	lw	r31,-8(r30)
  812  000017e4  001ee820	add	r29,r0,r30
  813  000017e8  8fdefffc	lw	r30,-4(r30)
  814  000017ec  4be00000	jr	r31
  815  000017f0  54000000	nop
  816  000017f4          	.endproc _dstrlen
  817  000017f4          	.align 2
  818  000017f4          	.proc _dstrstr
  819  000017f4          	.global _dstrstr
  820  000017f4          	_dstrstr:
  821                      ;  Function 'dstrstr'; 8 bytes of locals, 1 regs to save.
  822  000017f4  afbefffc	sw	-4(r29),r30; push fp
  823  000017f8  001df020	add	r30,r0,r29; fp = sp
  824  000017fc  afbffff8	sw	-8(r29),r31; push ret addr
  825  00001800  2fbd0018	subui	r29,r29,#24; alloc local storage
  826  00001804  afa20000	sw	0(r29),r2
  827  00001808  23bdfff8	addi	r29,r29,#-8
  828  0000180c  001d0820	add	r1,r0,r29
  829  00001810  8fc20004	lw	r2,4(r30)
  830  00001814  ac220000	sw	(r1),r2
  831  00001818  0fffff5c	jal	_dstrlen
  832  0000181c  54000000	nop; delay slot nop
  833  00001820  23bd0008	addi	r29,r29,#8
  834  00001824  afc1fff4	sw	-12(r30),r1
  835  00001828          	L41_LF2:
  836  00001828  8fc10000	lw	r1,(r30)
  837  0000182c  90220000	lbu	r2,(r1)
  838  00001830  64410000	snei	r1,r2,#0
  839  00001834  1420000c	bnez	r1,L43_LF2
  840  00001838  54000000	nop; delay slot nop
  841  0000183c  08000060	j	L42_LF2
  842  00001840  54000000	nop; delay slot nop
  843  00001844          	L43_LF2:
  844  00001844  23bdfff0	addi	r29,r29,#-16
  845  00001848  001d0820	add	r1,r0,r29
  846  0000184c  8fc20000	lw	r2,(r30)
  847  00001850  ac220000	sw	(r1),r2
  848  00001854  8fc20004	lw	r2,4(r30)
  849  00001858  ac220004	sw	4(r1),r2
  850  0000185c  8fc2fff4	lw	r2,-12(r30)
  851  00001860  ac220008	sw	8(r1),r2
  852  00001864  0ffffdc0	jal	_dstrncmp
  853  00001868  54000000	nop; delay slot nop
  854  0000186c  23bd0010	addi	r29,r29,#16
  855  00001870  64220000	snei	r2,r1,#0
  856  00001874  14400010	bnez	r2,L44_LF2
  857  00001878  54000000	nop; delay slot nop
  858  0000187c  8fc10000	lw	r1,(r30)
  859  00001880  08000028	j	L40_LF2
  860  00001884  54000000	nop; delay slot nop
  861  00001888          	L44_LF2:
  862  00001888  8fc20000	lw	r2,(r30)
  863  0000188c  20410001	addi	r1,r2,#1
  864  00001890  00011020	add	r2,r0,r1
  865  00001894  afc20000	sw	(r30),r2
  866  00001898  0bffff8c	j	L41_LF2
  867  0000189c  54000000	nop; delay slot nop
  868  000018a0          	L42_LF2:
  869  000018a0  20010000	addi	r1,r0,#0
  870  000018a4  08000004	j	L40_LF2
  871  000018a8  54000000	nop; delay slot nop
  872  000018ac          	L40_LF2:
  873  000018ac  8fa20000	lw	r2,0(r29)
  874  000018b0  8fdffff8	lw	r31,-8(r30)
  875  000018b4  001ee820	add	r29,r0,r30
  876  000018b8  8fdefffc	lw	r30,-4(r30)
  877  000018bc  4be00000	jr	r31
  878  000018c0  54000000	nop
  879  000018c4          	.endproc _dstrstr
  880  000018c4          	.align 2
  881  000018c4          	.proc _dmindex
  882  000018c4          	.global _dmindex
  883  000018c4          	_dmindex:
  884                      ;  Function 'dmindex'; 8 bytes of locals, 1 regs to save.
  885  000018c4  afbefffc	sw	-4(r29),r30; push fp
  886  000018c8  001df020	add	r30,r0,r29; fp = sp
  887  000018cc  afbffff8	sw	-8(r29),r31; push ret addr
  888  000018d0  2fbd0018	subui	r29,r29,#24; alloc local storage
  889  000018d4  afa20000	sw	0(r29),r2
  890  000018d8  54000000	nop
  891  000018dc          	L46_LF2:
  892  000018dc  8fc10000	lw	r1,(r30)
  893  000018e0  90220000	lbu	r2,(r1)
  894  000018e4  64410000	snei	r1,r2,#0
  895  000018e8  1420000c	bnez	r1,L48_LF2
  896  000018ec  54000000	nop; delay slot nop
  897  000018f0  08000070	j	L47_LF2
  898  000018f4  54000000	nop; delay slot nop
  899  000018f8          	L48_LF2:
  900  000018f8  8fc10004	lw	r1,4(r30)
  901  000018fc  afc1fff4	sw	-12(r30),r1
  902  00001900          	L49_LF2:
  903  00001900  8fc1fff4	lw	r1,-12(r30)
  904  00001904  90220000	lbu	r2,(r1)
  905  00001908  64410000	snei	r1,r2,#0
  906  0000190c  1420000c	bnez	r1,L52_LF2
  907  00001910  54000000	nop; delay slot nop
  908  00001914  08000044	j	L50_LF2
  909  00001918  54000000	nop; delay slot nop
  910  0000191c          	L52_LF2:
  911  0000191c  8fc10000	lw	r1,(r30)
  912  00001920  8fc2fff4	lw	r2,-12(r30)
  913  00001924  90210000	lbu	r1,(r1)
  914  00001928  90420000	lbu	r2,(r2)
  915  0000192c  00220828	seq	r1,r1,r2
  916  00001930  10200010	beqz	r1,L51_LF2
  917  00001934  54000000	nop; delay slot nop
  918  00001938  8fc10000	lw	r1,(r30)
  919  0000193c  08000030	j	L45_LF2
  920  00001940  54000000	nop; delay slot nop
  921  00001944          	L53_LF2:
  922  00001944          	L51_LF2:
  923  00001944  8fc2fff4	lw	r2,-12(r30)
  924  00001948  20410001	addi	r1,r2,#1
  925  0000194c  00011020	add	r2,r0,r1
  926  00001950  afc2fff4	sw	-12(r30),r2
  927  00001954  0bffffa8	j	L49_LF2
  928  00001958  54000000	nop; delay slot nop
  929  0000195c          	L50_LF2:
  930  0000195c  0bffff7c	j	L46_LF2
  931  00001960  54000000	nop; delay slot nop
  932  00001964          	L47_LF2:
  933  00001964  20010000	addi	r1,r0,#0
  934  00001968  08000004	j	L45_LF2
  935  0000196c  54000000	nop; delay slot nop
  936  00001970          	L45_LF2:
  937  00001970  8fa20000	lw	r2,0(r29)
  938  00001974  8fdffff8	lw	r31,-8(r30)
  939  00001978  001ee820	add	r29,r0,r30
  940  0000197c  8fdefffc	lw	r30,-4(r30)
  941  00001980  4be00000	jr	r31
  942  00001984  54000000	nop
  943  00001988          	.endproc _dmindex
  944  00001988          	.align 2
  945  00001988          	.proc _dindex
  946  00001988          	.global _dindex
  947  00001988          	_dindex:
  948                      ;  Function 'dindex'; 0 bytes of locals, 1 regs to save.
  949  00001988  afbefffc	sw	-4(r29),r30; push fp
  950  0000198c  001df020	add	r30,r0,r29; fp = sp
  951  00001990  afbffff8	sw	-8(r29),r31; push ret addr
  952  00001994  2fbd0010	subui	r29,r29,#16; alloc local storage
  953  00001998  afa20000	sw	0(r29),r2
  954  0000199c  54000000	nop
  955  000019a0          	L55_LF2:
  956  000019a0  8fc10000	lw	r1,(r30)
  957  000019a4  90220000	lbu	r2,(r1)
  958  000019a8  64410000	snei	r1,r2,#0
  959  000019ac  1420000c	bnez	r1,L57_LF2
  960  000019b0  54000000	nop; delay slot nop
  961  000019b4  08000040	j	L56_LF2
  962  000019b8  54000000	nop; delay slot nop
  963  000019bc          	L57_LF2:
  964  000019bc  8fc10000	lw	r1,(r30)
  965  000019c0  90220000	lbu	r2,(r1)
  966  000019c4  8fc10004	lw	r1,4(r30)
  967  000019c8  00411028	seq	r2,r2,r1
  968  000019cc  10400010	beqz	r2,L58_LF2
  969  000019d0  54000000	nop; delay slot nop
  970  000019d4  8fc10000	lw	r1,(r30)
  971  000019d8  08000028	j	L54_LF2
  972  000019dc  54000000	nop; delay slot nop
  973  000019e0          	L58_LF2:
  974  000019e0  8fc20000	lw	r2,(r30)
  975  000019e4  20410001	addi	r1,r2,#1
  976  000019e8  00011020	add	r2,r0,r1
  977  000019ec  afc20000	sw	(r30),r2
  978  000019f0  0bffffac	j	L55_LF2
  979  000019f4  54000000	nop; delay slot nop
  980  000019f8          	L56_LF2:
  981  000019f8  20010000	addi	r1,r0,#0
  982  000019fc  08000004	j	L54_LF2
  983  00001a00  54000000	nop; delay slot nop
  984  00001a04          	L54_LF2:
  985  00001a04  8fa20000	lw	r2,0(r29)
  986  00001a08  8fdffff8	lw	r31,-8(r30)
  987  00001a0c  001ee820	add	r29,r0,r30
  988  00001a10  8fdefffc	lw	r30,-4(r30)
  989  00001a14  4be00000	jr	r31
  990  00001a18  54000000	nop
  991  00001a1c          	.endproc _dindex
  992  00001a1c          	.align 2
  993  00001a1c          	.proc _ditoa
  994  00001a1c          	.global _ditoa
  995  00001a1c          	_ditoa:
  996                      ;  Function 'ditoa'; 8 bytes of locals, 2 regs to save.
  997  00001a1c  afbefffc	sw	-4(r29),r30; push fp
  998  00001a20  001df020	add	r30,r0,r29; fp = sp
  999  00001a24  afbffff8	sw	-8(r29),r31; push ret addr
 1000  00001a28  2fbd0018	subui	r29,r29,#24; alloc local storage
 1001  00001a2c  afa20000	sw	0(r29),r2
 1002  00001a30  afa30004	sw	4(r29),r3
 1003  00001a34  8fc10000	lw	r1,(r30)
 1004  00001a38  68220000	slti	r2,r1,#0
 1005  00001a3c  1040002c	beqz	r2,L60_LF2
 1006  00001a40  54000000	nop; delay slot nop
 1007  00001a44  8fc10004	lw	r1,4(r30)
 1008  00001a48  20220001	addi	r2,r1,#1
 1009  00001a4c  afc20004	sw	4(r30),r2
 1010  00001a50  2002002d	addi	r2,r0,(#0x2d)&0xff
 1011  00001a54  a0220000	sb	(r1),r2
 1012  00001a58  8fc10000	lw	r1,(r30)
 1013  00001a5c  00011022	sub	r2,r0,r1
 1014  00001a60  afc20000	sw	(r30),r2
 1015  00001a64  08000118	j	L61_LF2
 1016  00001a68  54000000	nop; delay slot nop
 1017  00001a6c          	L60_LF2:
 1018  00001a6c  8fc10000	lw	r1,(r30)
 1019  00001a70  64220000	snei	r2,r1,#0
 1020  00001a74  14400020	bnez	r2,L62_LF2
 1021  00001a78  54000000	nop; delay slot nop
 1022  00001a7c  8fc10004	lw	r1,4(r30)
 1023  00001a80  20220001	addi	r2,r1,#1
 1024  00001a84  afc20004	sw	4(r30),r2
 1025  00001a88  20020030	addi	r2,r0,(#0x30)&0xff
 1026  00001a8c  a0220000	sb	(r1),r2
 1027  00001a90  080000ec	j	L61_LF2
 1028  00001a94  54000000	nop; delay slot nop
 1029  00001a98          	L62_LF2:
 1030  00001a98  20010001	addi	r1,r0,#1
 1031  00001a9c  afc1fff4	sw	-12(r30),r1
 1032  00001aa0          	L64_LF2:
 1033  00001aa0  8fc1fff4	lw	r1,-12(r30)
 1034  00001aa4  8fc20000	lw	r2,(r30)
 1035  00001aa8  0022082c	sle	r1,r1,r2
 1036  00001aac  1420000c	bnez	r1,L66_LF2
 1037  00001ab0  54000000	nop; delay slot nop
 1038  00001ab4  08000024	j	L65_LF2
 1039  00001ab8  54000000	nop; delay slot nop
 1040  00001abc          	L67_LF2:
 1041  00001abc          	L66_LF2:
 1042  00001abc  8fc1fff4	lw	r1,-12(r30)
 1043  00001ac0  00011820	add	r3,r0,r1
 1044  00001ac4  50620002	slli	r2,r3,#0x2
 1045  00001ac8  00411020	add	r2,r2,r1
 1046  00001acc  50410001	slli	r1,r2,#0x1
 1047  00001ad0  afc1fff4	sw	-12(r30),r1
 1048  00001ad4  0bffffc8	j	L64_LF2
 1049  00001ad8  54000000	nop; delay slot nop
 1050  00001adc          	L65_LF2:
 1051  00001adc  54000000	nop
 1052  00001ae0          	L68_LF2:
 1053  00001ae0  8fc1fff4	lw	r1,-12(r30)
 1054  00001ae4  2002000a	addi	r2,r0,#10
 1055  00001ae8  00200035	movi2fp	f0,r1
 1056  00001aec  00400835	movi2fp	f1,r2
 1057  00001af0  0401000f	div	f0,f0,f1
 1058  00001af4  00000834	movfp2i	r1,f0
 1059  00001af8  afc1fff4	sw	-12(r30),r1
 1060  00001afc  8fc10004	lw	r1,4(r30)
 1061  00001b00  20220001	addi	r2,r1,#1
 1062  00001b04  afc20004	sw	4(r30),r2
 1063  00001b08  8fc20000	lw	r2,(r30)
 1064  00001b0c  8fc3fff4	lw	r3,-12(r30)
 1065  00001b10  00400035	movi2fp	f0,r2
 1066  00001b14  00600835	movi2fp	f1,r3
 1067  00001b18  0401000f	div	f0,f0,f1
 1068  00001b1c  00001034	movfp2i	r2,f0
 1069  00001b20  00021820	add	r3,r0,r2
 1070  00001b24  20620030	addi	r2,r3,#48
 1071  00001b28  a0220000	sb	(r1),r2
 1072  00001b2c  8fc10000	lw	r1,(r30)
 1073  00001b30  8fc3fff4	lw	r3,-12(r30)
 1074  00001b34  00200035	movi2fp	f0,r1
 1075  00001b38  00600835	movi2fp	f1,r3
 1076  00001b3c  0401000f	div	f0,f0,f1
 1077  00001b40  00001034	movfp2i	r2,f0
 1078  00001b44  8fc3fff4	lw	r3,-12(r30)
 1079  00001b48  00400035	movi2fp	f0,r2
 1080  00001b4c  00600835	movi2fp	f1,r3
 1081  00001b50  0401000e	mult	f0,f0,f1
 1082  00001b54  00001034	movfp2i	r2,f0
 1083  00001b58  00220822	sub	r1,r1,r2
 1084  00001b5c  afc10000	sw	(r30),r1
 1085  00001b60          	L70_LF2:
 1086  00001b60  8fc1fff4	lw	r1,-12(r30)
 1087  00001b64  6c220001	sgti	r2,r1,#1
 1088  00001b68  1440000c	bnez	r2,L71_LF2
 1089  00001b6c  54000000	nop; delay slot nop
 1090  00001b70  0800000c	j	L61_LF2
 1091  00001b74  54000000	nop; delay slot nop
 1092  00001b78          	L71_LF2:
 1093  00001b78  0bffff64	j	L68_LF2
 1094  00001b7c  54000000	nop; delay slot nop
 1095  00001b80          	L69_LF2:
 1096  00001b80          	L63_LF2:
 1097  00001b80          	L61_LF2:
 1098  00001b80  8fc10004	lw	r1,4(r30)
 1099  00001b84  20020000	addi	r2,r0,(#0x0)&0xff
 1100  00001b88  a0220000	sb	(r1),r2
 1101  00001b8c          	L59_LF2:
 1102  00001b8c  8fa20000	lw	r2,0(r29)
 1103  00001b90  8fa30004	lw	r3,4(r29)
 1104  00001b94  8fdffff8	lw	r31,-8(r30)
 1105  00001b98  001ee820	add	r29,r0,r30
 1106  00001b9c  8fdefffc	lw	r30,-4(r30)
 1107  00001ba0  4be00000	jr	r31
 1108  00001ba4  54000000	nop
 1109  00001ba8          	.endproc _ditoa
 1110  00001ba8          	.align 2
 1111  00001ba8          	.proc _dstrtol
 1112  00001ba8          	.global _dstrtol
 1113  00001ba8          	_dstrtol:
 1114                      ;  Function 'dstrtol'; 16 bytes of locals, 1 regs to save.
 1115  00001ba8  afbefffc	sw	-4(r29),r30; push fp
 1116  00001bac  001df020	add	r30,r0,r29; fp = sp
 1117  00001bb0  afbffff8	sw	-8(r29),r31; push ret addr
 1118  00001bb4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1119  00001bb8  afa20000	sw	0(r29),r2
 1120  00001bbc  20010000	addi	r1,r0,#0
 1121  00001bc0  afc1fff4	sw	-12(r30),r1
 1122  00001bc4          	L73_LF2:
 1123  00001bc4  8fc10000	lw	r1,(r30)
 1124  00001bc8  90220000	lbu	r2,(r1)
 1125  00001bcc  60410020	seqi	r1,r2,#32
 1126  00001bd0  14200034	bnez	r1,L75_LF2
 1127  00001bd4  54000000	nop; delay slot nop
 1128  00001bd8  8fc10000	lw	r1,(r30)
 1129  00001bdc  90220000	lbu	r2,(r1)
 1130  00001be0  60410009	seqi	r1,r2,#9
 1131  00001be4  14200020	bnez	r1,L75_LF2
 1132  00001be8  54000000	nop; delay slot nop
 1133  00001bec  8fc10000	lw	r1,(r30)
 1134  00001bf0  90220000	lbu	r2,(r1)
 1135  00001bf4  6041000a	seqi	r1,r2,#10
 1136  00001bf8  1420000c	bnez	r1,L75_LF2
 1137  00001bfc  54000000	nop; delay slot nop
 1138  00001c00  0800001c	j	L74_LF2
 1139  00001c04  54000000	nop; delay slot nop
 1140  00001c08          	L75_LF2:
 1141  00001c08  8fc20000	lw	r2,(r30)
 1142  00001c0c  20410001	addi	r1,r2,#1
 1143  00001c10  00011020	add	r2,r0,r1
 1144  00001c14  afc20000	sw	(r30),r2
 1145  00001c18  0bffffa8	j	L73_LF2
 1146  00001c1c  54000000	nop; delay slot nop
 1147  00001c20          	L74_LF2:
 1148  00001c20  8fc10004	lw	r1,4(r30)
 1149  00001c24  64220000	snei	r2,r1,#0
 1150  00001c28  10400010	beqz	r2,L76_LF2
 1151  00001c2c  54000000	nop; delay slot nop
 1152  00001c30  8fc10004	lw	r1,4(r30)
 1153  00001c34  8fc20000	lw	r2,(r30)
 1154  00001c38  ac220000	sw	(r1),r2
 1155  00001c3c          	L76_LF2:
 1156  00001c3c  8fc10000	lw	r1,(r30)
 1157  00001c40  90220000	lbu	r2,(r1)
 1158  00001c44  64410000	snei	r1,r2,#0
 1159  00001c48  14200010	bnez	r1,L77_LF2
 1160  00001c4c  54000000	nop; delay slot nop
 1161  00001c50  8fc1fff4	lw	r1,-12(r30)
 1162  00001c54  08000294	j	L72_LF2
 1163  00001c58  54000000	nop; delay slot nop
 1164  00001c5c          	L77_LF2:
 1165  00001c5c  8fc10000	lw	r1,(r30)
 1166  00001c60  90220000	lbu	r2,(r1)
 1167  00001c64  6041002d	seqi	r1,r2,#45
 1168  00001c68  10200024	beqz	r1,L78_LF2
 1169  00001c6c  54000000	nop; delay slot nop
 1170  00001c70  2001ffff	addi	r1,r0,#-1
 1171  00001c74  afc1ffec	sw	-20(r30),r1
 1172  00001c78  8fc20000	lw	r2,(r30)
 1173  00001c7c  20410001	addi	r1,r2,#1
 1174  00001c80  00011020	add	r2,r0,r1
 1175  00001c84  afc20000	sw	(r30),r2
 1176  00001c88  0800000c	j	L79_LF2
 1177  00001c8c  54000000	nop; delay slot nop
 1178  00001c90          	L78_LF2:
 1179  00001c90  20010001	addi	r1,r0,#1
 1180  00001c94  afc1ffec	sw	-20(r30),r1
 1181  00001c98          	L79_LF2:
 1182  00001c98  8fc10008	lw	r1,8(r30)
 1183  00001c9c  64220000	snei	r2,r1,#0
 1184  00001ca0  14400090	bnez	r2,L80_LF2
 1185  00001ca4  54000000	nop; delay slot nop
 1186  00001ca8  8fc10000	lw	r1,(r30)
 1187  00001cac  90220000	lbu	r2,(r1)
 1188  00001cb0  60410030	seqi	r1,r2,#48
 1189  00001cb4  10200074	beqz	r1,L81_LF2
 1190  00001cb8  54000000	nop; delay slot nop
 1191  00001cbc  8fc20000	lw	r2,(r30)
 1192  00001cc0  20410001	addi	r1,r2,#1
 1193  00001cc4  00011020	add	r2,r0,r1
 1194  00001cc8  afc20000	sw	(r30),r2
 1195  00001ccc  8fc10000	lw	r1,(r30)
 1196  00001cd0  90220000	lbu	r2,(r1)
 1197  00001cd4  60410078	seqi	r1,r2,#120
 1198  00001cd8  14200020	bnez	r1,L83_LF2
 1199  00001cdc  54000000	nop; delay slot nop
 1200  00001ce0  8fc10000	lw	r1,(r30)
 1201  00001ce4  90220000	lbu	r2,(r1)
 1202  00001ce8  60410058	seqi	r1,r2,#88
 1203  00001cec  1420000c	bnez	r1,L83_LF2
 1204  00001cf0  54000000	nop; delay slot nop
 1205  00001cf4  08000024	j	L82_LF2
 1206  00001cf8  54000000	nop; delay slot nop
 1207  00001cfc          	L83_LF2:
 1208  00001cfc  20010010	addi	r1,r0,#16
 1209  00001d00  afc10008	sw	8(r30),r1
 1210  00001d04  8fc20000	lw	r2,(r30)
 1211  00001d08  20410001	addi	r1,r2,#1
 1212  00001d0c  00011020	add	r2,r0,r1
 1213  00001d10  afc20000	sw	(r30),r2
 1214  00001d14  0800000c	j	L84_LF2
 1215  00001d18  54000000	nop; delay slot nop
 1216  00001d1c          	L82_LF2:
 1217  00001d1c  20010008	addi	r1,r0,#8
 1218  00001d20  afc10008	sw	8(r30),r1
 1219  00001d24          	L84_LF2:
 1220  00001d24  0800000c	j	L80_LF2
 1221  00001d28  54000000	nop; delay slot nop
 1222  00001d2c          	L81_LF2:
 1223  00001d2c  2001000a	addi	r1,r0,#10
 1224  00001d30  afc10008	sw	8(r30),r1
 1225  00001d34          	L85_LF2:
 1226  00001d34          	L80_LF2:
 1227  00001d34  8fc10008	lw	r1,8(r30)
 1228  00001d38  70220000	slei	r2,r1,#0
 1229  00001d3c  1440001c	bnez	r2,L87_LF2
 1230  00001d40  54000000	nop; delay slot nop
 1231  00001d44  8fc10008	lw	r1,8(r30)
 1232  00001d48  6c220010	sgti	r2,r1,#16
 1233  00001d4c  1440000c	bnez	r2,L87_LF2
 1234  00001d50  54000000	nop; delay slot nop
 1235  00001d54  08000010	j	L86_LF2
 1236  00001d58  54000000	nop; delay slot nop
 1237  00001d5c          	L87_LF2:
 1238  00001d5c  8fc1fff4	lw	r1,-12(r30)
 1239  00001d60  08000188	j	L72_LF2
 1240  00001d64  54000000	nop; delay slot nop
 1241  00001d68          	L86_LF2:
 1242  00001d68  54000000	nop
 1243  00001d6c          	L88_LF2:
 1244  00001d6c  8fc10000	lw	r1,(r30)
 1245  00001d70  90220000	lbu	r2,(r1)
 1246  00001d74  6c41002f	sgtui	r1,r2,#47
 1247  00001d78  10200030	beqz	r1,L91_LF2
 1248  00001d7c  54000000	nop; delay slot nop
 1249  00001d80  8fc10000	lw	r1,(r30)
 1250  00001d84  90220000	lbu	r2,(r1)
 1251  00001d88  70410039	sleui	r1,r2,#57
 1252  00001d8c  1020001c	beqz	r1,L91_LF2
 1253  00001d90  54000000	nop; delay slot nop
 1254  00001d94  8fc10000	lw	r1,(r30)
 1255  00001d98  90220000	lbu	r2,(r1)
 1256  00001d9c  2041ffd0	addi	r1,r2,#-48
 1257  00001da0  afc1fff0	sw	-16(r30),r1
 1258  00001da4  0800008c	j	L92_LF2
 1259  00001da8  54000000	nop; delay slot nop
 1260  00001dac          	L91_LF2:
 1261  00001dac  8fc10000	lw	r1,(r30)
 1262  00001db0  90220000	lbu	r2,(r1)
 1263  00001db4  6c410060	sgtui	r1,r2,#96
 1264  00001db8  10200030	beqz	r1,L93_LF2
 1265  00001dbc  54000000	nop; delay slot nop
 1266  00001dc0  8fc10000	lw	r1,(r30)
 1267  00001dc4  90220000	lbu	r2,(r1)
 1268  00001dc8  7041007a	sleui	r1,r2,#122
 1269  00001dcc  1020001c	beqz	r1,L93_LF2
 1270  00001dd0  54000000	nop; delay slot nop
 1271  00001dd4  8fc10000	lw	r1,(r30)
 1272  00001dd8  90220000	lbu	r2,(r1)
 1273  00001ddc  2041ffa9	addi	r1,r2,#-87
 1274  00001de0  afc1fff0	sw	-16(r30),r1
 1275  00001de4  0800004c	j	L92_LF2
 1276  00001de8  54000000	nop; delay slot nop
 1277  00001dec          	L93_LF2:
 1278  00001dec  8fc10000	lw	r1,(r30)
 1279  00001df0  90220000	lbu	r2,(r1)
 1280  00001df4  6c410040	sgtui	r1,r2,#64
 1281  00001df8  10200030	beqz	r1,L95_LF2
 1282  00001dfc  54000000	nop; delay slot nop
 1283  00001e00  8fc10000	lw	r1,(r30)
 1284  00001e04  90220000	lbu	r2,(r1)
 1285  00001e08  7041005a	sleui	r1,r2,#90
 1286  00001e0c  1020001c	beqz	r1,L95_LF2
 1287  00001e10  54000000	nop; delay slot nop
 1288  00001e14  8fc10000	lw	r1,(r30)
 1289  00001e18  90220000	lbu	r2,(r1)
 1290  00001e1c  2041ffc9	addi	r1,r2,#-55
 1291  00001e20  afc1fff0	sw	-16(r30),r1
 1292  00001e24  0800000c	j	L92_LF2
 1293  00001e28  54000000	nop; delay slot nop
 1294  00001e2c          	L95_LF2:
 1295  00001e2c  200103e8	addi	r1,r0,#1000
 1296  00001e30  afc1fff0	sw	-16(r30),r1
 1297  00001e34          	L96_LF2:
 1298  00001e34          	L94_LF2:
 1299  00001e34          	L92_LF2:
 1300  00001e34  8fc1fff0	lw	r1,-16(r30)
 1301  00001e38  8fc20008	lw	r2,8(r30)
 1302  00001e3c  0022082a	slt	r1,r1,r2
 1303  00001e40  10200040	beqz	r1,L90_LF2
 1304  00001e44  54000000	nop; delay slot nop
 1305  00001e48  8fc1fff4	lw	r1,-12(r30)
 1306  00001e4c  8fc20008	lw	r2,8(r30)
 1307  00001e50  00200035	movi2fp	f0,r1
 1308  00001e54  00400835	movi2fp	f1,r2
 1309  00001e58  0401000e	mult	f0,f0,f1
 1310  00001e5c  00000834	movfp2i	r1,f0
 1311  00001e60  afc1fff4	sw	-12(r30),r1
 1312  00001e64  8fc1fff4	lw	r1,-12(r30)
 1313  00001e68  8fc2fff0	lw	r2,-16(r30)
 1314  00001e6c  00220820	add	r1,r1,r2
 1315  00001e70  afc1fff4	sw	-12(r30),r1
 1316  00001e74  8fc20000	lw	r2,(r30)
 1317  00001e78  20410001	addi	r1,r2,#1
 1318  00001e7c  00011020	add	r2,r0,r1
 1319  00001e80  afc20000	sw	(r30),r2
 1320  00001e84          	L97_LF2:
 1321  00001e84          	L90_LF2:
 1322  00001e84  8fc1fff0	lw	r1,-16(r30)
 1323  00001e88  8fc20008	lw	r2,8(r30)
 1324  00001e8c  0022082a	slt	r1,r1,r2
 1325  00001e90  1420000c	bnez	r1,L98_LF2
 1326  00001e94  54000000	nop; delay slot nop
 1327  00001e98  0800000c	j	L89_LF2
 1328  00001e9c  54000000	nop; delay slot nop
 1329  00001ea0          	L98_LF2:
 1330  00001ea0  0bfffec8	j	L88_LF2
 1331  00001ea4  54000000	nop; delay slot nop
 1332  00001ea8          	L89_LF2:
 1333  00001ea8  8fc10004	lw	r1,4(r30)
 1334  00001eac  64220000	snei	r2,r1,#0
 1335  00001eb0  10400010	beqz	r2,L99_LF2
 1336  00001eb4  54000000	nop; delay slot nop
 1337  00001eb8  8fc10004	lw	r1,4(r30)
 1338  00001ebc  8fc20000	lw	r2,(r30)
 1339  00001ec0  ac220000	sw	(r1),r2
 1340  00001ec4          	L99_LF2:
 1341  00001ec4  8fc1fff4	lw	r1,-12(r30)
 1342  00001ec8  8fc2ffec	lw	r2,-20(r30)
 1343  00001ecc  00200035	movi2fp	f0,r1
 1344  00001ed0  00400835	movi2fp	f1,r2
 1345  00001ed4  0401000e	mult	f0,f0,f1
 1346  00001ed8  00000834	movfp2i	r1,f0
 1347  00001edc  afc1fff4	sw	-12(r30),r1
 1348  00001ee0  8fc1fff4	lw	r1,-12(r30)
 1349  00001ee4  08000004	j	L72_LF2
 1350  00001ee8  54000000	nop; delay slot nop
 1351  00001eec          	L72_LF2:
 1352  00001eec  8fa20000	lw	r2,0(r29)
 1353  00001ef0  8fdffff8	lw	r31,-8(r30)
 1354  00001ef4  001ee820	add	r29,r0,r30
 1355  00001ef8  8fdefffc	lw	r30,-4(r30)
 1356  00001efc  4be00000	jr	r31
 1357  00001f00  54000000	nop
 1358  00001f04          	.endproc _dstrtol
 1359  00001f04          	.align 2
 1360  00001f04          	.proc _bcopy
 1361  00001f04          	.global _bcopy
 1362  00001f04          	_bcopy:
 1363                      ;  Function 'bcopy'; 0 bytes of locals, 2 regs to save.
 1364  00001f04  afbefffc	sw	-4(r29),r30; push fp
 1365  00001f08  001df020	add	r30,r0,r29; fp = sp
 1366  00001f0c  afbffff8	sw	-8(r29),r31; push ret addr
 1367  00001f10  2fbd0010	subui	r29,r29,#16; alloc local storage
 1368  00001f14  afa20000	sw	0(r29),r2
 1369  00001f18  afa30004	sw	4(r29),r3
 1370  00001f1c  54000000	nop
 1371  00001f20          	L101_LF2:
 1372  00001f20  8fc10008	lw	r1,8(r30)
 1373  00001f24  2022ffff	addi	r2,r1,#-1
 1374  00001f28  afc20008	sw	8(r30),r2
 1375  00001f2c  6c210000	sgti	r1,r1,#0
 1376  00001f30  1420000c	bnez	r1,L103_LF2
 1377  00001f34  54000000	nop; delay slot nop
 1378  00001f38  0800002c	j	L102_LF2
 1379  00001f3c  54000000	nop; delay slot nop
 1380  00001f40          	L103_LF2:
 1381  00001f40  8fc10004	lw	r1,4(r30)
 1382  00001f44  20220001	addi	r2,r1,#1
 1383  00001f48  afc20004	sw	4(r30),r2
 1384  00001f4c  8fc20000	lw	r2,(r30)
 1385  00001f50  20430001	addi	r3,r2,#1
 1386  00001f54  afc30000	sw	(r30),r3
 1387  00001f58  80420000	lb	r2,(r2)
 1388  00001f5c  a0220000	sb	(r1),r2
 1389  00001f60  0bffffbc	j	L101_LF2
 1390  00001f64  54000000	nop; delay slot nop
 1391  00001f68          	L102_LF2:
 1392  00001f68          	L100_LF2:
 1393  00001f68  8fa20000	lw	r2,0(r29)
 1394  00001f6c  8fa30004	lw	r3,4(r29)
 1395  00001f70  8fdffff8	lw	r31,-8(r30)
 1396  00001f74  001ee820	add	r29,r0,r30
 1397  00001f78  8fdefffc	lw	r30,-4(r30)
 1398  00001f7c  4be00000	jr	r31
 1399  00001f80  54000000	nop
 1400  00001f84          	.endproc _bcopy
 1401  00001f84          	.align 2
 1402  00001f84          	.proc _bzero
 1403  00001f84          	.global _bzero
 1404  00001f84          	_bzero:
 1405                      ;  Function 'bzero'; 0 bytes of locals, 1 regs to save.
 1406  00001f84  afbefffc	sw	-4(r29),r30; push fp
 1407  00001f88  001df020	add	r30,r0,r29; fp = sp
 1408  00001f8c  afbffff8	sw	-8(r29),r31; push ret addr
 1409  00001f90  2fbd0010	subui	r29,r29,#16; alloc local storage
 1410  00001f94  afa20000	sw	0(r29),r2
 1411  00001f98  54000000	nop
 1412  00001f9c          	L105_LF2:
 1413  00001f9c  8fc10004	lw	r1,4(r30)
 1414  00001fa0  2022ffff	addi	r2,r1,#-1
 1415  00001fa4  afc20004	sw	4(r30),r2
 1416  00001fa8  6c210000	sgti	r1,r1,#0
 1417  00001fac  1420000c	bnez	r1,L107_LF2
 1418  00001fb0  54000000	nop; delay slot nop
 1419  00001fb4  08000020	j	L106_LF2
 1420  00001fb8  54000000	nop; delay slot nop
 1421  00001fbc          	L107_LF2:
 1422  00001fbc  8fc10000	lw	r1,(r30)
 1423  00001fc0  20220001	addi	r2,r1,#1
 1424  00001fc4  afc20000	sw	(r30),r2
 1425  00001fc8  20020000	addi	r2,r0,(#0x0)&0xff
 1426  00001fcc  a0220000	sb	(r1),r2
 1427  00001fd0  0bffffc8	j	L105_LF2
 1428  00001fd4  54000000	nop; delay slot nop
 1429  00001fd8          	L106_LF2:
 1430  00001fd8          	L104_LF2:
 1431  00001fd8  8fa20000	lw	r2,0(r29)
 1432  00001fdc  8fdffff8	lw	r31,-8(r30)
 1433  00001fe0  001ee820	add	r29,r0,r30
 1434  00001fe4  8fdefffc	lw	r30,-4(r30)
 1435  00001fe8  4be00000	jr	r31
 1436  00001fec  54000000	nop
 1437  00001ff0          	.endproc _bzero
 1438  00001ff0          	.align 2
 1439  00001ff0          	.proc _min
 1440  00001ff0          	.global _min
 1441  00001ff0          	_min:
 1442                      ;  Function 'min'; 0 bytes of locals, 2 regs to save.
 1443  00001ff0  afbefffc	sw	-4(r29),r30; push fp
 1444  00001ff4  001df020	add	r30,r0,r29; fp = sp
 1445  00001ff8  afbffff8	sw	-8(r29),r31; push ret addr
 1446  00001ffc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1447  00002000  afa20000	sw	0(r29),r2
 1448  00002004  afa30004	sw	4(r29),r3
 1449  00002008  8fc10000	lw	r1,(r30)
 1450  0000200c  8fc20004	lw	r2,4(r30)
 1451  00002010  0022182c	sle	r3,r1,r2
 1452  00002014  14600008	bnez	r3,L109_LF2
 1453  00002018  54000000	nop; delay slot nop
 1454  0000201c  8fc10004	lw	r1,4(r30)
 1455  00002020          	L109_LF2:
 1456  00002020  08000004	j	L108_LF2
 1457  00002024  54000000	nop; delay slot nop
 1458  00002028          	L108_LF2:
 1459  00002028  8fa20000	lw	r2,0(r29)
 1460  0000202c  8fa30004	lw	r3,4(r29)
 1461  00002030  8fdffff8	lw	r31,-8(r30)
 1462  00002034  001ee820	add	r29,r0,r30
 1463  00002038  8fdefffc	lw	r30,-4(r30)
 1464  0000203c  4be00000	jr	r31
 1465  00002040  54000000	nop
 1466  00002044          	.endproc _min
 1467  00002044          	.align 2
 1468  00002044          	.proc _max
 1469  00002044          	.global _max
 1470  00002044          	_max:
 1471                      ;  Function 'max'; 0 bytes of locals, 2 regs to save.
 1472  00002044  afbefffc	sw	-4(r29),r30; push fp
 1473  00002048  001df020	add	r30,r0,r29; fp = sp
 1474  0000204c  afbffff8	sw	-8(r29),r31; push ret addr
 1475  00002050  2fbd0010	subui	r29,r29,#16; alloc local storage
 1476  00002054  afa20000	sw	0(r29),r2
 1477  00002058  afa30004	sw	4(r29),r3
 1478  0000205c  8fc10000	lw	r1,(r30)
 1479  00002060  8fc20004	lw	r2,4(r30)
 1480  00002064  0022182d	sge	r3,r1,r2
 1481  00002068  14600008	bnez	r3,L111_LF2
 1482  0000206c  54000000	nop; delay slot nop
 1483  00002070  8fc10004	lw	r1,4(r30)
 1484  00002074          	L111_LF2:
 1485  00002074  08000004	j	L110_LF2
 1486  00002078  54000000	nop; delay slot nop
 1487  0000207c          	L110_LF2:
 1488  0000207c  8fa20000	lw	r2,0(r29)
 1489  00002080  8fa30004	lw	r3,4(r29)
 1490  00002084  8fdffff8	lw	r31,-8(r30)
 1491  00002088  001ee820	add	r29,r0,r30
 1492  0000208c  8fdefffc	lw	r30,-4(r30)
 1493  00002090  4be00000	jr	r31
 1494  00002094  54000000	nop
 1495  00002098          	.endproc _max
 1496                      ;;; Ethan L. Miller, 1999.  Released to the public domain
 1497                      ;;;
 1498                      ;;; Most of the traps are called in files from libtraps.
 1501  00002098          	.align 2
 1502  00002098          	.proc _exit
 1503  00002098          	.global _exit
 1504  00002098          	_exit:
 1505  00002098  44000300	trap	#0x300
 1506  0000209c  4be00000	jr	r31
 1507  000020a0  54000000	nop
 1508  000020a4          	.endproc _exit
 1510                      ; for the benefit of gcc.
 1511  000020a4          	.proc ___main
 1512  000020a4          	.global ___main
 1513  000020a4          	___main:
 1514  000020a4  4be00000	jr	r31
 1515  000020a8  54000000	nop
 1516  000020ac          	.endproc ___main
 1517                      ;
 1518                      ; Stub functions for DLX traps.
 1519                      ;
 1520                      ; Aaron Sawdey 1996; released to the Public Domain.
 1521                      ;
 1523  000020ac          	.proc _printf
 1524  000020ac          	.global _printf
 1525  000020ac          	_printf:
 1526  000020ac  44002001	trap	#0x2001
 1527  000020b0  4be00000	jr	r31
 1528  000020b4  54000000	nop
 1529  000020b8          	.endproc _printf
 1531  000020b8          	.text
 1532  000020b8          	.global _etext
 1533  000020b8          	_etext:
 1534  000020b8          	.align 3
 1535  000020b8          	.data
 1536  000030f3          	.global _edata
 1537  000030f3          	_edata:
